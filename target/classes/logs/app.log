2022-02-10 13:31:10 INFO  SparkContext:54 - Running Spark version 2.4.8
2022-02-10 13:31:10 DEBUG MutableMetricsFactory:42 - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.loginSuccess with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, value=[Rate of successful kerberos logins and latency (milliseconds)], valueName=Time)
2022-02-10 13:31:10 DEBUG MutableMetricsFactory:42 - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.loginFailure with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, value=[Rate of failed kerberos logins and latency (milliseconds)], valueName=Time)
2022-02-10 13:31:10 DEBUG MutableMetricsFactory:42 - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.getGroups with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, value=[GetGroups], valueName=Time)
2022-02-10 13:31:10 DEBUG MetricsSystemImpl:231 - UgiMetrics, User and group related metrics
2022-02-10 13:31:10 DEBUG KerberosName:88 - Kerberos krb5 configuration not found, setting default realm to empty
2022-02-10 13:31:10 DEBUG Groups:291 -  Creating new Groups object
2022-02-10 13:31:10 DEBUG NativeCodeLoader:46 - Trying to load the custom-built native-hadoop library...
2022-02-10 13:31:10 DEBUG NativeCodeLoader:50 - Loaded the native-hadoop library
2022-02-10 13:31:10 DEBUG JniBasedUnixGroupsMapping:50 - Using JniBasedUnixGroupsMapping for Group resolution
2022-02-10 13:31:10 DEBUG JniBasedUnixGroupsMappingWithFallback:45 - Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMapping
2022-02-10 13:31:10 ERROR Shell:396 - Failed to locate the winutils binary in the hadoop binary path
java.io.IOException: Could not locate executable C:\Users\Anukul Thalkar\hadoop\bin\bin\winutils.exe in the Hadoop binaries.
	at org.apache.hadoop.util.Shell.getQualifiedBinPath(Shell.java:378)
	at org.apache.hadoop.util.Shell.getWinUtilsPath(Shell.java:393)
	at org.apache.hadoop.util.Shell.<clinit>(Shell.java:386)
	at org.apache.hadoop.util.StringUtils.<clinit>(StringUtils.java:79)
	at org.apache.hadoop.security.Groups.parseStaticMapping(Groups.java:116)
	at org.apache.hadoop.security.Groups.<init>(Groups.java:93)
	at org.apache.hadoop.security.Groups.<init>(Groups.java:73)
	at org.apache.hadoop.security.Groups.getUserToGroupsMappingService(Groups.java:293)
	at org.apache.hadoop.security.UserGroupInformation.initialize(UserGroupInformation.java:283)
	at org.apache.hadoop.security.UserGroupInformation.ensureInitialized(UserGroupInformation.java:260)
	at org.apache.hadoop.security.UserGroupInformation.loginUserFromSubject(UserGroupInformation.java:789)
	at org.apache.hadoop.security.UserGroupInformation.getLoginUser(UserGroupInformation.java:774)
	at org.apache.hadoop.security.UserGroupInformation.getCurrentUser(UserGroupInformation.java:647)
	at org.apache.spark.util.Utils$$anonfun$getCurrentUserName$1.apply(Utils.scala:2422)
	at org.apache.spark.util.Utils$$anonfun$getCurrentUserName$1.apply(Utils.scala:2422)
	at scala.Option.getOrElse(Option.scala:121)
	at org.apache.spark.util.Utils$.getCurrentUserName(Utils.scala:2422)
	at org.apache.spark.SparkContext.<init>(SparkContext.scala:293)
	at org.apache.spark.SparkContext$.getOrCreate(SparkContext.scala:2526)
	at org.apache.spark.sql.SparkSession$Builder$$anonfun$7.apply(SparkSession.scala:930)
	at org.apache.spark.sql.SparkSession$Builder$$anonfun$7.apply(SparkSession.scala:921)
	at scala.Option.getOrElse(Option.scala:121)
	at org.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:921)
	at util.getSparkSession(util.java:4)
	at UseCase2.getOrders(UseCase2.java:19)
	at UseCase2.getOrdersCount(UseCase2.java:47)
	at UseCase2Test.validateOrders(UseCase2Test.java:7)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
2022-02-10 13:31:10 DEBUG Groups:103 - Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback; cacheTimeout=300000; warningDeltaMs=5000
2022-02-10 13:31:10 DEBUG UserGroupInformation:221 - hadoop login
2022-02-10 13:31:10 DEBUG UserGroupInformation:156 - hadoop login commit
2022-02-10 13:31:10 DEBUG UserGroupInformation:186 - using local user:NTUserPrincipal: Anukul Thalkar
2022-02-10 13:31:10 DEBUG UserGroupInformation:192 - Using user: "NTUserPrincipal: Anukul Thalkar" with name Anukul Thalkar
2022-02-10 13:31:10 DEBUG UserGroupInformation:202 - User entry: "Anukul Thalkar"
2022-02-10 13:31:10 DEBUG UserGroupInformation:825 - UGI loginUser:Anukul Thalkar (auth:SIMPLE)
2022-02-10 13:31:10 INFO  SparkContext:54 - Submitted application: cb9c6766-df7b-4266-8d2d-ca4fb1bfd271
2022-02-10 13:31:10 INFO  SecurityManager:54 - Changing view acls to: Anukul Thalkar
2022-02-10 13:31:10 INFO  SecurityManager:54 - Changing modify acls to: Anukul Thalkar
2022-02-10 13:31:10 INFO  SecurityManager:54 - Changing view acls groups to: 
2022-02-10 13:31:10 INFO  SecurityManager:54 - Changing modify acls groups to: 
2022-02-10 13:31:10 INFO  SecurityManager:54 - SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(Anukul Thalkar); groups with view permissions: Set(); users  with modify permissions: Set(Anukul Thalkar); groups with modify permissions: Set()
2022-02-10 13:31:11 DEBUG InternalLoggerFactory:45 - Using SLF4J as the default logging framework
2022-02-10 13:31:11 DEBUG InternalThreadLocalMap:56 - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2022-02-10 13:31:11 DEBUG InternalThreadLocalMap:59 - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2022-02-10 13:31:11 DEBUG MultithreadEventLoopGroup:44 - -Dio.netty.eventLoopThreads: 16
2022-02-10 13:31:11 DEBUG NioEventLoop:106 - -Dio.netty.noKeySetOptimization: false
2022-02-10 13:31:11 DEBUG NioEventLoop:107 - -Dio.netty.selectorAutoRebuildThreshold: 512
2022-02-10 13:31:11 DEBUG PlatformDependent:1003 - Platform: Windows
2022-02-10 13:31:11 DEBUG PlatformDependent0:396 - -Dio.netty.noUnsafe: false
2022-02-10 13:31:11 DEBUG PlatformDependent0:852 - Java version: 8
2022-02-10 13:31:11 DEBUG PlatformDependent0:121 - sun.misc.Unsafe.theUnsafe: available
2022-02-10 13:31:11 DEBUG PlatformDependent0:145 - sun.misc.Unsafe.copyMemory: available
2022-02-10 13:31:11 DEBUG PlatformDependent0:183 - java.nio.Buffer.address: available
2022-02-10 13:31:11 DEBUG PlatformDependent0:244 - direct buffer constructor: available
2022-02-10 13:31:11 DEBUG PlatformDependent0:314 - java.nio.Bits.unaligned: available, true
2022-02-10 13:31:11 DEBUG PlatformDependent0:379 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2022-02-10 13:31:11 DEBUG PlatformDependent0:386 - java.nio.DirectByteBuffer.<init>(long, int): available
2022-02-10 13:31:11 DEBUG PlatformDependent:1046 - sun.misc.Unsafe: available
2022-02-10 13:31:11 DEBUG PlatformDependent:1165 - -Dio.netty.tmpdir: C:\Users\ANUKUL~1\AppData\Local\Temp (java.io.tmpdir)
2022-02-10 13:31:11 DEBUG PlatformDependent:1244 - -Dio.netty.bitMode: 64 (sun.arch.data.model)
2022-02-10 13:31:11 DEBUG PlatformDependent:177 - -Dio.netty.maxDirectMemory: 3758096384 bytes
2022-02-10 13:31:11 DEBUG PlatformDependent:184 - -Dio.netty.uninitializedArrayAllocationThreshold: -1
2022-02-10 13:31:11 DEBUG CleanerJava6:92 - java.nio.ByteBuffer.cleaner(): available
2022-02-10 13:31:11 DEBUG PlatformDependent:204 - -Dio.netty.noPreferDirect: false
2022-02-10 13:31:11 DEBUG PlatformDependent:907 - org.jctools-core.MpscChunkedArrayQueue: available
2022-02-10 13:31:11 DEBUG ResourceLeakDetector:130 - -Dio.netty.leakDetection.level: simple
2022-02-10 13:31:11 DEBUG ResourceLeakDetector:131 - -Dio.netty.leakDetection.targetRecords: 4
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:156 - -Dio.netty.allocator.numHeapArenas: 16
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:157 - -Dio.netty.allocator.numDirectArenas: 16
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:159 - -Dio.netty.allocator.pageSize: 8192
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:164 - -Dio.netty.allocator.maxOrder: 11
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:168 - -Dio.netty.allocator.chunkSize: 16777216
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:169 - -Dio.netty.allocator.tinyCacheSize: 512
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:170 - -Dio.netty.allocator.smallCacheSize: 256
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:171 - -Dio.netty.allocator.normalCacheSize: 64
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:172 - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:173 - -Dio.netty.allocator.cacheTrimInterval: 8192
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:174 - -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:175 - -Dio.netty.allocator.useCacheForAllThreads: true
2022-02-10 13:31:11 DEBUG PooledByteBufAllocator:176 - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2022-02-10 13:31:11 DEBUG DefaultChannelId:79 - -Dio.netty.processId: 13288 (auto-detected)
2022-02-10 13:31:11 DEBUG NetUtil:139 - -Djava.net.preferIPv4Stack: false
2022-02-10 13:31:11 DEBUG NetUtil:140 - -Djava.net.preferIPv6Addresses: false
2022-02-10 13:31:11 DEBUG NetUtil:224 - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2022-02-10 13:31:11 DEBUG NetUtil:289 - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2022-02-10 13:31:11 DEBUG DefaultChannelId:101 - -Dio.netty.machineId: 7c:70:db:ff:fe:41:5e:f6 (auto-detected)
2022-02-10 13:31:11 DEBUG ByteBufUtil:86 - -Dio.netty.allocator.type: pooled
2022-02-10 13:31:11 DEBUG ByteBufUtil:95 - -Dio.netty.threadLocalDirectBufferSize: 0
2022-02-10 13:31:11 DEBUG ByteBufUtil:98 - -Dio.netty.maxThreadLocalCharBufferSize: 16384
2022-02-10 13:31:11 DEBUG TransportServer:141 - Shuffle server started on port: 53685
2022-02-10 13:31:11 INFO  Utils:54 - Successfully started service 'sparkDriver' on port 53685.
2022-02-10 13:31:11 DEBUG SparkEnv:58 - Using serializer: class org.apache.spark.serializer.JavaSerializer
2022-02-10 13:31:11 INFO  SparkEnv:54 - Registering MapOutputTracker
2022-02-10 13:31:11 DEBUG MapOutputTrackerMasterEndpoint:58 - init
2022-02-10 13:31:11 INFO  SparkEnv:54 - Registering BlockManagerMaster
2022-02-10 13:31:11 INFO  BlockManagerMasterEndpoint:54 - Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
2022-02-10 13:31:11 INFO  BlockManagerMasterEndpoint:54 - BlockManagerMasterEndpoint up
2022-02-10 13:31:11 INFO  DiskBlockManager:54 - Created local directory at C:\Users\Anukul Thalkar\AppData\Local\Temp\blockmgr-a1a65c11-4ecb-4bc7-b6cd-bf9d13d075ee
2022-02-10 13:31:11 DEBUG DiskBlockManager:58 - Adding shutdown hook
2022-02-10 13:31:11 DEBUG ShutdownHookManager:58 - Adding shutdown hook
2022-02-10 13:31:11 INFO  MemoryStore:54 - MemoryStore started with capacity 1970.4 MB
2022-02-10 13:31:11 INFO  SparkEnv:54 - Registering OutputCommitCoordinator
2022-02-10 13:31:11 DEBUG OutputCommitCoordinator$OutputCommitCoordinatorEndpoint:58 - init
2022-02-10 13:31:11 DEBUG SecurityManager:58 - Created SSL options for ui: SSLOptions{enabled=false, port=None, keyStore=None, keyStorePassword=None, trustStore=None, trustStorePassword=None, protocol=None, enabledAlgorithms=Set()}
2022-02-10 13:31:11 DEBUG log:159 - Logging to org.slf4j.impl.Log4jLoggerAdapter(org.spark_project.jetty.util.log) via org.spark_project.jetty.util.log.Slf4jLog
2022-02-10 13:31:11 INFO  log:169 - Logging initialized @2300ms to org.spark_project.jetty.util.log.Slf4jLog
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@2b58f754
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@66629f63{/,null,STOPPED} added {ServletHandler@6f80fafe{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@6f80fafe{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9==org.apache.spark.ui.JettyUtils$$anon$3@b7cf7b4d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@6f80fafe{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@6fff253c
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@6c6357f9{/,null,STOPPED} added {ServletHandler@591e58fa{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@591e58fa{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-3954d008==org.apache.spark.ui.JettyUtils$$anon$3@57891e45{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@591e58fa{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-3954d008,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@493dfb8e
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@5d25e6bb{/,null,STOPPED} added {ServletHandler@ce5a68e{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@ce5a68e{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-9d157ff==org.apache.spark.ui.JettyUtils$$anon$3@4f91a6bc{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@ce5a68e{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-9d157ff,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@2f162cc0
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@5df417a7{/,null,STOPPED} added {ServletHandler@7c041b41{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@7c041b41{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-7f69d591==org.apache.spark.ui.JettyUtils$$anon$3@45819e27{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@7c041b41{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-7f69d591,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@664a9613
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@5118388b{/,null,STOPPED} added {ServletHandler@15a902e7{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@15a902e7{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-7876d598==org.apache.spark.ui.JettyUtils$$anon$3@c5ad8a9c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@15a902e7{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-7876d598,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@4a3e3e8b
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@5af28b27{/,null,STOPPED} added {ServletHandler@71104a4{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@71104a4{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb==org.apache.spark.ui.JettyUtils$$anon$3@c4973a2c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@71104a4{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@3c9168dc
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@332a7fce{/,null,STOPPED} added {ServletHandler@549621f3{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@549621f3{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-54361a9==org.apache.spark.ui.JettyUtils$$anon$3@2a2ca7fb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@549621f3{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-54361a9,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@32232e55
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@5217f3d0{/,null,STOPPED} added {ServletHandler@37ebc9d8{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@37ebc9d8{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5==org.apache.spark.ui.JettyUtils$$anon$3@eec5b48c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@37ebc9d8{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@6fa590ba
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@6e9319f{/,null,STOPPED} added {ServletHandler@72e34f77{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@72e34f77{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098==org.apache.spark.ui.JettyUtils$$anon$3@c3d05377{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@72e34f77{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@389adf1d
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@77307458{/,null,STOPPED} added {ServletHandler@1fc0053e{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@1fc0053e{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e==org.apache.spark.ui.JettyUtils$$anon$3@e9917ca9{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@1fc0053e{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@18e7143f
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@f9b7332{/,null,STOPPED} added {ServletHandler@74cec793{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@74cec793{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e==org.apache.spark.ui.JettyUtils$$anon$3@304e982b{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@74cec793{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@4f8969b0
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@1bdf8190{/,null,STOPPED} added {ServletHandler@192f2f27{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@192f2f27{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-8a589a2==org.apache.spark.ui.JettyUtils$$anon$3@15c6a372{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@192f2f27{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-8a589a2,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@6b5176f2
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@b672aa8{/,null,STOPPED} added {ServletHandler@2fab4aff{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@2fab4aff{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-ec0c838==org.apache.spark.ui.JettyUtils$$anon$3@6575cc40{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@2fab4aff{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-ec0c838,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@6e46d9f4
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@5cc69cfe{/,null,STOPPED} added {ServletHandler@29cfd92b{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@29cfd92b{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-21c64522==org.apache.spark.ui.JettyUtils$$anon$3@96fb741f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@29cfd92b{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-21c64522,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@55f3c410
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@11acdc30{/,null,STOPPED} added {ServletHandler@770d4269{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@770d4269{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068==org.apache.spark.ui.JettyUtils$$anon$3@afb50d2{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@770d4269{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@1922e6d
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@76a82f33{/,null,STOPPED} added {ServletHandler@6bab2585{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@6bab2585{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-74bdc168==org.apache.spark.ui.JettyUtils$$anon$3@3dfcb5bb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@6bab2585{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-74bdc168,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@7f811d00
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@62923ee6{/,null,STOPPED} added {ServletHandler@4089713{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@4089713{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2==org.apache.spark.ui.JettyUtils$$anon$3@458895a6{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@4089713{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@7807ac2c
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@b91d8c4{/,null,STOPPED} added {ServletHandler@4b6166aa{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@4b6166aa{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-a77614d==org.apache.spark.ui.JettyUtils$$anon$3@4715b9c0{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@4b6166aa{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-a77614d,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@4a067c25
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@a1217f9{/,null,STOPPED} added {ServletHandler@3bde62ff{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@3bde62ff{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-523424b5==org.apache.spark.ui.JettyUtils$$anon$3@b17f827f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@3bde62ff{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-523424b5,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@2baa8d82
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@319dead1{/,null,STOPPED} added {ServletHandler@791cbf87{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@791cbf87{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d==org.apache.spark.ui.JettyUtils$$anon$3@499ce180{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@791cbf87{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@2b52c0d6
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@372ea2bc{/,null,STOPPED} added {ServletHandler@4cc76301{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG PreEncodedHttpField:61 - HttpField encoders loaded: []
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@4cc76301{STOPPED} added {org.spark_project.jetty.servlet.DefaultServlet-cf65451==org.spark_project.jetty.servlet.DefaultServlet@dcc00e3f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@4cc76301{STOPPED} added {[/]=>org.spark_project.jetty.servlet.DefaultServlet-cf65451,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@32fe9d0a
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@c9413d8{/,null,STOPPED} added {ServletHandler@64da2a7{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@64da2a7{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$4-46074492==org.apache.spark.ui.JettyUtils$$anon$4@c8d542d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@64da2a7{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$4-46074492,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@47428937
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@3b9d6699{/,null,STOPPED} added {ServletHandler@7caa550{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@7caa550{STOPPED} added {org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@7caa550{STOPPED} added {[/*]=>org.glassfish.jersey.servlet.ServletContainer-30ed9c6c,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@2fd1731c
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@5ae76500{/,null,STOPPED} added {ServletHandler@6063d80a{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@6063d80a{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e==org.apache.spark.ui.JettyUtils$$anon$4@d167c798{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@6063d80a{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e,POJO}
2022-02-10 13:31:11 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@2a2da905
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@24f360b2{/,null,STOPPED} added {ServletHandler@60cf80e7{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@60cf80e7{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$4-302fec27==org.apache.spark.ui.JettyUtils$$anon$4@6d5dbb7f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServletHandler@60cf80e7{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$4-302fec27,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - QueuedThreadPool[qtp1251897263]@4a9e6faf{STOPPED,8<=0<=200,i=0,r=-1,q=0}[NO_TRY] added {org.spark_project.jetty.util.thread.ThreadPoolBudget@a50b09c,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - Server@538613b3{STOPPED}[9.4.z-SNAPSHOT] added {QueuedThreadPool[SparkUI]@4a9e6faf{STOPPED,8<=0<=200,i=0,r=-1,q=0}[NO_TRY],AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - Server@538613b3{STOPPED}[9.4.z-SNAPSHOT] added {ErrorHandler@5c1bd44c{STOPPED},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - Server@538613b3{STOPPED}[9.4.z-SNAPSHOT] added {ContextHandlerCollection@560cbf1a{STOPPED},MANAGED}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting Server@538613b3{STOPPED}[9.4.z-SNAPSHOT]
2022-02-10 13:31:11 INFO  Server:375 - jetty-9.4.z-SNAPSHOT; built: unknown; git: unknown; jvm 1.8.0_281-b09
2022-02-10 13:31:11 DEBUG AbstractHandler:94 - starting Server@538613b3{STARTING}[9.4.z-SNAPSHOT]
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting QueuedThreadPool[SparkUI]@4a9e6faf{STOPPED,8<=0<=200,i=0,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:11 DEBUG ReservedThreadExecutor:85 - ReservedThreadExecutor@3d6300e8{s=0/8,p=0}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=0<=200,i=0,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}] added {ReservedThreadExecutor@3d6300e8{s=0/8,p=0},AUTO}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ReservedThreadExecutor@3d6300e8{s=0/8,p=0}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2390ms ReservedThreadExecutor@3d6300e8{s=0/8,p=0}
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-27,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-28,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-29,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=2<=200,i=2,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-30,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=4<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=4<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-31,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=5<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-32,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-33,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=6<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:784 - Starting Thread[SparkUI-34,5,main]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTING,8<=7<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2394ms QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG QueuedThreadPool:980 - Runner started for QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ErrorHandler@5c1bd44c{STOPPED}
2022-02-10 13:31:11 DEBUG AbstractHandler:94 - starting ErrorHandler@5c1bd44c{STARTING}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2394ms ErrorHandler@5c1bd44c{STARTED}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ContextHandlerCollection@560cbf1a{STOPPED}
2022-02-10 13:31:11 DEBUG AbstractHandler:94 - starting ContextHandlerCollection@560cbf1a{STARTING}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2395ms ContextHandlerCollection@560cbf1a{STARTED}
2022-02-10 13:31:11 INFO  Server:415 - Started @2395ms
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2395ms Server@538613b3{STARTED}[9.4.z-SNAPSHOT]
2022-02-10 13:31:11 DEBUG JettyUtils:58 - Using requestHeaderSize: 8192
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - HttpConnectionFactory@681aad3b[HTTP/1.1] added {HttpConfiguration@1a6f2363{32768/8192,8192/8192,https://:0,[]},POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@c00fff0{null, ()}{0.0.0.0:0} added {Server@538613b3{STARTED}[9.4.z-SNAPSHOT],UNMANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@c00fff0{null, ()}{0.0.0.0:0} added {QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}],UNMANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@c00fff0{null, ()}{0.0.0.0:0} added {ScheduledExecutorScheduler@3a0807b7{STOPPED},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@c00fff0{null, ()}{0.0.0.0:0} added {org.spark_project.jetty.io.ArrayByteBufferPool@21a5fd96,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@c00fff0{null, (http/1.1)}{0.0.0.0:0} added {HttpConnectionFactory@681aad3b[HTTP/1.1],AUTO}
2022-02-10 13:31:11 DEBUG AbstractConnector:484 - ServerConnector@c00fff0{HTTP/1.1, (http/1.1)}{0.0.0.0:0} added HttpConnectionFactory@681aad3b[HTTP/1.1]
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@c00fff0{HTTP/1.1, (http/1.1)}{0.0.0.0:0} added {SelectorManager@ServerConnector@c00fff0{HTTP/1.1, (http/1.1)}{0.0.0.0:0},MANAGED}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ServerConnector@c00fff0{HTTP/1.1, (http/1.1)}{0.0.0.0:4040}
2022-02-10 13:31:11 WARN  AbstractLifeCycle:235 - FAILED ServerConnector@c00fff0{HTTP/1.1, (http/1.1)}{0.0.0.0:4040}: java.io.IOException: Failed to bind to /0.0.0.0:4040
java.io.IOException: Failed to bind to /0.0.0.0:4040
	at org.spark_project.jetty.server.ServerConnector.openAcceptChannel(ServerConnector.java:349)
	at org.spark_project.jetty.server.ServerConnector.open(ServerConnector.java:310)
	at org.spark_project.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:80)
	at org.spark_project.jetty.server.ServerConnector.doStart(ServerConnector.java:234)
	at org.spark_project.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:73)
	at org.apache.spark.ui.JettyUtils$.org$apache$spark$ui$JettyUtils$$newConnector$1(JettyUtils.scala:353)
	at org.apache.spark.ui.JettyUtils$.org$apache$spark$ui$JettyUtils$$httpConnect$1(JettyUtils.scala:384)
	at org.apache.spark.ui.JettyUtils$$anonfun$7.apply(JettyUtils.scala:387)
	at org.apache.spark.ui.JettyUtils$$anonfun$7.apply(JettyUtils.scala:387)
	at org.apache.spark.util.Utils$$anonfun$startServiceOnPort$1.apply$mcVI$sp(Utils.scala:2269)
	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:160)
	at org.apache.spark.util.Utils$.startServiceOnPort(Utils.scala:2261)
	at org.apache.spark.ui.JettyUtils$.startJettyServer(JettyUtils.scala:387)
	at org.apache.spark.ui.WebUI.bind(WebUI.scala:147)
	at org.apache.spark.SparkContext$$anonfun$11.apply(SparkContext.scala:452)
	at org.apache.spark.SparkContext$$anonfun$11.apply(SparkContext.scala:452)
	at scala.Option.foreach(Option.scala:257)
	at org.apache.spark.SparkContext.<init>(SparkContext.scala:452)
	at org.apache.spark.SparkContext$.getOrCreate(SparkContext.scala:2526)
	at org.apache.spark.sql.SparkSession$Builder$$anonfun$7.apply(SparkSession.scala:930)
	at org.apache.spark.sql.SparkSession$Builder$$anonfun$7.apply(SparkSession.scala:921)
	at scala.Option.getOrElse(Option.scala:121)
	at org.apache.spark.sql.SparkSession$Builder.getOrCreate(SparkSession.scala:921)
	at util.getSparkSession(util.java:4)
	at UseCase2.getOrders(UseCase2.java:19)
	at UseCase2.getOrdersCount(UseCase2.java:47)
	at UseCase2Test.validateOrders(UseCase2Test.java:7)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:444)
	at sun.nio.ch.Net.bind(Net.java:436)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:225)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.spark_project.jetty.server.ServerConnector.openAcceptChannel(ServerConnector.java:344)
	... 51 more
2022-02-10 13:31:11 WARN  Utils:66 - Service 'SparkUI' could not bind on port 4040. Attempting port 4041.
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - HttpConnectionFactory@41200e0c[HTTP/1.1] added {HttpConfiguration@1a6f2363{32768/8192,8192/8192,https://:0,[]},POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{null, ()}{0.0.0.0:0} added {Server@538613b3{STARTED}[9.4.z-SNAPSHOT],UNMANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{null, ()}{0.0.0.0:0} added {QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}],UNMANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{null, ()}{0.0.0.0:0} added {ScheduledExecutorScheduler@3a0807b7{STOPPED},AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{null, ()}{0.0.0.0:0} added {org.spark_project.jetty.io.ArrayByteBufferPool@4fbdc0f0,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{null, (http/1.1)}{0.0.0.0:0} added {HttpConnectionFactory@41200e0c[HTTP/1.1],AUTO}
2022-02-10 13:31:11 DEBUG AbstractConnector:484 - ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:0} added HttpConnectionFactory@41200e0c[HTTP/1.1]
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:0} added {SelectorManager@ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:0},MANAGED}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041} added {sun.nio.ch.ServerSocketChannelImpl[/0:0:0:0:0:0:0:0:4041],POJO}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ScheduledExecutorScheduler@3a0807b7{STOPPED}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2424ms ScheduledExecutorScheduler@3a0807b7{STARTED}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting HttpConnectionFactory@41200e0c[HTTP/1.1]
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2425ms HttpConnectionFactory@41200e0c[HTTP/1.1]
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting SelectorManager@ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {SelectorProducer@6c4f9535,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}],UNMANAGED}
2022-02-10 13:31:11 DEBUG EatWhatYouKill:93 - EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 created
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ManagedSelector@443dbe42{STOPPED} id=0 keys=-1 selected=-1 updates=0 added {EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30,MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - SelectorManager@ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041} added {ManagedSelector@443dbe42{STOPPED} id=0 keys=-1 selected=-1 updates=0,AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {SelectorProducer@1734f68,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}],UNMANAGED}
2022-02-10 13:31:11 DEBUG EatWhatYouKill:93 - EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 created
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ManagedSelector@77b7ffa4{STOPPED} id=1 keys=-1 selected=-1 updates=0 added {EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30,MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - SelectorManager@ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041} added {ManagedSelector@77b7ffa4{STOPPED} id=1 keys=-1 selected=-1 updates=0,AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {SelectorProducer@402f80f5,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}],UNMANAGED}
2022-02-10 13:31:11 DEBUG EatWhatYouKill:93 - EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 created
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ManagedSelector@5bbc9f97{STOPPED} id=2 keys=-1 selected=-1 updates=0 added {EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30,MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - SelectorManager@ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041} added {ManagedSelector@5bbc9f97{STOPPED} id=2 keys=-1 selected=-1 updates=0,AUTO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {SelectorProducer@41382722,POJO}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 added {QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}],UNMANAGED}
2022-02-10 13:31:11 DEBUG EatWhatYouKill:93 - EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 created
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ManagedSelector@7dac3fd8{STOPPED} id=3 keys=-1 selected=-1 updates=0 added {EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30,MANAGED}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - SelectorManager@ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041} added {ManagedSelector@7dac3fd8{STOPPED} id=3 keys=-1 selected=-1 updates=0,AUTO}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ManagedSelector@443dbe42{STOPPED} id=0 keys=-1 selected=-1 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2454ms EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30
2022-02-10 13:31:11 DEBUG QueuedThreadPool:719 - queue org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@3d4d3fe7 startThread=0
2022-02-10 13:31:11 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@3d4d3fe7 in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$Start@65f87a2c on ManagedSelector@443dbe42{STARTING} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG EatWhatYouKill:141 - EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.975+05:30 tryProduce false
2022-02-10 13:31:11 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:11 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$Start@65f87a2c
2022-02-10 13:31:11 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:11 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d waiting with 0 keys
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2458ms ManagedSelector@443dbe42{STARTED} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ManagedSelector@77b7ffa4{STOPPED} id=1 keys=-1 selected=-1 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2459ms EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30
2022-02-10 13:31:11 DEBUG QueuedThreadPool:719 - queue org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@51684e4a startThread=0
2022-02-10 13:31:11 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@51684e4a in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$Start@6ce1f601 on ManagedSelector@77b7ffa4{STARTING} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG EatWhatYouKill:141 - EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30 tryProduce false
2022-02-10 13:31:11 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:11 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$Start@6ce1f601
2022-02-10 13:31:11 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:11 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 waiting with 0 keys
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2461ms ManagedSelector@77b7ffa4{STARTED} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ManagedSelector@5bbc9f97{STOPPED} id=2 keys=-1 selected=-1 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2461ms EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30
2022-02-10 13:31:11 DEBUG QueuedThreadPool:719 - queue org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@38875e7d startThread=0
2022-02-10 13:31:11 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@38875e7d in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$Start@1e886a5b on ManagedSelector@5bbc9f97{STARTING} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG EatWhatYouKill:141 - EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30 tryProduce false
2022-02-10 13:31:11 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:11 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$Start@1e886a5b
2022-02-10 13:31:11 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:11 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a waiting with 0 keys
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2463ms ManagedSelector@5bbc9f97{STARTED} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting ManagedSelector@7dac3fd8{STOPPED} id=3 keys=-1 selected=-1 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:201 - starting EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2464ms EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30
2022-02-10 13:31:11 DEBUG QueuedThreadPool:719 - queue org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@6e33c391 startThread=0
2022-02-10 13:31:11 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@6e33c391 in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$Start@6c451c9c on ManagedSelector@7dac3fd8{STARTING} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG EatWhatYouKill:141 - EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:11.99+05:30 tryProduce false
2022-02-10 13:31:11 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:11 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$Start@6c451c9c
2022-02-10 13:31:11 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:11 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d waiting with 0 keys
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2465ms ManagedSelector@7dac3fd8{STARTED} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2465ms SelectorManager@ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041} added {acceptor-0@47747fb9,POJO}
2022-02-10 13:31:11 DEBUG QueuedThreadPool:719 - queue acceptor-0@47747fb9 startThread=0
2022-02-10 13:31:11 DEBUG QueuedThreadPool:1035 - run acceptor-0@47747fb9 in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=3,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:11 INFO  AbstractConnector:331 - Started ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:11 DEBUG AbstractLifeCycle:191 - STARTED @2467ms ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:11 INFO  Utils:54 - Successfully started service 'SparkUI' on port 4041.
2022-02-10 13:31:11 DEBUG ContainerLifeCycle:412 - Server@538613b3{STARTED}[9.4.z-SNAPSHOT] added {Spark@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041},UNMANAGED}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@22db8f4{STOPPED,min=32,inflate=-1} mime types IncludeExclude@2b46a8c1{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@22db8f4{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@66629f63{/jobs,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@22db8f4{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@22db8f4{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@22db8f4{STARTING,min=32,inflate=-1} added {DeflaterPool@3caa4757{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@22db8f4{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@66629f63{/jobs,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@66629f63{/jobs,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@6f80fafe{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9==org.apache.spark.ui.JettyUtils$$anon$3@b7cf7b4d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9=org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9==org.apache.spark.ui.JettyUtils$$anon$3@b7cf7b4d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@6f80fafe{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2490ms ServletHandler@6f80fafe{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9==org.apache.spark.ui.JettyUtils$$anon$3@b7cf7b4d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2495ms org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9==org.apache.spark.ui.JettyUtils$$anon$3@b7cf7b4d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-5ab14cb9
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2497ms o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@3caa4757{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2497ms DeflaterPool@3caa4757{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2498ms GzipHandler@22db8f4{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@68ed96ca{STOPPED,min=32,inflate=-1} mime types IncludeExclude@6d1310f6{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@68ed96ca{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@68ed96ca{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@68ed96ca{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@68ed96ca{STARTING,min=32,inflate=-1} added {DeflaterPool@3228d990{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@68ed96ca{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@591e58fa{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-3954d008[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-3954d008==org.apache.spark.ui.JettyUtils$$anon$3@57891e45{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-3954d008=org.apache.spark.ui.JettyUtils$$anon$3-3954d008==org.apache.spark.ui.JettyUtils$$anon$3@57891e45{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@591e58fa{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2501ms ServletHandler@591e58fa{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-3954d008==org.apache.spark.ui.JettyUtils$$anon$3@57891e45{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2502ms org.apache.spark.ui.JettyUtils$$anon$3-3954d008==org.apache.spark.ui.JettyUtils$$anon$3@57891e45{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-3954d008
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2502ms o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@3228d990{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2502ms DeflaterPool@3228d990{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2502ms GzipHandler@68ed96ca{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@54e7391d{STOPPED,min=32,inflate=-1} mime types IncludeExclude@50b8ae8d{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@54e7391d{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@54e7391d{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@54e7391d{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@54e7391d{STARTING,min=32,inflate=-1} added {DeflaterPool@255990cc{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@54e7391d{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@ce5a68e{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-9d157ff[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-9d157ff==org.apache.spark.ui.JettyUtils$$anon$3@4f91a6bc{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-9d157ff=org.apache.spark.ui.JettyUtils$$anon$3-9d157ff==org.apache.spark.ui.JettyUtils$$anon$3@4f91a6bc{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@ce5a68e{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2507ms ServletHandler@ce5a68e{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-9d157ff==org.apache.spark.ui.JettyUtils$$anon$3@4f91a6bc{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2507ms org.apache.spark.ui.JettyUtils$$anon$3-9d157ff==org.apache.spark.ui.JettyUtils$$anon$3@4f91a6bc{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-9d157ff
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2507ms o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@255990cc{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2507ms DeflaterPool@255990cc{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2507ms GzipHandler@54e7391d{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@3c8bdd5b{STOPPED,min=32,inflate=-1} mime types IncludeExclude@29d2d081{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3c8bdd5b{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@3c8bdd5b{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@3c8bdd5b{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3c8bdd5b{STARTING,min=32,inflate=-1} added {DeflaterPool@40e4ea87{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@3c8bdd5b{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@7c041b41{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-7f69d591[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-7f69d591==org.apache.spark.ui.JettyUtils$$anon$3@45819e27{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-7f69d591=org.apache.spark.ui.JettyUtils$$anon$3-7f69d591==org.apache.spark.ui.JettyUtils$$anon$3@45819e27{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@7c041b41{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2510ms ServletHandler@7c041b41{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-7f69d591==org.apache.spark.ui.JettyUtils$$anon$3@45819e27{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2511ms org.apache.spark.ui.JettyUtils$$anon$3-7f69d591==org.apache.spark.ui.JettyUtils$$anon$3@45819e27{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-7f69d591
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2511ms o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@40e4ea87{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2511ms DeflaterPool@40e4ea87{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2511ms GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@58783f6c{STOPPED,min=32,inflate=-1} mime types IncludeExclude@3a7b503d{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@58783f6c{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@5118388b{/stages,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@58783f6c{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@58783f6c{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@58783f6c{STARTING,min=32,inflate=-1} added {DeflaterPool@512d92b{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@58783f6c{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@5118388b{/stages,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@5118388b{/stages,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@15a902e7{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-7876d598[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-7876d598==org.apache.spark.ui.JettyUtils$$anon$3@c5ad8a9c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-7876d598=org.apache.spark.ui.JettyUtils$$anon$3-7876d598==org.apache.spark.ui.JettyUtils$$anon$3@c5ad8a9c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@15a902e7{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2514ms ServletHandler@15a902e7{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-7876d598==org.apache.spark.ui.JettyUtils$$anon$3@c5ad8a9c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2514ms org.apache.spark.ui.JettyUtils$$anon$3-7876d598==org.apache.spark.ui.JettyUtils$$anon$3@c5ad8a9c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-7876d598
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2514ms o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@512d92b{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2514ms DeflaterPool@512d92b{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2514ms GzipHandler@58783f6c{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@62c5bbdc{STOPPED,min=32,inflate=-1} mime types IncludeExclude@7bdf6bb7{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@62c5bbdc{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@62c5bbdc{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@62c5bbdc{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@62c5bbdc{STARTING,min=32,inflate=-1} added {DeflaterPool@1bc53649{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@62c5bbdc{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@71104a4{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb==org.apache.spark.ui.JettyUtils$$anon$3@c4973a2c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb=org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb==org.apache.spark.ui.JettyUtils$$anon$3@c4973a2c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@71104a4{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2517ms ServletHandler@71104a4{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb==org.apache.spark.ui.JettyUtils$$anon$3@c4973a2c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2517ms org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb==org.apache.spark.ui.JettyUtils$$anon$3@c4973a2c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-4985cbcb
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2518ms o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@1bc53649{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2518ms DeflaterPool@1bc53649{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2518ms GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@88d6f9b{STOPPED,min=32,inflate=-1} mime types IncludeExclude@47d93e0d{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@88d6f9b{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@88d6f9b{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@88d6f9b{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@88d6f9b{STARTING,min=32,inflate=-1} added {DeflaterPool@475b7792{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@88d6f9b{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@549621f3{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-54361a9[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-54361a9==org.apache.spark.ui.JettyUtils$$anon$3@2a2ca7fb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-54361a9=org.apache.spark.ui.JettyUtils$$anon$3-54361a9==org.apache.spark.ui.JettyUtils$$anon$3@2a2ca7fb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@549621f3{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2520ms ServletHandler@549621f3{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-54361a9==org.apache.spark.ui.JettyUtils$$anon$3@2a2ca7fb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2520ms org.apache.spark.ui.JettyUtils$$anon$3-54361a9==org.apache.spark.ui.JettyUtils$$anon$3@2a2ca7fb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-54361a9
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2520ms o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@475b7792{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2521ms DeflaterPool@475b7792{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2521ms GzipHandler@88d6f9b{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@182b435b{STOPPED,min=32,inflate=-1} mime types IncludeExclude@4d0402b{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@182b435b{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@182b435b{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@182b435b{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@182b435b{STARTING,min=32,inflate=-1} added {DeflaterPool@2fa7ae9{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@182b435b{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@37ebc9d8{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5==org.apache.spark.ui.JettyUtils$$anon$3@eec5b48c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5=org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5==org.apache.spark.ui.JettyUtils$$anon$3@eec5b48c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@37ebc9d8{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2524ms ServletHandler@37ebc9d8{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5==org.apache.spark.ui.JettyUtils$$anon$3@eec5b48c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2524ms org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5==org.apache.spark.ui.JettyUtils$$anon$3@eec5b48c{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-293bb8a5
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2524ms o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@2fa7ae9{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2524ms DeflaterPool@2fa7ae9{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2525ms GzipHandler@182b435b{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@7577b641{STOPPED,min=32,inflate=-1} mime types IncludeExclude@3704122f{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@7577b641{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@7577b641{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@7577b641{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@7577b641{STARTING,min=32,inflate=-1} added {DeflaterPool@3153ddfc{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@7577b641{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@72e34f77{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098==org.apache.spark.ui.JettyUtils$$anon$3@c3d05377{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098=org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098==org.apache.spark.ui.JettyUtils$$anon$3@c3d05377{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@72e34f77{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2527ms ServletHandler@72e34f77{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098==org.apache.spark.ui.JettyUtils$$anon$3@c3d05377{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2527ms org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098==org.apache.spark.ui.JettyUtils$$anon$3@c3d05377{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-7bf9b098
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2527ms o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@3153ddfc{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2528ms DeflaterPool@3153ddfc{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2528ms GzipHandler@7577b641{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@60afd40d{STOPPED,min=32,inflate=-1} mime types IncludeExclude@28a2a3e7{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@60afd40d{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@60afd40d{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@60afd40d{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@60afd40d{STARTING,min=32,inflate=-1} added {DeflaterPool@3f2049b6{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@60afd40d{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@1fc0053e{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e==org.apache.spark.ui.JettyUtils$$anon$3@e9917ca9{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e=org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e==org.apache.spark.ui.JettyUtils$$anon$3@e9917ca9{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@1fc0053e{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2530ms ServletHandler@1fc0053e{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e==org.apache.spark.ui.JettyUtils$$anon$3@e9917ca9{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2530ms org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e==org.apache.spark.ui.JettyUtils$$anon$3@e9917ca9{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-290b1b2e
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2531ms o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@3f2049b6{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2531ms DeflaterPool@3f2049b6{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2531ms GzipHandler@60afd40d{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@10b3df93{STOPPED,min=32,inflate=-1} mime types IncludeExclude@ea27e34{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@10b3df93{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@f9b7332{/storage,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@10b3df93{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@10b3df93{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@10b3df93{STARTING,min=32,inflate=-1} added {DeflaterPool@33a2499c{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@10b3df93{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@f9b7332{/storage,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@f9b7332{/storage,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@74cec793{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e==org.apache.spark.ui.JettyUtils$$anon$3@304e982b{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e=org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e==org.apache.spark.ui.JettyUtils$$anon$3@304e982b{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@74cec793{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2533ms ServletHandler@74cec793{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e==org.apache.spark.ui.JettyUtils$$anon$3@304e982b{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2534ms org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e==org.apache.spark.ui.JettyUtils$$anon$3@304e982b{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-6fefce9e
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2534ms o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@33a2499c{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2534ms DeflaterPool@33a2499c{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2534ms GzipHandler@10b3df93{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@e72dba7{STOPPED,min=32,inflate=-1} mime types IncludeExclude@33c2bd{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@e72dba7{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@e72dba7{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@e72dba7{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@e72dba7{STARTING,min=32,inflate=-1} added {DeflaterPool@1dfd5f51{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@e72dba7{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@192f2f27{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-8a589a2[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-8a589a2==org.apache.spark.ui.JettyUtils$$anon$3@15c6a372{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-8a589a2=org.apache.spark.ui.JettyUtils$$anon$3-8a589a2==org.apache.spark.ui.JettyUtils$$anon$3@15c6a372{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@192f2f27{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2538ms ServletHandler@192f2f27{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-8a589a2==org.apache.spark.ui.JettyUtils$$anon$3@15c6a372{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2539ms org.apache.spark.ui.JettyUtils$$anon$3-8a589a2==org.apache.spark.ui.JettyUtils$$anon$3@15c6a372{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-8a589a2
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2539ms o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@1dfd5f51{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2539ms DeflaterPool@1dfd5f51{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2539ms GzipHandler@e72dba7{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@3c321bdb{STOPPED,min=32,inflate=-1} mime types IncludeExclude@24855019{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3c321bdb{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@3c321bdb{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@3c321bdb{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3c321bdb{STARTING,min=32,inflate=-1} added {DeflaterPool@3abd581e{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@3c321bdb{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@2fab4aff{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-ec0c838[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-ec0c838==org.apache.spark.ui.JettyUtils$$anon$3@6575cc40{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-ec0c838=org.apache.spark.ui.JettyUtils$$anon$3-ec0c838==org.apache.spark.ui.JettyUtils$$anon$3@6575cc40{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@2fab4aff{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2543ms ServletHandler@2fab4aff{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-ec0c838==org.apache.spark.ui.JettyUtils$$anon$3@6575cc40{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2543ms org.apache.spark.ui.JettyUtils$$anon$3-ec0c838==org.apache.spark.ui.JettyUtils$$anon$3@6575cc40{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-ec0c838
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2544ms o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@3abd581e{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2544ms DeflaterPool@3abd581e{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2544ms GzipHandler@3c321bdb{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@4d4d8fcf{STOPPED,min=32,inflate=-1} mime types IncludeExclude@610db97e{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@4d4d8fcf{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@4d4d8fcf{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@4d4d8fcf{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@4d4d8fcf{STARTING,min=32,inflate=-1} added {DeflaterPool@6f0628de{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@4d4d8fcf{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@29cfd92b{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-21c64522[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-21c64522==org.apache.spark.ui.JettyUtils$$anon$3@96fb741f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-21c64522=org.apache.spark.ui.JettyUtils$$anon$3-21c64522==org.apache.spark.ui.JettyUtils$$anon$3@96fb741f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@29cfd92b{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2548ms ServletHandler@29cfd92b{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-21c64522==org.apache.spark.ui.JettyUtils$$anon$3@96fb741f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2548ms org.apache.spark.ui.JettyUtils$$anon$3-21c64522==org.apache.spark.ui.JettyUtils$$anon$3@96fb741f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-21c64522
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2548ms o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@6f0628de{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2549ms DeflaterPool@6f0628de{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2549ms GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@3fabf088{STOPPED,min=32,inflate=-1} mime types IncludeExclude@1e392345{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3fabf088{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@11acdc30{/environment,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@3fabf088{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@3fabf088{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3fabf088{STARTING,min=32,inflate=-1} added {DeflaterPool@12f3afb5{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@3fabf088{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@11acdc30{/environment,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@11acdc30{/environment,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@770d4269{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068==org.apache.spark.ui.JettyUtils$$anon$3@afb50d2{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068=org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068==org.apache.spark.ui.JettyUtils$$anon$3@afb50d2{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@770d4269{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2554ms ServletHandler@770d4269{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068==org.apache.spark.ui.JettyUtils$$anon$3@afb50d2{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2554ms org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068==org.apache.spark.ui.JettyUtils$$anon$3@afb50d2{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-4a8ab068
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2555ms o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@12f3afb5{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2555ms DeflaterPool@12f3afb5{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2555ms GzipHandler@3fabf088{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@4ced35ed{STOPPED,min=32,inflate=-1} mime types IncludeExclude@2c22a348{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@4ced35ed{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@4ced35ed{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@4ced35ed{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@4ced35ed{STARTING,min=32,inflate=-1} added {DeflaterPool@7bd69e82{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@4ced35ed{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@6bab2585{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-74bdc168[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-74bdc168==org.apache.spark.ui.JettyUtils$$anon$3@3dfcb5bb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-74bdc168=org.apache.spark.ui.JettyUtils$$anon$3-74bdc168==org.apache.spark.ui.JettyUtils$$anon$3@3dfcb5bb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@6bab2585{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2560ms ServletHandler@6bab2585{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-74bdc168==org.apache.spark.ui.JettyUtils$$anon$3@3dfcb5bb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2560ms org.apache.spark.ui.JettyUtils$$anon$3-74bdc168==org.apache.spark.ui.JettyUtils$$anon$3@3dfcb5bb{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-74bdc168
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2561ms o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@7bd69e82{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2561ms DeflaterPool@7bd69e82{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2561ms GzipHandler@4ced35ed{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@74d7184a{STOPPED,min=32,inflate=-1} mime types IncludeExclude@51b01960{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@74d7184a{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@62923ee6{/executors,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@74d7184a{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@74d7184a{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@74d7184a{STARTING,min=32,inflate=-1} added {DeflaterPool@6831d8fd{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@74d7184a{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@62923ee6{/executors,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@62923ee6{/executors,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@4089713{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2==org.apache.spark.ui.JettyUtils$$anon$3@458895a6{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2=org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2==org.apache.spark.ui.JettyUtils$$anon$3@458895a6{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@4089713{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2564ms ServletHandler@4089713{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2==org.apache.spark.ui.JettyUtils$$anon$3@458895a6{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2564ms org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2==org.apache.spark.ui.JettyUtils$$anon$3@458895a6{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-f19c9d2
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2564ms o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@6831d8fd{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2565ms DeflaterPool@6831d8fd{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2565ms GzipHandler@74d7184a{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@27dc79f7{STOPPED,min=32,inflate=-1} mime types IncludeExclude@6b85300e{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@27dc79f7{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@27dc79f7{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@27dc79f7{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@27dc79f7{STARTING,min=32,inflate=-1} added {DeflaterPool@3aaf4f07{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@27dc79f7{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@4b6166aa{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-a77614d[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-a77614d==org.apache.spark.ui.JettyUtils$$anon$3@4715b9c0{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-a77614d=org.apache.spark.ui.JettyUtils$$anon$3-a77614d==org.apache.spark.ui.JettyUtils$$anon$3@4715b9c0{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@4b6166aa{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2568ms ServletHandler@4b6166aa{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-a77614d==org.apache.spark.ui.JettyUtils$$anon$3@4715b9c0{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2568ms org.apache.spark.ui.JettyUtils$$anon$3-a77614d==org.apache.spark.ui.JettyUtils$$anon$3@4715b9c0{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-a77614d
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2569ms o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@3aaf4f07{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2569ms DeflaterPool@3aaf4f07{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2569ms GzipHandler@27dc79f7{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@5cbf9e9f{STOPPED,min=32,inflate=-1} mime types IncludeExclude@18e8473e{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@5cbf9e9f{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@5cbf9e9f{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@5cbf9e9f{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@5cbf9e9f{STARTING,min=32,inflate=-1} added {DeflaterPool@5a2f016d{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@5cbf9e9f{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@3bde62ff{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-523424b5[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-523424b5==org.apache.spark.ui.JettyUtils$$anon$3@b17f827f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-523424b5=org.apache.spark.ui.JettyUtils$$anon$3-523424b5==org.apache.spark.ui.JettyUtils$$anon$3@b17f827f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@3bde62ff{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2572ms ServletHandler@3bde62ff{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-523424b5==org.apache.spark.ui.JettyUtils$$anon$3@b17f827f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2572ms org.apache.spark.ui.JettyUtils$$anon$3-523424b5==org.apache.spark.ui.JettyUtils$$anon$3@b17f827f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-523424b5
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2573ms o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@5a2f016d{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2573ms DeflaterPool@5a2f016d{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2573ms GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@1a38ba58{STOPPED,min=32,inflate=-1} mime types IncludeExclude@3ad394e6{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@1a38ba58{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@1a38ba58{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@1a38ba58{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@1a38ba58{STARTING,min=32,inflate=-1} added {DeflaterPool@6058e535{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@1a38ba58{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@791cbf87{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d==org.apache.spark.ui.JettyUtils$$anon$3@499ce180{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d=org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d==org.apache.spark.ui.JettyUtils$$anon$3@499ce180{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@791cbf87{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2576ms ServletHandler@791cbf87{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d==org.apache.spark.ui.JettyUtils$$anon$3@499ce180{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2576ms org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d==org.apache.spark.ui.JettyUtils$$anon$3@499ce180{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-a7e2d9d
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2576ms o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@6058e535{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2576ms DeflaterPool@6058e535{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2576ms GzipHandler@1a38ba58{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@42deb43a{STOPPED,min=32,inflate=-1} mime types IncludeExclude@1deb2c43{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@42deb43a{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@372ea2bc{/static,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@42deb43a{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@42deb43a{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@42deb43a{STARTING,min=32,inflate=-1} added {DeflaterPool@3bb9efbc{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@42deb43a{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@372ea2bc{/static,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@372ea2bc{/static,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@4cc76301{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.spark_project.jetty.servlet.DefaultServlet-cf65451[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.spark_project.jetty.servlet.DefaultServlet-cf65451==org.spark_project.jetty.servlet.DefaultServlet@dcc00e3f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.spark_project.jetty.servlet.DefaultServlet-cf65451=org.spark_project.jetty.servlet.DefaultServlet-cf65451==org.spark_project.jetty.servlet.DefaultServlet@dcc00e3f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@4cc76301{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2580ms ServletHandler@4cc76301{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.spark_project.jetty.servlet.DefaultServlet-cf65451==org.spark_project.jetty.servlet.DefaultServlet@dcc00e3f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2580ms org.spark_project.jetty.servlet.DefaultServlet-cf65451==org.spark_project.jetty.servlet.DefaultServlet@dcc00e3f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.spark_project.jetty.servlet.DefaultServlet-cf65451
2022-02-10 13:31:12 DEBUG DefaultServlet:308 - resource base = jar:file:/C:/Users/Anukul%20Thalkar/.m2/repository/org/apache/spark/spark-core_2.11/2.4.8/spark-core_2.11-2.4.8.jar!/org/apache/spark/ui/static
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2592ms o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@3bb9efbc{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2592ms DeflaterPool@3bb9efbc{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2592ms GzipHandler@42deb43a{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@32c0915e{STOPPED,min=32,inflate=-1} mime types IncludeExclude@106faf11{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@32c0915e{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@c9413d8{/,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@32c0915e{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@32c0915e{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@32c0915e{STARTING,min=32,inflate=-1} added {DeflaterPool@70f43b45{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@32c0915e{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@c9413d8{/,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@c9413d8{/,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@64da2a7{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$4-46074492[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$4-46074492==org.apache.spark.ui.JettyUtils$$anon$4@c8d542d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$4-46074492=org.apache.spark.ui.JettyUtils$$anon$4-46074492==org.apache.spark.ui.JettyUtils$$anon$4@c8d542d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@64da2a7{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2596ms ServletHandler@64da2a7{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$4-46074492==org.apache.spark.ui.JettyUtils$$anon$4@c8d542d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2596ms org.apache.spark.ui.JettyUtils$$anon$4-46074492==org.apache.spark.ui.JettyUtils$$anon$4@c8d542d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$4-46074492
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2597ms o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@70f43b45{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2597ms DeflaterPool@70f43b45{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2597ms GzipHandler@32c0915e{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@26d10f2e{STOPPED,min=32,inflate=-1} mime types IncludeExclude@10ad20cb{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@26d10f2e{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@3b9d6699{/api,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@26d10f2e{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@26d10f2e{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@26d10f2e{STARTING,min=32,inflate=-1} added {DeflaterPool@7dd712e8{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@26d10f2e{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@3b9d6699{/api,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@3b9d6699{/api,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@7caa550{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/*[EMBEDDED:null] mapped to servlet=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@5fa{/*},resource=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.glassfish.jersey.servlet.ServletContainer-30ed9c6c=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG ServletHandler:169 - Adding Default404Servlet to ServletHandler@7caa550{STARTING}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@7caa550{STARTING} added {org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126==org.spark_project.jetty.servlet.ServletHandler$Default404Servlet@d89988ae{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@7caa550{STARTING} added {[/]=>org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126,POJO}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/*[EMBEDDED:null] mapped to servlet=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@5fa{/*},resource=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126==org.spark_project.jetty.servlet.ServletHandler$Default404Servlet@d89988ae{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=2]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=2]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.glassfish.jersey.servlet.ServletContainer-30ed9c6c=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}, org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126=org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126==org.spark_project.jetty.servlet.ServletHandler$Default404Servlet@d89988ae{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/*[EMBEDDED:null] mapped to servlet=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@5fa{/*},resource=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126==org.spark_project.jetty.servlet.ServletHandler$Default404Servlet@d89988ae{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=2]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=2]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.glassfish.jersey.servlet.ServletContainer-30ed9c6c=org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}, org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126=org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126==org.spark_project.jetty.servlet.ServletHandler$Default404Servlet@d89988ae{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@7caa550{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2605ms ServletHandler@7caa550{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2606ms org.glassfish.jersey.servlet.ServletContainer-30ed9c6c==org.glassfish.jersey.servlet.ServletContainer@27f7a201{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126==org.spark_project.jetty.servlet.ServletHandler$Default404Servlet@d89988ae{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2606ms org.spark_project.jetty.servlet.ServletHandler$Default404Servlet-7bfc3126==org.spark_project.jetty.servlet.ServletHandler$Default404Servlet@d89988ae{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2606ms o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@7dd712e8{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2606ms DeflaterPool@7dd712e8{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2606ms GzipHandler@26d10f2e{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@3e792ce3{STOPPED,min=32,inflate=-1} mime types IncludeExclude@53bc1328{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3e792ce3{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@3e792ce3{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@3e792ce3{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3e792ce3{STARTING,min=32,inflate=-1} added {DeflaterPool@26f143ed{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@3e792ce3{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@6063d80a{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e==org.apache.spark.ui.JettyUtils$$anon$4@d167c798{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e=org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e==org.apache.spark.ui.JettyUtils$$anon$4@d167c798{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@6063d80a{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2612ms ServletHandler@6063d80a{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e==org.apache.spark.ui.JettyUtils$$anon$4@d167c798{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2613ms org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e==org.apache.spark.ui.JettyUtils$$anon$4@d167c798{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$4-1133ec6e
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2613ms o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@26f143ed{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2614ms DeflaterPool@26f143ed{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2614ms GzipHandler@3e792ce3{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4a69d1f9{*.svgz},resource=true] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG GzipHandler:208 - GzipHandler@3c1e3314{STOPPED,min=32,inflate=-1} mime types IncludeExclude@4b770e40{i=[],ip=CONTAINS,e=[image/ief, image/vnd.wap.wbmp, image/jpeg, application/bzip2, image/x-portable-graymap, application/brotli, image/bmp, image/gif, image/x-icon, audio/midi, video/x-msvideo, image/x-xbitmap, application/x-rar-compressed, image/x-portable-bitmap, image/x-rgb, image/x-cmu-raster, application/gzip, audio/x-wav, audio/x-pn-realaudio, audio/basic, application/compress, audio/x-aiff, video/x.ms.asx, video/x.ms.asf, image/png, video/vnd.rn-realvideo, image/x-xwindowdump, image/jpeg2000, video/x-sgi-movie, audio/mpeg, image/xcf, video/mpeg, image/x-portable-pixmap, image/tiff, image/x-portable-anymap, image/x-xpixmap, application/zip, video/quicktime, application/x-xz, video/mp4],ep=CONTAINS}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3c1e3314{STOPPED,min=32,inflate=-1} added {o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,STOPPED,@Spark},MANAGED}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/kill->[{GzipHandler@3c1e3314{STOPPED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {GzipHandler@3c1e3314{STOPPED,min=32,inflate=-1},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting GzipHandler@3c1e3314{STOPPED,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - GzipHandler@3c1e3314{STARTING,min=32,inflate=-1} added {DeflaterPool@78e16155{STOPPED,size=0,capacity=UNLIMITED},AUTO}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting GzipHandler@3c1e3314{STARTING,min=32,inflate=-1}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@60cf80e7{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$4-302fec27[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$4-302fec27==org.apache.spark.ui.JettyUtils$$anon$4@6d5dbb7f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$4-302fec27=org.apache.spark.ui.JettyUtils$$anon$4-302fec27==org.apache.spark.ui.JettyUtils$$anon$4@6d5dbb7f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@60cf80e7{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2626ms ServletHandler@60cf80e7{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$4-302fec27==org.apache.spark.ui.JettyUtils$$anon$4@6d5dbb7f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2627ms org.apache.spark.ui.JettyUtils$$anon$4-302fec27==org.apache.spark.ui.JettyUtils$$anon$4@6d5dbb7f{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$4-302fec27
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2627ms o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting DeflaterPool@78e16155{STOPPED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2627ms DeflaterPool@78e16155{STARTED,size=0,capacity=UNLIMITED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2627ms GzipHandler@3c1e3314{STARTED,min=32,inflate=-1}
2022-02-10 13:31:12 INFO  SparkUI:54 - Bound SparkUI to 0.0.0.0, and started at http://Clairvoyant-324.mshome.net:4041
2022-02-10 13:31:12 INFO  Executor:54 - Starting executor ID driver on host localhost
2022-02-10 13:31:12 DEBUG TransportServer:141 - Shuffle server started on port: 53700
2022-02-10 13:31:12 INFO  Utils:54 - Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 53700.
2022-02-10 13:31:12 INFO  NettyBlockTransferService:54 - Server created on Clairvoyant-324.mshome.net:53700
2022-02-10 13:31:12 INFO  BlockManager:54 - Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
2022-02-10 13:31:12 INFO  BlockManagerMaster:54 - Registering BlockManager BlockManagerId(driver, Clairvoyant-324.mshome.net, 53700, None)
2022-02-10 13:31:12 DEBUG DefaultTopologyMapper:58 - Got a request for Clairvoyant-324.mshome.net
2022-02-10 13:31:12 INFO  BlockManagerMasterEndpoint:54 - Registering block manager Clairvoyant-324.mshome.net:53700 with 1970.4 MB RAM, BlockManagerId(driver, Clairvoyant-324.mshome.net, 53700, None)
2022-02-10 13:31:12 INFO  BlockManagerMaster:54 - Registered BlockManager BlockManagerId(driver, Clairvoyant-324.mshome.net, 53700, None)
2022-02-10 13:31:12 INFO  BlockManager:54 - Initialized BlockManager: BlockManagerId(driver, Clairvoyant-324.mshome.net, 53700, None)
2022-02-10 13:31:12 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@42c2f48c
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@3005db4a{/,null,STOPPED} added {ServletHandler@425d5d46{STOPPED},MANAGED}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@425d5d46{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce==org.apache.spark.ui.JettyUtils$$anon$3@8f98c4af{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@425d5d46{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce,POJO}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/kill->[{GzipHandler@3c1e3314{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - metrics/json->[{o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,STOPPED,@Spark},[o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,STOPPED,@Spark},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@425d5d46{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce==org.apache.spark.ui.JettyUtils$$anon$3@8f98c4af{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce=org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce==org.apache.spark.ui.JettyUtils$$anon$3@8f98c4af{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@425d5d46{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2917ms ServletHandler@425d5d46{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce==org.apache.spark.ui.JettyUtils$$anon$3@8f98c4af{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2918ms org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce==org.apache.spark.ui.JettyUtils$$anon$3@8f98c4af{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-198ef2ce
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @2918ms o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG SparkContext:58 - Adding shutdown hook
2022-02-10 13:31:12 INFO  SharedState:54 - Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir ('file:/C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/spark-warehouse').
2022-02-10 13:31:12 INFO  SharedState:54 - Warehouse path is 'file:/C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/spark-warehouse'.
2022-02-10 13:31:12 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@3c0fbd3a
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@562457e1{/,null,STOPPED} added {ServletHandler@54562ea6{STOPPED},MANAGED}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@54562ea6{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-1a35993f==org.apache.spark.ui.JettyUtils$$anon$3@c8510351{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@54562ea6{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-1a35993f,POJO}
2022-02-10 13:31:12 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@5b12012e
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@2f7dcef2{/,null,STOPPED} added {ServletHandler@4a3be6a5{STOPPED},MANAGED}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@4a3be6a5{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc==org.apache.spark.ui.JettyUtils$$anon$3@f831df00{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@4a3be6a5{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc,POJO}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL->[{o.s.j.s.ServletContextHandler@562457e1{/SQL,null,STOPPED,@Spark},[o.s.j.s.ServletContextHandler@562457e1{/SQL,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/kill->[{GzipHandler@3c1e3314{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - metrics/json->[{o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {o.s.j.s.ServletContextHandler@562457e1{/SQL,null,STOPPED,@Spark},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@562457e1{/SQL,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@562457e1{/SQL,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@54562ea6{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-1a35993f[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-1a35993f==org.apache.spark.ui.JettyUtils$$anon$3@c8510351{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-1a35993f=org.apache.spark.ui.JettyUtils$$anon$3-1a35993f==org.apache.spark.ui.JettyUtils$$anon$3@c8510351{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@54562ea6{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3027ms ServletHandler@54562ea6{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-1a35993f==org.apache.spark.ui.JettyUtils$$anon$3@c8510351{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3027ms org.apache.spark.ui.JettyUtils$$anon$3-1a35993f==org.apache.spark.ui.JettyUtils$$anon$3@c8510351{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-1a35993f
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3027ms o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL->[{o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/kill->[{GzipHandler@3c1e3314{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/json->[{o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,STOPPED,@Spark},[o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - metrics/json->[{o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,STOPPED,@Spark},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@4a3be6a5{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc==org.apache.spark.ui.JettyUtils$$anon$3@f831df00{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc=org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc==org.apache.spark.ui.JettyUtils$$anon$3@f831df00{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@4a3be6a5{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3031ms ServletHandler@4a3be6a5{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc==org.apache.spark.ui.JettyUtils$$anon$3@f831df00{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3032ms org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc==org.apache.spark.ui.JettyUtils$$anon$3@f831df00{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-7cf162bc
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3032ms o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@766a4535
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@63718b93{/,null,STOPPED} added {ServletHandler@14e2e1c3{STOPPED},MANAGED}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@14e2e1c3{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd==org.apache.spark.ui.JettyUtils$$anon$3@66e8f95d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@14e2e1c3{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd,POJO}
2022-02-10 13:31:12 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@f202d6d
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@60e21209{/,null,STOPPED} added {ServletHandler@630d1b2f{STOPPED},MANAGED}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@630d1b2f{STOPPED} added {org.apache.spark.ui.JettyUtils$$anon$3-746b18fd==org.apache.spark.ui.JettyUtils$$anon$3@f2b4b11a{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@630d1b2f{STOPPED} added {[/]=>org.apache.spark.ui.JettyUtils$$anon$3-746b18fd,POJO}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL->[{o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/kill->[{GzipHandler@3c1e3314{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/json->[{o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - metrics/json->[{o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/execution->[{o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,STOPPED,@Spark},[o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,STOPPED,@Spark},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@14e2e1c3{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd==org.apache.spark.ui.JettyUtils$$anon$3@66e8f95d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd=org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd==org.apache.spark.ui.JettyUtils$$anon$3@66e8f95d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@14e2e1c3{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3037ms ServletHandler@14e2e1c3{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd==org.apache.spark.ui.JettyUtils$$anon$3@66e8f95d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3037ms org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd==org.apache.spark.ui.JettyUtils$$anon$3@66e8f95d{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-2b4786dd
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3037ms o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/execution/json->[{o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,STOPPED,@Spark},[o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL->[{o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/kill->[{GzipHandler@3c1e3314{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/json->[{o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - metrics/json->[{o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/execution->[{o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,STOPPED,@Spark},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@630d1b2f{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.apache.spark.ui.JettyUtils$$anon$3-746b18fd[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.apache.spark.ui.JettyUtils$$anon$3-746b18fd==org.apache.spark.ui.JettyUtils$$anon$3@f2b4b11a{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.apache.spark.ui.JettyUtils$$anon$3-746b18fd=org.apache.spark.ui.JettyUtils$$anon$3-746b18fd==org.apache.spark.ui.JettyUtils$$anon$3@f2b4b11a{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@630d1b2f{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3042ms ServletHandler@630d1b2f{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.apache.spark.ui.JettyUtils$$anon$3-746b18fd==org.apache.spark.ui.JettyUtils$$anon$3@f2b4b11a{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3042ms org.apache.spark.ui.JettyUtils$$anon$3-746b18fd==org.apache.spark.ui.JettyUtils$$anon$3@f2b4b11a{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.apache.spark.ui.JettyUtils$$anon$3-746b18fd
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3042ms o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG DecoratedObjectFactory:53 - Adding Decorator: org.spark_project.jetty.util.DeprecationWarning@2df3c564
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - o.s.j.s.ServletContextHandler@2715644a{/,null,STOPPED} added {ServletHandler@4c2869a9{STOPPED},MANAGED}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@4c2869a9{STOPPED} added {org.spark_project.jetty.servlet.DefaultServlet-518cf84a==org.spark_project.jetty.servlet.DefaultServlet@232a1615{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null},AUTO}
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ServletHandler@4c2869a9{STOPPED} added {[/]=>org.spark_project.jetty.servlet.DefaultServlet-518cf84a,POJO}
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - ->[{GzipHandler@32c0915e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@c9413d8{/,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd->[{GzipHandler@3c321bdb{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b672aa8{/storage/rdd,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage->[{GzipHandler@10b3df93{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@f9b7332{/storage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/rdd/json->[{GzipHandler@4d4d8fcf{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5cc69cfe{/storage/rdd/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/execution/json->[{o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@60e21209{/SQL/execution/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - api->[{GzipHandler@26d10f2e{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@3b9d6699{/api,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool/json->[{GzipHandler@60afd40d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@77307458{/stages/pool/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/pool->[{GzipHandler@7577b641{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6e9319f{/stages/pool,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/json->[{GzipHandler@68ed96ca{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@6c6357f9{/jobs/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static->[{GzipHandler@42deb43a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@372ea2bc{/static,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/json->[{GzipHandler@27dc79f7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@b91d8c4{/executors/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/json->[{GzipHandler@182b435b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5217f3d0{/stages/stage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump/json->[{GzipHandler@1a38ba58{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@319dead1{/executors/threadDump/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment/json->[{GzipHandler@4ced35ed{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@76a82f33{/environment/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/json->[{GzipHandler@3c8bdd5b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5df417a7{/jobs/job/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs->[{GzipHandler@22db8f4{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@66629f63{/jobs,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/json->[{GzipHandler@62c5bbdc{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5af28b27{/stages/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage->[{GzipHandler@88d6f9b{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@332a7fce{/stages/stage,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - storage/json->[{GzipHandler@e72dba7{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@1bdf8190{/storage/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL->[{o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@562457e1{/SQL,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - static/sql->[{o.s.j.s.ServletContextHandler@2715644a{/static/sql,null,STOPPED,@Spark},[o.s.j.s.ServletContextHandler@2715644a{/static/sql,null,STOPPED,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages/stage/kill->[{GzipHandler@3c1e3314{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@24f360b2{/stages/stage/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job->[{GzipHandler@54e7391d{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5d25e6bb{/jobs/job,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - environment->[{GzipHandler@3fabf088{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@11acdc30{/environment,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - stages->[{GzipHandler@58783f6c{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5118388b{/stages,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors->[{GzipHandler@74d7184a{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@62923ee6{/executors,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/json->[{o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@2f7dcef2{/SQL/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - jobs/job/kill->[{GzipHandler@3e792ce3{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@5ae76500{/jobs/job/kill,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - metrics/json->[{o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@3005db4a{/metrics/json,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - SQL/execution->[{o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,AVAILABLE,@Spark},[o.s.j.s.ServletContextHandler@63718b93{/SQL/execution,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContextHandlerCollection:157 - executors/threadDump->[{GzipHandler@5cbf9e9f{STARTED,min=32,inflate=-1},[o.s.j.s.ServletContextHandler@a1217f9{/executors/threadDump,null,AVAILABLE,@Spark}]}]
2022-02-10 13:31:12 DEBUG ContainerLifeCycle:412 - ContextHandlerCollection@560cbf1a{STARTED} added {o.s.j.s.ServletContextHandler@2715644a{/static/sql,null,STOPPED,@Spark},UNMANAGED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting o.s.j.s.ServletContextHandler@2715644a{/static/sql,null,STOPPED,@Spark}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting o.s.j.s.ServletContextHandler@2715644a{/static/sql,null,STARTING,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting ServletHandler@4c2869a9{STOPPED}
2022-02-10 13:31:12 DEBUG ServletHandler:1418 - Path=/[EMBEDDED:null] mapped to servlet=org.spark_project.jetty.servlet.DefaultServlet-518cf84a[EMBEDDED:null]
2022-02-10 13:31:12 DEBUG PathMappings:257 - Added MappedResource[pathSpec=ServletPathSpec@4e{/},resource=org.spark_project.jetty.servlet.DefaultServlet-518cf84a==org.spark_project.jetty.servlet.DefaultServlet@232a1615{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}] to PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1439 - filterNameMap={}
2022-02-10 13:31:12 DEBUG ServletHandler:1440 - pathFilters=null
2022-02-10 13:31:12 DEBUG ServletHandler:1441 - servletFilterMap=null
2022-02-10 13:31:12 DEBUG ServletHandler:1442 - servletPathMap=PathMappings[size=1]
2022-02-10 13:31:12 DEBUG ServletHandler:1443 - servletNameMap={org.spark_project.jetty.servlet.DefaultServlet-518cf84a=org.spark_project.jetty.servlet.DefaultServlet-518cf84a==org.spark_project.jetty.servlet.DefaultServlet@232a1615{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}}
2022-02-10 13:31:12 DEBUG AbstractHandler:94 - starting ServletHandler@4c2869a9{STARTING}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3047ms ServletHandler@4c2869a9{STARTED}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:201 - starting org.spark_project.jetty.servlet.DefaultServlet-518cf84a==org.spark_project.jetty.servlet.DefaultServlet@232a1615{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3047ms org.spark_project.jetty.servlet.DefaultServlet-518cf84a==org.spark_project.jetty.servlet.DefaultServlet@232a1615{jsp=null,order=-1,inst=false,async=true,src=EMBEDDED:null}
2022-02-10 13:31:12 DEBUG ServletHolder:621 - Servlet.init null for org.spark_project.jetty.servlet.DefaultServlet-518cf84a
2022-02-10 13:31:12 DEBUG DefaultServlet:308 - resource base = jar:file:/C:/Users/Anukul%20Thalkar/.m2/repository/org/apache/spark/spark-sql_2.11/2.4.8/spark-sql_2.11-2.4.8.jar!/org/apache/spark/sql/execution/ui/static
2022-02-10 13:31:12 INFO  ContextHandler:916 - Started o.s.j.s.ServletContextHandler@2715644a{/static/sql,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 DEBUG AbstractLifeCycle:191 - STARTED @3061ms o.s.j.s.ServletContextHandler@2715644a{/static/sql,null,AVAILABLE,@Spark}
2022-02-10 13:31:12 INFO  StateStoreCoordinatorRef:54 - Registered StateStoreCoordinator endpoint
2022-02-10 13:31:13 INFO  InMemoryFileIndex:54 - It took 24 ms to list leaf files for 1 paths.
2022-02-10 13:31:13 INFO  InMemoryFileIndex:54 - It took 3 ms to list leaf files for 2 paths.
2022-02-10 13:31:13 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#0
2022-02-10 13:31:13 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Project [unresolvedalias('value, None)]   Project [value#0]
 +- Relation[value#0] text                  +- Relation[value#0] text
          
2022-02-10 13:31:14 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#4: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#4: java.lang.String
 +- LocalRelation <empty>, [value#0]                                                                                                                                      +- LocalRelation <empty>, [value#0]
          
2022-02-10 13:31:14 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#0
2022-02-10 13:31:14 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#0, None)) > 0)
 +- Project [value#0]                       +- Project [value#0]
    +- Relation[value#0] text                  +- Relation[value#0] text
          
2022-02-10 13:31:14 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#5: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#5: java.lang.String
 +- LocalRelation <empty>, [value#0]                                                                                                                                      +- LocalRelation <empty>, [value#0]
          
2022-02-10 13:31:14 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#6: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#6: java.lang.String
 +- LocalRelation <empty>, [value#0]                                                                                                                                      +- LocalRelation <empty>, [value#0]
          
2022-02-10 13:31:14 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 1                                    GlobalLimit 1
 +- LocalLimit 1                                  +- LocalLimit 1
    +- Filter (length(trim(value#0, None)) > 0)      +- Filter (length(trim(value#0, None)) > 0)
!      +- Project [value#0]                             +- Relation[value#0] text
!         +- Relation[value#0] text               
          
2022-02-10 13:31:14 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:14 INFO  FileSourceStrategy:54 - Post-Scan Filters: (length(trim(value#0, None)) > 0)
2022-02-10 13:31:14 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:14 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:14 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:14 DEBUG CodeGenerator:58 - 
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:14 INFO  CodeGenerator:54 - Code generated in 161.2168 ms
2022-02-10 13:31:14 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 026 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 027 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 028 */       do {
/* 029 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 030 */         UTF8String scan_value_0 = scan_isNull_0 ?
/* 031 */         null : (scan_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (scan_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = scan_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (scan_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, scan_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

2022-02-10 13:31:14 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 026 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 027 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 028 */       do {
/* 029 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 030 */         UTF8String scan_value_0 = scan_isNull_0 ?
/* 031 */         null : (scan_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (scan_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = scan_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (scan_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, scan_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

2022-02-10 13:31:14 INFO  CodeGenerator:54 - Code generated in 14.8644 ms
2022-02-10 13:31:14 INFO  MemoryStore:54 - Block broadcast_0 stored as values in memory (estimated size 221.9 KB, free 1970.2 MB)
2022-02-10 13:31:14 DEBUG BlockManager:58 - Put block broadcast_0 locally took  32 ms
2022-02-10 13:31:14 DEBUG BlockManager:58 - Putting block broadcast_0 without replication took  32 ms
2022-02-10 13:31:14 INFO  MemoryStore:54 - Block broadcast_0_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1970.2 MB)
2022-02-10 13:31:14 INFO  BlockManagerInfo:54 - Added broadcast_0_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.4 MB)
2022-02-10 13:31:14 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_0_piece0
2022-02-10 13:31:14 DEBUG BlockManager:58 - Told master about block broadcast_0_piece0
2022-02-10 13:31:14 DEBUG BlockManager:58 - Put block broadcast_0_piece0 locally took  16 ms
2022-02-10 13:31:14 DEBUG BlockManager:58 - Putting block broadcast_0_piece0 without replication took  16 ms
2022-02-10 13:31:14 INFO  SparkContext:54 - Created broadcast 0 from load at UseCase2.java:19
2022-02-10 13:31:14 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 14388598 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$5.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(scala.Tuple2)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$6.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(scala.collection.Iterator)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:15 INFO  SparkContext:54 - Starting job: load at UseCase2.java:19
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Got job 0 (load at UseCase2.java:19) with 1 output partitions
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Final stage: ResultStage 0 (load at UseCase2.java:19)
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:15 DEBUG DAGScheduler:58 - submitStage(ResultStage 0 (name=load at UseCase2.java:19;jobs=0))
2022-02-10 13:31:15 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Submitting ResultStage 0 (MapPartitionsRDD[3] at load at UseCase2.java:19), which has no missing parents
2022-02-10 13:31:15 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 0)
2022-02-10 13:31:15 INFO  MemoryStore:54 - Block broadcast_1 stored as values in memory (estimated size 8.9 KB, free 1970.2 MB)
2022-02-10 13:31:15 DEBUG BlockManager:58 - Put block broadcast_1 locally took  0 ms
2022-02-10 13:31:15 DEBUG BlockManager:58 - Putting block broadcast_1 without replication took  0 ms
2022-02-10 13:31:15 INFO  MemoryStore:54 - Block broadcast_1_piece0 stored as bytes in memory (estimated size 4.6 KB, free 1970.1 MB)
2022-02-10 13:31:15 INFO  BlockManagerInfo:54 - Added broadcast_1_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 4.6 KB, free: 1970.4 MB)
2022-02-10 13:31:15 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_1_piece0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Told master about block broadcast_1_piece0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Put block broadcast_1_piece0 locally took  15 ms
2022-02-10 13:31:15 DEBUG BlockManager:58 - Putting block broadcast_1_piece0 without replication took  15 ms
2022-02-10 13:31:15 INFO  SparkContext:54 - Created broadcast 1 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 0 (MapPartitionsRDD[3] at load at UseCase2.java:19) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:15 INFO  TaskSchedulerImpl:54 - Adding task set 0.0 with 1 tasks
2022-02-10 13:31:15 DEBUG TaskSetManager:58 - Epoch for TaskSet 0.0: 0
2022-02-10 13:31:15 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 0.0: NO_PREF, ANY
2022-02-10 13:31:15 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_0.0, runningTasks: 0
2022-02-10 13:31:15 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 0.0: NO_PREF, ANY
2022-02-10 13:31:15 INFO  TaskSetManager:54 - Starting task 0.0 in stage 0.0 (TID 0, localhost, executor driver, partition 0, PROCESS_LOCAL, 8350 bytes)
2022-02-10 13:31:15 INFO  Executor:54 - Running task 0.0 in stage 0.0 (TID 0)
2022-02-10 13:31:15 DEBUG BlockManager:58 - Getting local block broadcast_1
2022-02-10 13:31:15 DEBUG BlockManager:58 - Level for block broadcast_1 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:15 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:15 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:15 DEBUG CodeGenerator:58 - 
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:15 INFO  CodeGenerator:54 - Code generated in 7.8488 ms
2022-02-10 13:31:15 DEBUG BlockManager:58 - Getting local block broadcast_0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Level for block broadcast_0 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:15 INFO  Executor:54 - Finished task 0.0 in stage 0.0 (TID 0). 1300 bytes result sent to driver
2022-02-10 13:31:15 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_0.0, runningTasks: 0
2022-02-10 13:31:15 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:15 INFO  TaskSetManager:54 - Finished task 0.0 in stage 0.0 (TID 0) in 95 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:15 INFO  TaskSchedulerImpl:54 - Removed TaskSet 0.0, whose tasks have all completed, from pool 
2022-02-10 13:31:15 INFO  DAGScheduler:54 - ResultStage 0 (load at UseCase2.java:19) finished in 0.190 s
2022-02-10 13:31:15 DEBUG DAGScheduler:58 - After removal of stage 0, remaining stages = 0
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Job 0 finished: load at UseCase2.java:19, took 0.207717 s
2022-02-10 13:31:15 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#8: java.lang.String   DeserializeToObject cast(value#0 as string).toString, obj#8: java.lang.String
 +- Project [value#0]                                                                                                                                                     +- Project [value#0]
    +- Relation[value#0] text                                                                                                                                                +- Relation[value#0] text
          
2022-02-10 13:31:15 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
!DeserializeToObject cast(value#0 as string).toString, obj#8: java.lang.String   DeserializeToObject value#0.toString, obj#8: java.lang.String
!+- Project [value#0]                                                            +- Relation[value#0] text
!   +- Relation[value#0] text                                                    
          
2022-02-10 13:31:15 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:15 INFO  FileSourceStrategy:54 - Post-Scan Filters: 
2022-02-10 13:31:15 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:15 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:15 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 010 */
/* 011 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 012 */     this.references = references;
/* 013 */   }
/* 014 */
/* 015 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 016 */     partitionIndex = index;
/* 017 */     this.inputs = inputs;
/* 018 */     scan_mutableStateArray_0[0] = inputs[0];
/* 019 */
/* 020 */   }
/* 021 */
/* 022 */   protected void processNext() throws java.io.IOException {
/* 023 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 024 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 025 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 026 */       append(scan_row_0);
/* 027 */       if (shouldStop()) return;
/* 028 */     }
/* 029 */   }
/* 030 */
/* 031 */ }

2022-02-10 13:31:15 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 010 */
/* 011 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 012 */     this.references = references;
/* 013 */   }
/* 014 */
/* 015 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 016 */     partitionIndex = index;
/* 017 */     this.inputs = inputs;
/* 018 */     scan_mutableStateArray_0[0] = inputs[0];
/* 019 */
/* 020 */   }
/* 021 */
/* 022 */   protected void processNext() throws java.io.IOException {
/* 023 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 024 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 025 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 026 */       append(scan_row_0);
/* 027 */       if (shouldStop()) return;
/* 028 */     }
/* 029 */   }
/* 030 */
/* 031 */ }

2022-02-10 13:31:15 INFO  CodeGenerator:54 - Code generated in 15.378099 ms
2022-02-10 13:31:15 INFO  MemoryStore:54 - Block broadcast_2 stored as values in memory (estimated size 221.9 KB, free 1969.9 MB)
2022-02-10 13:31:15 DEBUG BlockManager:58 - Put block broadcast_2 locally took  0 ms
2022-02-10 13:31:15 DEBUG BlockManager:58 - Putting block broadcast_2 without replication took  0 ms
2022-02-10 13:31:15 INFO  MemoryStore:54 - Block broadcast_2_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1969.9 MB)
2022-02-10 13:31:15 INFO  BlockManagerInfo:54 - Added broadcast_2_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.4 MB)
2022-02-10 13:31:15 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_2_piece0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Told master about block broadcast_2_piece0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Put block broadcast_2_piece0 locally took  0 ms
2022-02-10 13:31:15 DEBUG BlockManager:58 - Putting block broadcast_2_piece0 without replication took  0 ms
2022-02-10 13:31:15 INFO  SparkContext:54 - Created broadcast 2 from load at UseCase2.java:19
2022-02-10 13:31:15 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 14388598 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.Dataset$$anonfun$rdd$1.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType org.apache.spark.sql.Dataset$$anonfun$rdd$1.objectType$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(scala.collection.Iterator)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.Dataset$$anonfun$rdd$1$$anonfun$apply$16
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 3
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final scala.Option org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.maybeFirstLine$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.parsedOptions$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(scala.collection.Iterator)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9$$anonfun$apply$3
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.options$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(org.apache.spark.sql.types.DataType[],java.lang.String[])
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(org.apache.spark.sql.types.DataType[],org.apache.spark.sql.types.DataType[])
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) is now cleaned +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$36) +++
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$36.serialVersionUID
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$36.processPartition$1
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:15 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$36) is now cleaned +++
2022-02-10 13:31:15 INFO  SparkContext:54 - Starting job: load at UseCase2.java:19
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Got job 1 (load at UseCase2.java:19) with 1 output partitions
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Final stage: ResultStage 1 (load at UseCase2.java:19)
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:15 DEBUG DAGScheduler:58 - submitStage(ResultStage 1 (name=load at UseCase2.java:19;jobs=1))
2022-02-10 13:31:15 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Submitting ResultStage 1 (MapPartitionsRDD[9] at load at UseCase2.java:19), which has no missing parents
2022-02-10 13:31:15 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 1)
2022-02-10 13:31:15 INFO  MemoryStore:54 - Block broadcast_3 stored as values in memory (estimated size 13.9 KB, free 1969.9 MB)
2022-02-10 13:31:15 DEBUG BlockManager:58 - Put block broadcast_3 locally took  0 ms
2022-02-10 13:31:15 DEBUG BlockManager:58 - Putting block broadcast_3 without replication took  0 ms
2022-02-10 13:31:15 INFO  MemoryStore:54 - Block broadcast_3_piece0 stored as bytes in memory (estimated size 7.6 KB, free 1969.9 MB)
2022-02-10 13:31:15 INFO  BlockManagerInfo:54 - Added broadcast_3_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 7.6 KB, free: 1970.3 MB)
2022-02-10 13:31:15 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_3_piece0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Told master about block broadcast_3_piece0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Put block broadcast_3_piece0 locally took  0 ms
2022-02-10 13:31:15 DEBUG BlockManager:58 - Putting block broadcast_3_piece0 without replication took  0 ms
2022-02-10 13:31:15 INFO  SparkContext:54 - Created broadcast 3 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:15 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[9] at load at UseCase2.java:19) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:15 INFO  TaskSchedulerImpl:54 - Adding task set 1.0 with 1 tasks
2022-02-10 13:31:15 DEBUG TaskSetManager:58 - Epoch for TaskSet 1.0: 0
2022-02-10 13:31:15 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 1.0: NO_PREF, ANY
2022-02-10 13:31:15 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_1.0, runningTasks: 0
2022-02-10 13:31:15 INFO  TaskSetManager:54 - Starting task 0.0 in stage 1.0 (TID 1, localhost, executor driver, partition 0, PROCESS_LOCAL, 8350 bytes)
2022-02-10 13:31:15 INFO  Executor:54 - Running task 0.0 in stage 1.0 (TID 1)
2022-02-10 13:31:15 DEBUG BlockManager:58 - Getting local block broadcast_3
2022-02-10 13:31:15 DEBUG BlockManager:58 - Level for block broadcast_3 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:15 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:15 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:15 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:15 DEBUG BlockManager:58 - Getting local block broadcast_2
2022-02-10 13:31:15 DEBUG BlockManager:58 - Level for block broadcast_2 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(9)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 9
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 9
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(6)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 6
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 6
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(27)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 27
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 27
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(24)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 24
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 24
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(12)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 12
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 12
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(8)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 8
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 8
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(26)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 26
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 26
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(28)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 28
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 28
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(7)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 7
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 7
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(16)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 16
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 16
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(14)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 14
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 14
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(23)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 23
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 23
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(19)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 19
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 19
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(13)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 13
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 13
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(10)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 10
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 10
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(20)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 20
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 20
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(22)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 22
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 22
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(15)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 15
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 15
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(1)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning broadcast 1
2022-02-10 13:31:15 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 1
2022-02-10 13:31:15 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 1
2022-02-10 13:31:15 DEBUG BlockManager:58 - Removing broadcast 1
2022-02-10 13:31:15 DEBUG BlockManager:58 - Removing block broadcast_1
2022-02-10 13:31:15 DEBUG MemoryStore:58 - Block broadcast_1 of size 9144 dropped from memory (free 2065590554)
2022-02-10 13:31:15 DEBUG BlockManager:58 - Removing block broadcast_1_piece0
2022-02-10 13:31:15 DEBUG MemoryStore:58 - Block broadcast_1_piece0 of size 4741 dropped from memory (free 2065595295)
2022-02-10 13:31:15 INFO  BlockManagerInfo:54 - Removed broadcast_1_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 4.6 KB, free: 1970.4 MB)
2022-02-10 13:31:15 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_1_piece0
2022-02-10 13:31:15 DEBUG BlockManager:58 - Told master about block broadcast_1_piece0
2022-02-10 13:31:15 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 1, response is 0
2022-02-10 13:31:15 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaned broadcast 1
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(11)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 11
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 11
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(29)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 29
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 29
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(25)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 25
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 25
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(30)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 30
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 30
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(17)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 17
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 17
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(18)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 18
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 18
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(21)
2022-02-10 13:31:15 DEBUG ContextCleaner:58 - Cleaning accumulator 21
2022-02-10 13:31:15 INFO  ContextCleaner:54 - Cleaned accumulator 21
2022-02-10 13:31:15 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:16 INFO  Executor:54 - Finished task 0.0 in stage 1.0 (TID 1). 1544 bytes result sent to driver
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_1.0, runningTasks: 0
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Finished task 0.0 in stage 1.0 (TID 1) in 793 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Removed TaskSet 1.0, whose tasks have all completed, from pool 
2022-02-10 13:31:16 INFO  DAGScheduler:54 - ResultStage 1 (load at UseCase2.java:19) finished in 0.809 s
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - After removal of stage 1, remaining stages = 0
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Job 1 finished: load at UseCase2.java:19, took 0.806869 s
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Cleanup ===
 Aggregate [count(1) AS count#23L]                                                 Aggregate [count(1) AS count#23L]
 +- Relation[order_id#10,order_date#11,order_customer_id#12,order_status#13] csv   +- Relation[order_id#10,order_date#11,order_customer_id#12,order_status#13] csv
          
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 Aggregate [count(1) AS count#23L]                                                 Aggregate [count(1) AS count#23L]
!+- Relation[order_id#10,order_date#11,order_customer_id#12,order_status#13] csv   +- Project
!                                                                                     +- Relation[order_id#10,order_date#11,order_customer_id#12,order_status#13] csv
          
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Post-Scan Filters: 
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Output Data Schema: struct<>
2022-02-10 13:31:16 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:16 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private scala.collection.Iterator inputadapter_input_0;
/* 013 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     inputadapter_input_0 = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (inputadapter_input_0.hasNext() && !stopEarly()) {
/* 034 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 035 */       long inputadapter_value_0 = inputadapter_row_0.getLong(0);
/* 036 */
/* 037 */       agg_doConsume_0(inputadapter_row_0, inputadapter_value_0);
/* 038 */       if (shouldStop()) return;
/* 039 */     }
/* 040 */
/* 041 */   }
/* 042 */
/* 043 */   private void agg_doConsume_0(InternalRow inputadapter_row_0, long agg_expr_0_0) throws java.io.IOException {
/* 044 */     // do aggregate
/* 045 */     // common sub-expressions
/* 046 */
/* 047 */     // evaluate aggregate function
/* 048 */     long agg_value_3 = -1L;
/* 049 */     agg_value_3 = agg_bufValue_0 + agg_expr_0_0;
/* 050 */     // update aggregation buffer
/* 051 */     agg_bufIsNull_0 = false;
/* 052 */     agg_bufValue_0 = agg_value_3;
/* 053 */
/* 054 */   }
/* 055 */
/* 056 */   protected void processNext() throws java.io.IOException {
/* 057 */     while (!agg_initAgg_0) {
/* 058 */       agg_initAgg_0 = true;
/* 059 */       long agg_beforeAgg_0 = System.nanoTime();
/* 060 */       agg_doAggregateWithoutKey_0();
/* 061 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 062 */
/* 063 */       // output the result
/* 064 */
/* 065 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 066 */       agg_mutableStateArray_0[0].reset();
/* 067 */
/* 068 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 069 */
/* 070 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 071 */       append((agg_mutableStateArray_0[0].getRow()));
/* 072 */     }
/* 073 */   }
/* 074 */
/* 075 */ }

2022-02-10 13:31:16 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private scala.collection.Iterator inputadapter_input_0;
/* 013 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     inputadapter_input_0 = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (inputadapter_input_0.hasNext() && !stopEarly()) {
/* 034 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 035 */       long inputadapter_value_0 = inputadapter_row_0.getLong(0);
/* 036 */
/* 037 */       agg_doConsume_0(inputadapter_row_0, inputadapter_value_0);
/* 038 */       if (shouldStop()) return;
/* 039 */     }
/* 040 */
/* 041 */   }
/* 042 */
/* 043 */   private void agg_doConsume_0(InternalRow inputadapter_row_0, long agg_expr_0_0) throws java.io.IOException {
/* 044 */     // do aggregate
/* 045 */     // common sub-expressions
/* 046 */
/* 047 */     // evaluate aggregate function
/* 048 */     long agg_value_3 = -1L;
/* 049 */     agg_value_3 = agg_bufValue_0 + agg_expr_0_0;
/* 050 */     // update aggregation buffer
/* 051 */     agg_bufIsNull_0 = false;
/* 052 */     agg_bufValue_0 = agg_value_3;
/* 053 */
/* 054 */   }
/* 055 */
/* 056 */   protected void processNext() throws java.io.IOException {
/* 057 */     while (!agg_initAgg_0) {
/* 058 */       agg_initAgg_0 = true;
/* 059 */       long agg_beforeAgg_0 = System.nanoTime();
/* 060 */       agg_doAggregateWithoutKey_0();
/* 061 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 062 */
/* 063 */       // output the result
/* 064 */
/* 065 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 066 */       agg_mutableStateArray_0[0].reset();
/* 067 */
/* 068 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 069 */
/* 070 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 071 */       append((agg_mutableStateArray_0[0].getRow()));
/* 072 */     }
/* 073 */   }
/* 074 */
/* 075 */ }

2022-02-10 13:31:16 INFO  CodeGenerator:54 - Code generated in 10.0881 ms
2022-02-10 13:31:16 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 013 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     scan_mutableStateArray_0[0] = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 034 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 035 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 036 */       agg_doConsume_0(scan_row_0);
/* 037 */       if (shouldStop()) return;
/* 038 */     }
/* 039 */
/* 040 */   }
/* 041 */
/* 042 */   private void agg_doConsume_0(InternalRow scan_row_0) throws java.io.IOException {
/* 043 */     // do aggregate
/* 044 */     // common sub-expressions
/* 045 */
/* 046 */     // evaluate aggregate function
/* 047 */     long agg_value_1 = -1L;
/* 048 */     agg_value_1 = agg_bufValue_0 + 1L;
/* 049 */     // update aggregation buffer
/* 050 */     agg_bufIsNull_0 = false;
/* 051 */     agg_bufValue_0 = agg_value_1;
/* 052 */
/* 053 */   }
/* 054 */
/* 055 */   protected void processNext() throws java.io.IOException {
/* 056 */     while (!agg_initAgg_0) {
/* 057 */       agg_initAgg_0 = true;
/* 058 */       long agg_beforeAgg_0 = System.nanoTime();
/* 059 */       agg_doAggregateWithoutKey_0();
/* 060 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[2] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 061 */
/* 062 */       // output the result
/* 063 */
/* 064 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 065 */       agg_mutableStateArray_0[0].reset();
/* 066 */
/* 067 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 068 */
/* 069 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 070 */       append((agg_mutableStateArray_0[0].getRow()));
/* 071 */     }
/* 072 */   }
/* 073 */
/* 074 */ }

2022-02-10 13:31:16 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 013 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     scan_mutableStateArray_0[0] = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 034 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 035 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 036 */       agg_doConsume_0(scan_row_0);
/* 037 */       if (shouldStop()) return;
/* 038 */     }
/* 039 */
/* 040 */   }
/* 041 */
/* 042 */   private void agg_doConsume_0(InternalRow scan_row_0) throws java.io.IOException {
/* 043 */     // do aggregate
/* 044 */     // common sub-expressions
/* 045 */
/* 046 */     // evaluate aggregate function
/* 047 */     long agg_value_1 = -1L;
/* 048 */     agg_value_1 = agg_bufValue_0 + 1L;
/* 049 */     // update aggregation buffer
/* 050 */     agg_bufIsNull_0 = false;
/* 051 */     agg_bufValue_0 = agg_value_1;
/* 052 */
/* 053 */   }
/* 054 */
/* 055 */   protected void processNext() throws java.io.IOException {
/* 056 */     while (!agg_initAgg_0) {
/* 057 */       agg_initAgg_0 = true;
/* 058 */       long agg_beforeAgg_0 = System.nanoTime();
/* 059 */       agg_doAggregateWithoutKey_0();
/* 060 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[2] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 061 */
/* 062 */       // output the result
/* 063 */
/* 064 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 065 */       agg_mutableStateArray_0[0].reset();
/* 066 */
/* 067 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 068 */
/* 069 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 070 */       append((agg_mutableStateArray_0[0].getRow()));
/* 071 */     }
/* 072 */   }
/* 073 */
/* 074 */ }

2022-02-10 13:31:16 INFO  CodeGenerator:54 - Code generated in 8.2621 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_4 stored as values in memory (estimated size 221.8 KB, free 1969.7 MB)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_4 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_4 without replication took  0 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_4_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1969.7 MB)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Added broadcast_4_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_4_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_4_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_4_piece0 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_4_piece0 without replication took  0 ms
2022-02-10 13:31:16 INFO  SparkContext:54 - Created broadcast 4 from count at UseCase2.java:47
2022-02-10 13:31:16 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 7194299 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD$$anonfun$collect$1 org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.$outer
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      <function0>
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[15] at count at UseCase2.java:47
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[15] at count at UseCase2.java:47)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + cloning the object <function0> of class org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + cleaning cloned closure <function0> recursively (org.apache.spark.rdd.RDD$$anonfun$collect$1)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.$outer
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1.apply()
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.org$apache$spark$rdd$RDD$$anonfun$$$outer()
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[15] at count at UseCase2.java:47
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[15] at count at UseCase2.java:47)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:16 INFO  SparkContext:54 - Starting job: count at UseCase2.java:47
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Registering RDD 12 (count at UseCase2.java:47) as input to shuffle 0
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Got job 2 (count at UseCase2.java:47) with 1 output partitions
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Final stage: ResultStage 3 (count at UseCase2.java:47)
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Parents of final stage: List(ShuffleMapStage 2)
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Missing parents: List(ShuffleMapStage 2)
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitStage(ResultStage 3 (name=count at UseCase2.java:47;jobs=2))
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - missing: List(ShuffleMapStage 2)
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitStage(ShuffleMapStage 2 (name=count at UseCase2.java:47;jobs=2))
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting ShuffleMapStage 2 (MapPartitionsRDD[12] at count at UseCase2.java:47), which has no missing parents
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitMissingTasks(ShuffleMapStage 2)
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_5 stored as values in memory (estimated size 12.7 KB, free 1969.7 MB)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_5 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_5 without replication took  0 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_5_piece0 stored as bytes in memory (estimated size 6.8 KB, free 1969.6 MB)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Added broadcast_5_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 6.8 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_5_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_5_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_5_piece0 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_5_piece0 without replication took  0 ms
2022-02-10 13:31:16 INFO  SparkContext:54 - Created broadcast 5 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ShuffleMapStage 2 (MapPartitionsRDD[12] at count at UseCase2.java:47) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Adding task set 2.0 with 1 tasks
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Epoch for TaskSet 2.0: 0
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 2.0: NO_PREF, ANY
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_2.0, runningTasks: 0
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Starting task 0.0 in stage 2.0 (TID 2, localhost, executor driver, partition 0, PROCESS_LOCAL, 8307 bytes)
2022-02-10 13:31:16 INFO  Executor:54 - Running task 0.0 in stage 2.0 (TID 2)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Getting local block broadcast_5
2022-02-10 13:31:16 DEBUG BlockManager:58 - Level for block broadcast_5 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:16 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:16 DEBUG GenerateUnsafeProjection:58 - code for :
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(0, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */     return (mutableStateArray_0[0].getRow());
/* 028 */   }
/* 029 */
/* 030 */
/* 031 */ }

2022-02-10 13:31:16 DEBUG CodeGenerator:58 - 
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(0, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */     return (mutableStateArray_0[0].getRow());
/* 028 */   }
/* 029 */
/* 030 */
/* 031 */ }

2022-02-10 13:31:16 INFO  CodeGenerator:54 - Code generated in 4.1412 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Getting local block broadcast_4
2022-02-10 13:31:16 DEBUG BlockManager:58 - Level for block broadcast_4 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:16 INFO  Executor:54 - Finished task 0.0 in stage 2.0 (TID 2). 1559 bytes result sent to driver
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_2.0, runningTasks: 0
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Finished task 0.0 in stage 2.0 (TID 2) in 105 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Removed TaskSet 2.0, whose tasks have all completed, from pool 
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - ShuffleMapTask finished on driver
2022-02-10 13:31:16 INFO  DAGScheduler:54 - ShuffleMapStage 2 (count at UseCase2.java:47) finished in 0.121 s
2022-02-10 13:31:16 INFO  DAGScheduler:54 - looking for newly runnable stages
2022-02-10 13:31:16 INFO  DAGScheduler:54 - running: Set()
2022-02-10 13:31:16 INFO  DAGScheduler:54 - waiting: Set(ResultStage 3)
2022-02-10 13:31:16 INFO  DAGScheduler:54 - failed: Set()
2022-02-10 13:31:16 DEBUG MapOutputTrackerMaster:58 - Increasing epoch to 1
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitStage(ResultStage 3 (name=count at UseCase2.java:47;jobs=2))
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting ResultStage 3 (MapPartitionsRDD[15] at count at UseCase2.java:47), which has no missing parents
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 3)
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_6 stored as values in memory (estimated size 7.3 KB, free 1969.6 MB)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_6 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_6 without replication took  0 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_6_piece0 stored as bytes in memory (estimated size 3.9 KB, free 1969.6 MB)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Added broadcast_6_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 3.9 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_6_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_6_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_6_piece0 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_6_piece0 without replication took  0 ms
2022-02-10 13:31:16 INFO  SparkContext:54 - Created broadcast 6 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 3 (MapPartitionsRDD[15] at count at UseCase2.java:47) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Adding task set 3.0 with 1 tasks
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Epoch for TaskSet 3.0: 1
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 3.0: ANY
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_3.0, runningTasks: 0
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Starting task 0.0 in stage 3.0 (TID 3, localhost, executor driver, partition 0, ANY, 7767 bytes)
2022-02-10 13:31:16 INFO  Executor:54 - Running task 0.0 in stage 3.0 (TID 3)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Getting local block broadcast_6
2022-02-10 13:31:16 DEBUG BlockManager:58 - Level for block broadcast_6 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:16 DEBUG MapOutputTrackerMaster:58 - Fetching outputs for shuffle 0, partitions 0-1
2022-02-10 13:31:16 DEBUG ShuffleBlockFetcherIterator:58 - maxBytesInFlight: 50331648, targetRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
2022-02-10 13:31:16 INFO  ShuffleBlockFetcherIterator:54 - Getting 1 non-empty blocks including 1 local blocks and 0 remote blocks
2022-02-10 13:31:16 INFO  ShuffleBlockFetcherIterator:54 - Started 0 remote fetches in 0 ms
2022-02-10 13:31:16 DEBUG ShuffleBlockFetcherIterator:58 - Start fetching local blocks: shuffle_0_0_0
2022-02-10 13:31:16 DEBUG ShuffleBlockFetcherIterator:58 - Got local blocks in  15 ms
2022-02-10 13:31:16 INFO  Executor:54 - Finished task 0.0 in stage 3.0 (TID 3). 1696 bytes result sent to driver
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_3.0, runningTasks: 0
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Finished task 0.0 in stage 3.0 (TID 3) in 15 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Removed TaskSet 3.0, whose tasks have all completed, from pool 
2022-02-10 13:31:16 INFO  DAGScheduler:54 - ResultStage 3 (count at UseCase2.java:47) finished in 0.031 s
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - After removal of stage 2, remaining stages = 1
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - After removal of stage 3, remaining stages = 0
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Job 2 finished: count at UseCase2.java:47, took 0.162579 s
2022-02-10 13:31:16 WARN  SparkSession$Builder:66 - Using an existing SparkSession; some spark core configurations may not take effect.
2022-02-10 13:31:16 INFO  InMemoryFileIndex:54 - It took 0 ms to list leaf files for 1 paths.
2022-02-10 13:31:16 INFO  InMemoryFileIndex:54 - It took 1 ms to list leaf files for 2 paths.
2022-02-10 13:31:16 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#27
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Project [unresolvedalias('value, None)]   Project [value#27]
 +- Relation[value#27] text                 +- Relation[value#27] text
          
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#31: java.lang.String   DeserializeToObject cast(value#27 as string).toString, obj#31: java.lang.String
 +- LocalRelation <empty>, [value#27]                                                                                                                                      +- LocalRelation <empty>, [value#27]
          
2022-02-10 13:31:16 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#27
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#27, None)) > 0)
 +- Project [value#27]                      +- Project [value#27]
    +- Relation[value#27] text                 +- Relation[value#27] text
          
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#32: java.lang.String   DeserializeToObject cast(value#27 as string).toString, obj#32: java.lang.String
 +- LocalRelation <empty>, [value#27]                                                                                                                                      +- LocalRelation <empty>, [value#27]
          
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#33: java.lang.String   DeserializeToObject cast(value#27 as string).toString, obj#33: java.lang.String
 +- LocalRelation <empty>, [value#27]                                                                                                                                      +- LocalRelation <empty>, [value#27]
          
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 1                                     GlobalLimit 1
 +- LocalLimit 1                                   +- LocalLimit 1
    +- Filter (length(trim(value#27, None)) > 0)      +- Filter (length(trim(value#27, None)) > 0)
!      +- Project [value#27]                             +- Relation[value#27] text
!         +- Relation[value#27] text               
          
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Post-Scan Filters: (length(trim(value#27, None)) > 0)
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:16 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:16 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:16 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 026 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 027 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 028 */       do {
/* 029 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 030 */         UTF8String scan_value_0 = scan_isNull_0 ?
/* 031 */         null : (scan_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (scan_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = scan_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (scan_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, scan_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_7 stored as values in memory (estimated size 221.9 KB, free 1969.4 MB)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_7 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_7 without replication took  0 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_7_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1969.4 MB)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Added broadcast_7_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_7_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_7_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_7_piece0 locally took  16 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_7_piece0 without replication took  16 ms
2022-02-10 13:31:16 INFO  SparkContext:54 - Created broadcast 7 from load at UseCase2.java:19
2022-02-10 13:31:16 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 14388598 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$5.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(scala.Tuple2)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$6.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:16 INFO  SparkContext:54 - Starting job: load at UseCase2.java:19
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Got job 3 (load at UseCase2.java:19) with 1 output partitions
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Final stage: ResultStage 4 (load at UseCase2.java:19)
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitStage(ResultStage 4 (name=load at UseCase2.java:19;jobs=3))
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting ResultStage 4 (MapPartitionsRDD[19] at load at UseCase2.java:19), which has no missing parents
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 4)
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_8 stored as values in memory (estimated size 8.9 KB, free 1969.4 MB)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_8 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_8 without replication took  0 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_8_piece0 stored as bytes in memory (estimated size 4.6 KB, free 1969.4 MB)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Added broadcast_8_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 4.6 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_8_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_8_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_8_piece0 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_8_piece0 without replication took  0 ms
2022-02-10 13:31:16 INFO  SparkContext:54 - Created broadcast 8 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 4 (MapPartitionsRDD[19] at load at UseCase2.java:19) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Adding task set 4.0 with 1 tasks
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Epoch for TaskSet 4.0: 1
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 4.0: NO_PREF, ANY
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_4.0, runningTasks: 0
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Starting task 0.0 in stage 4.0 (TID 4, localhost, executor driver, partition 0, PROCESS_LOCAL, 8350 bytes)
2022-02-10 13:31:16 INFO  Executor:54 - Running task 0.0 in stage 4.0 (TID 4)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Getting local block broadcast_8
2022-02-10 13:31:16 DEBUG BlockManager:58 - Level for block broadcast_8 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:16 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:16 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:16 DEBUG BlockManager:58 - Getting local block broadcast_7
2022-02-10 13:31:16 DEBUG BlockManager:58 - Level for block broadcast_7 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:16 INFO  Executor:54 - Finished task 0.0 in stage 4.0 (TID 4). 1214 bytes result sent to driver
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_4.0, runningTasks: 0
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Finished task 0.0 in stage 4.0 (TID 4) in 15 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Removed TaskSet 4.0, whose tasks have all completed, from pool 
2022-02-10 13:31:16 INFO  DAGScheduler:54 - ResultStage 4 (load at UseCase2.java:19) finished in 0.015 s
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - After removal of stage 4, remaining stages = 0
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Job 3 finished: load at UseCase2.java:19, took 0.020686 s
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#35: java.lang.String   DeserializeToObject cast(value#27 as string).toString, obj#35: java.lang.String
 +- Project [value#27]                                                                                                                                                     +- Project [value#27]
    +- Relation[value#27] text                                                                                                                                                +- Relation[value#27] text
          
2022-02-10 13:31:16 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
!DeserializeToObject cast(value#27 as string).toString, obj#35: java.lang.String   DeserializeToObject value#27.toString, obj#35: java.lang.String
!+- Project [value#27]                                                             +- Relation[value#27] text
!   +- Relation[value#27] text                                                     
          
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Post-Scan Filters: 
2022-02-10 13:31:16 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:16 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:16 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 010 */
/* 011 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 012 */     this.references = references;
/* 013 */   }
/* 014 */
/* 015 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 016 */     partitionIndex = index;
/* 017 */     this.inputs = inputs;
/* 018 */     scan_mutableStateArray_0[0] = inputs[0];
/* 019 */
/* 020 */   }
/* 021 */
/* 022 */   protected void processNext() throws java.io.IOException {
/* 023 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 024 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 025 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 026 */       append(scan_row_0);
/* 027 */       if (shouldStop()) return;
/* 028 */     }
/* 029 */   }
/* 030 */
/* 031 */ }

2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_9 stored as values in memory (estimated size 221.9 KB, free 1969.2 MB)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_9 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_9 without replication took  0 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_9_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1969.2 MB)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Added broadcast_9_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_9_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_9_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_9_piece0 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_9_piece0 without replication took  0 ms
2022-02-10 13:31:16 INFO  SparkContext:54 - Created broadcast 9 from load at UseCase2.java:19
2022-02-10 13:31:16 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 14388598 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.Dataset$$anonfun$rdd$1.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType org.apache.spark.sql.Dataset$$anonfun$rdd$1.objectType$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.Dataset$$anonfun$rdd$1$$anonfun$apply$16
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 3
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final scala.Option org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.maybeFirstLine$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.parsedOptions$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9$$anonfun$apply$3
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.options$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(org.apache.spark.sql.types.DataType[],java.lang.String[])
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(org.apache.spark.sql.types.DataType[],org.apache.spark.sql.types.DataType[])
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) is now cleaned +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$36) +++
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$36.serialVersionUID
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$36.processPartition$1
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:16 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$36) is now cleaned +++
2022-02-10 13:31:16 INFO  SparkContext:54 - Starting job: load at UseCase2.java:19
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Got job 4 (load at UseCase2.java:19) with 1 output partitions
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Final stage: ResultStage 5 (load at UseCase2.java:19)
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitStage(ResultStage 5 (name=load at UseCase2.java:19;jobs=4))
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting ResultStage 5 (MapPartitionsRDD[25] at load at UseCase2.java:19), which has no missing parents
2022-02-10 13:31:16 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 5)
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_10 stored as values in memory (estimated size 13.9 KB, free 1969.1 MB)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_10 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_10 without replication took  0 ms
2022-02-10 13:31:16 INFO  MemoryStore:54 - Block broadcast_10_piece0 stored as bytes in memory (estimated size 7.6 KB, free 1969.1 MB)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Added broadcast_10_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 7.6 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_10_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_10_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Put block broadcast_10_piece0 locally took  0 ms
2022-02-10 13:31:16 DEBUG BlockManager:58 - Putting block broadcast_10_piece0 without replication took  0 ms
2022-02-10 13:31:16 INFO  SparkContext:54 - Created broadcast 10 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:16 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 5 (MapPartitionsRDD[25] at load at UseCase2.java:19) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:16 INFO  TaskSchedulerImpl:54 - Adding task set 5.0 with 1 tasks
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Epoch for TaskSet 5.0: 1
2022-02-10 13:31:16 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 5.0: NO_PREF, ANY
2022-02-10 13:31:16 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_5.0, runningTasks: 0
2022-02-10 13:31:16 INFO  TaskSetManager:54 - Starting task 0.0 in stage 5.0 (TID 5, localhost, executor driver, partition 0, PROCESS_LOCAL, 8350 bytes)
2022-02-10 13:31:16 INFO  Executor:54 - Running task 0.0 in stage 5.0 (TID 5)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Getting local block broadcast_10
2022-02-10 13:31:16 DEBUG BlockManager:58 - Level for block broadcast_10 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:16 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:16 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:16 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:16 DEBUG BlockManager:58 - Getting local block broadcast_9
2022-02-10 13:31:16 DEBUG BlockManager:58 - Level for block broadcast_9 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(129)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 129
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 129
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(143)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 143
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 143
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(101)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 101
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 101
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(110)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 110
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 110
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(43)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 43
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 43
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(100)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 100
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 100
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(99)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 99
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 99
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(4)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning broadcast 4
2022-02-10 13:31:16 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 4
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 4
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing broadcast 4
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_4_piece0
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_4_piece0 of size 21176 dropped from memory (free 2064803996)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Removed broadcast_4_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_4_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_4_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_4
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_4 of size 227072 dropped from memory (free 2065031068)
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 4, response is 0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaned broadcast 4
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(76)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 76
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 76
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(96)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 96
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 96
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(77)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 77
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 77
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(107)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 107
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 107
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(116)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 116
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 116
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(124)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 124
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 124
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(55)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 55
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 55
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(79)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 79
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 79
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(54)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 54
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 54
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(42)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 42
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 42
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(141)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 141
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 141
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(70)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 70
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 70
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanShuffle(0)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning shuffle 0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - removing shuffle 0
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned shuffle 0
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(89)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 89
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 89
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(74)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 74
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 74
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(85)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 85
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 85
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(69)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 69
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 69
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(120)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 120
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 120
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(71)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 71
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 71
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(72)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 72
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 72
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(53)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 53
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 53
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(7)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning broadcast 7
2022-02-10 13:31:16 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 7
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 7
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing broadcast 7
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_7
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_7 of size 227232 dropped from memory (free 2065258300)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_7_piece0
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_7_piece0 of size 21194 dropped from memory (free 2065279494)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Removed broadcast_7_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_7_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_7_piece0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 7, response is 0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaned broadcast 7
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(94)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 94
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 94
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(136)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 136
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 136
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(111)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 111
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 111
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(127)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 127
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 127
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(156)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 156
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 156
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(93)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 93
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 93
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(104)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 104
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Done removing shuffle 0, response is true
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 104
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(5)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning broadcast 5
2022-02-10 13:31:16 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 5
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: true to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 5
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing broadcast 5
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_5
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_5 of size 13040 dropped from memory (free 2065292534)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_5_piece0
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_5_piece0 of size 6999 dropped from memory (free 2065299533)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Removed broadcast_5_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 6.8 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_5_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_5_piece0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 5, response is 0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaned broadcast 5
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(39)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 39
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 39
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(64)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 64
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 64
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(73)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 73
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 73
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(131)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 131
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 131
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(82)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 82
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 82
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(78)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 78
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 78
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(75)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 75
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 75
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(83)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 83
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 83
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(159)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 159
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 159
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(45)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 45
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 45
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(157)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 157
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 157
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(47)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 47
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 47
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(3)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning broadcast 3
2022-02-10 13:31:16 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 3
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 3
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing broadcast 3
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_3_piece0
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_3_piece0 of size 7747 dropped from memory (free 2065307280)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Removed broadcast_3_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 7.6 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_3_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_3_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_3
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_3 of size 14256 dropped from memory (free 2065321536)
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 3, response is 0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaned broadcast 3
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(118)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 118
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 118
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(40)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 40
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 40
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(36)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 36
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 36
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(142)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 142
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 142
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(106)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 106
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 106
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(80)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 80
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 80
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(112)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 112
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 112
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(88)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 88
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 88
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(146)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 146
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 146
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(98)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 98
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 98
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(103)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 103
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 103
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(44)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 44
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 44
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(46)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 46
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 46
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(113)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 113
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 113
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(109)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 109
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 109
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(90)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 90
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 90
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(56)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 56
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 56
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(147)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 147
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 147
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(91)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 91
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 91
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(135)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 135
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 135
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(149)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 149
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 149
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(114)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 114
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 114
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(66)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 66
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 66
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(38)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 38
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 38
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(154)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 154
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 154
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(8)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning broadcast 8
2022-02-10 13:31:16 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 8
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 8
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing broadcast 8
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_8
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_8 of size 9144 dropped from memory (free 2065330680)
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_8_piece0
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_8_piece0 of size 4744 dropped from memory (free 2065335424)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Removed broadcast_8_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 4.6 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_8_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_8_piece0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 8, response is 0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaned broadcast 8
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(122)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 122
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 122
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(130)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 130
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 130
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(148)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 148
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 148
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(59)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 59
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 59
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(65)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 65
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 65
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(145)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 145
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 145
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(57)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 57
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 57
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(92)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 92
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 92
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(97)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 97
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 97
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(115)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 115
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 115
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(126)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 126
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 126
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(153)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 153
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 153
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(48)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 48
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 48
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(50)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 50
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 50
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(37)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 37
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 37
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(60)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 60
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 60
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(123)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 123
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 123
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(151)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 151
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 151
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(144)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 144
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 144
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(52)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 52
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 52
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(128)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 128
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 128
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(84)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 84
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 84
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(158)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 158
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 158
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(140)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 140
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 140
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(49)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 49
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 49
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(61)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 61
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 61
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(134)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 134
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 134
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(81)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 81
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 81
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(137)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 137
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 137
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(95)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 95
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 95
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(133)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 133
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 133
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(41)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 41
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 41
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(86)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 86
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 86
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(138)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 138
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 138
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(67)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 67
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 67
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(63)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 63
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 63
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(119)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 119
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 119
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(132)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 132
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 132
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(155)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 155
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 155
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(121)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 121
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 121
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(102)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 102
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 102
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(58)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 58
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 58
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(117)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 117
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 117
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(105)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 105
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 105
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(152)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 152
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 152
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(150)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 150
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 150
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(51)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 51
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 51
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(62)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 62
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 62
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(68)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 68
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 68
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(87)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 87
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 87
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(6)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning broadcast 6
2022-02-10 13:31:16 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 6
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 6
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing broadcast 6
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_6_piece0
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_6_piece0 of size 4011 dropped from memory (free 2065339435)
2022-02-10 13:31:16 INFO  BlockManagerInfo:54 - Removed broadcast_6_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 3.9 KB, free: 1970.3 MB)
2022-02-10 13:31:16 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_6_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Told master about block broadcast_6_piece0
2022-02-10 13:31:16 DEBUG BlockManager:58 - Removing block broadcast_6
2022-02-10 13:31:16 DEBUG MemoryStore:58 - Block broadcast_6 of size 7432 dropped from memory (free 2065346867)
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 6, response is 0
2022-02-10 13:31:16 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaned broadcast 6
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(108)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 108
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 108
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(125)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 125
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 125
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(139)
2022-02-10 13:31:16 DEBUG ContextCleaner:58 - Cleaning accumulator 139
2022-02-10 13:31:16 INFO  ContextCleaner:54 - Cleaned accumulator 139
2022-02-10 13:31:17 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:17 INFO  Executor:54 - Finished task 0.0 in stage 5.0 (TID 5). 1630 bytes result sent to driver
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_5.0, runningTasks: 0
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Finished task 0.0 in stage 5.0 (TID 5) in 631 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Removed TaskSet 5.0, whose tasks have all completed, from pool 
2022-02-10 13:31:17 INFO  DAGScheduler:54 - ResultStage 5 (load at UseCase2.java:19) finished in 0.631 s
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - After removal of stage 5, remaining stages = 0
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Job 4 finished: load at UseCase2.java:19, took 0.627917 s
2022-02-10 13:31:17 WARN  SparkSession$Builder:66 - Using an existing SparkSession; some spark core configurations may not take effect.
2022-02-10 13:31:17 INFO  InMemoryFileIndex:54 - It took 0 ms to list leaf files for 1 paths.
2022-02-10 13:31:17 INFO  InMemoryFileIndex:54 - It took 0 ms to list leaf files for 2 paths.
2022-02-10 13:31:17 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#45
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Project [unresolvedalias('value, None)]   Project [value#45]
 +- Relation[value#45] text                 +- Relation[value#45] text
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#49: java.lang.String   DeserializeToObject cast(value#45 as string).toString, obj#49: java.lang.String
 +- LocalRelation <empty>, [value#45]                                                                                                                                      +- LocalRelation <empty>, [value#45]
          
2022-02-10 13:31:17 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#45
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#45, None)) > 0)
 +- Project [value#45]                      +- Project [value#45]
    +- Relation[value#45] text                 +- Relation[value#45] text
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#50: java.lang.String   DeserializeToObject cast(value#45 as string).toString, obj#50: java.lang.String
 +- LocalRelation <empty>, [value#45]                                                                                                                                      +- LocalRelation <empty>, [value#45]
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#51: java.lang.String   DeserializeToObject cast(value#45 as string).toString, obj#51: java.lang.String
 +- LocalRelation <empty>, [value#45]                                                                                                                                      +- LocalRelation <empty>, [value#45]
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 1                                     GlobalLimit 1
 +- LocalLimit 1                                   +- LocalLimit 1
    +- Filter (length(trim(value#45, None)) > 0)      +- Filter (length(trim(value#45, None)) > 0)
!      +- Project [value#45]                             +- Relation[value#45] text
!         +- Relation[value#45] text               
          
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Post-Scan Filters: (length(trim(value#45, None)) > 0)
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:17 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:17 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 026 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 027 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 028 */       do {
/* 029 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 030 */         UTF8String scan_value_0 = scan_isNull_0 ?
/* 031 */         null : (scan_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (scan_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = scan_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (scan_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, scan_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_11 stored as values in memory (estimated size 221.9 KB, free 1969.5 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_11 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_11 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_11_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1969.4 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_11_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_11_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_11_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_11_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_11_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 11 from load at UseCase2.java:24
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 10296320 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$5.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(scala.Tuple2)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$6.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:17 INFO  SparkContext:54 - Starting job: load at UseCase2.java:24
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Got job 5 (load at UseCase2.java:24) with 1 output partitions
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Final stage: ResultStage 6 (load at UseCase2.java:24)
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitStage(ResultStage 6 (name=load at UseCase2.java:24;jobs=5))
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting ResultStage 6 (MapPartitionsRDD[29] at load at UseCase2.java:24), which has no missing parents
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 6)
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_12 stored as values in memory (estimated size 8.9 KB, free 1969.4 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_12 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_12 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_12_piece0 stored as bytes in memory (estimated size 4.6 KB, free 1969.4 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_12_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 4.6 KB, free: 1970.3 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_12_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_12_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_12_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_12_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 12 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 6 (MapPartitionsRDD[29] at load at UseCase2.java:24) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Adding task set 6.0 with 1 tasks
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Epoch for TaskSet 6.0: 1
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 6.0: NO_PREF, ANY
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_6.0, runningTasks: 0
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Starting task 0.0 in stage 6.0 (TID 6, localhost, executor driver, partition 0, PROCESS_LOCAL, 8353 bytes)
2022-02-10 13:31:17 INFO  Executor:54 - Running task 0.0 in stage 6.0 (TID 6)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_12
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_12 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:17 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_11
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_11 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 INFO  Executor:54 - Finished task 0.0 in stage 6.0 (TID 6). 1248 bytes result sent to driver
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_6.0, runningTasks: 0
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Finished task 0.0 in stage 6.0 (TID 6) in 16 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Removed TaskSet 6.0, whose tasks have all completed, from pool 
2022-02-10 13:31:17 INFO  DAGScheduler:54 - ResultStage 6 (load at UseCase2.java:24) finished in 0.016 s
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - After removal of stage 6, remaining stages = 0
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Job 5 finished: load at UseCase2.java:24, took 0.018066 s
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#53: java.lang.String   DeserializeToObject cast(value#45 as string).toString, obj#53: java.lang.String
 +- Project [value#45]                                                                                                                                                     +- Project [value#45]
    +- Relation[value#45] text                                                                                                                                                +- Relation[value#45] text
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
!DeserializeToObject cast(value#45 as string).toString, obj#53: java.lang.String   DeserializeToObject value#45.toString, obj#53: java.lang.String
!+- Project [value#45]                                                             +- Relation[value#45] text
!   +- Relation[value#45] text                                                     
          
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Post-Scan Filters: 
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:17 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 010 */
/* 011 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 012 */     this.references = references;
/* 013 */   }
/* 014 */
/* 015 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 016 */     partitionIndex = index;
/* 017 */     this.inputs = inputs;
/* 018 */     scan_mutableStateArray_0[0] = inputs[0];
/* 019 */
/* 020 */   }
/* 021 */
/* 022 */   protected void processNext() throws java.io.IOException {
/* 023 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 024 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 025 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 026 */       append(scan_row_0);
/* 027 */       if (shouldStop()) return;
/* 028 */     }
/* 029 */   }
/* 030 */
/* 031 */ }

2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_13 stored as values in memory (estimated size 221.9 KB, free 1969.2 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_13 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_13 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_13_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1969.2 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_13_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_13_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_13_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_13_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_13_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 13 from load at UseCase2.java:24
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 10296320 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.Dataset$$anonfun$rdd$1.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType org.apache.spark.sql.Dataset$$anonfun$rdd$1.objectType$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.Dataset$$anonfun$rdd$1$$anonfun$apply$16
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 3
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final scala.Option org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.maybeFirstLine$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.parsedOptions$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9$$anonfun$apply$3
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.options$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(org.apache.spark.sql.types.DataType[],java.lang.String[])
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(org.apache.spark.sql.types.DataType[],org.apache.spark.sql.types.DataType[])
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$36) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$36.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$36.processPartition$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$36) is now cleaned +++
2022-02-10 13:31:17 INFO  SparkContext:54 - Starting job: load at UseCase2.java:24
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Got job 6 (load at UseCase2.java:24) with 1 output partitions
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Final stage: ResultStage 7 (load at UseCase2.java:24)
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitStage(ResultStage 7 (name=load at UseCase2.java:24;jobs=6))
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting ResultStage 7 (MapPartitionsRDD[35] at load at UseCase2.java:24), which has no missing parents
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 7)
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_14 stored as values in memory (estimated size 14.0 KB, free 1969.2 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_14 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_14 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_14_piece0 stored as bytes in memory (estimated size 7.6 KB, free 1969.2 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_14_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 7.6 KB, free: 1970.3 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_14_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_14_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_14_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_14_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 14 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 7 (MapPartitionsRDD[35] at load at UseCase2.java:24) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Adding task set 7.0 with 1 tasks
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Epoch for TaskSet 7.0: 1
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 7.0: NO_PREF, ANY
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_7.0, runningTasks: 0
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Starting task 0.0 in stage 7.0 (TID 7, localhost, executor driver, partition 0, PROCESS_LOCAL, 8353 bytes)
2022-02-10 13:31:17 INFO  Executor:54 - Running task 0.0 in stage 7.0 (TID 7)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_14
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_14 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:17 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:17 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_13
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_13 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:17 INFO  Executor:54 - Finished task 0.0 in stage 7.0 (TID 7). 1473 bytes result sent to driver
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_7.0, runningTasks: 0
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Finished task 0.0 in stage 7.0 (TID 7) in 63 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Removed TaskSet 7.0, whose tasks have all completed, from pool 
2022-02-10 13:31:17 INFO  DAGScheduler:54 - ResultStage 7 (load at UseCase2.java:24) finished in 0.063 s
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - After removal of stage 7, remaining stages = 0
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Job 6 finished: load at UseCase2.java:24, took 0.071184 s
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Filter (order_date#38 LIKE 2014-01% && isnull(order_id#37))                                                                                                                              Filter (cast(order_date#38 as string) LIKE 2014-01% && isnull(order_id#37))
 +- Join RightOuter, (order_customer_id#39 = customer_id#55)                                                                                                                               +- Join RightOuter, (order_customer_id#39 = customer_id#55)
    :- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv                                                                                                           :- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv
    +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv      +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Cleanup ===
 Aggregate [count(1) AS count#131L]                                                                                                                                                                 Aggregate [count(1) AS count#131L]
 +- Sort [customer_id#55 ASC NULLS FIRST], true                                                                                                                                                     +- Sort [customer_id#55 ASC NULLS FIRST], true
    +- Project [customer_id#55, customer_fname#56, customer_lname#57, customer_email#58, customer_password#59, customer_street#60, customer_city#61, customer_state#62, customer_zipcode#63]           +- Project [customer_id#55, customer_fname#56, customer_lname#57, customer_email#58, customer_password#59, customer_street#60, customer_city#61, customer_state#62, customer_zipcode#63]
       +- Filter (cast(order_date#38 as string) LIKE 2014-01% && isnull(order_id#37))                                                                                                                     +- Filter (cast(order_date#38 as string) LIKE 2014-01% && isnull(order_id#37))
          +- Join RightOuter, (order_customer_id#39 = customer_id#55)                                                                                                                                        +- Join RightOuter, (order_customer_id#39 = customer_id#55)
             :- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv                                                                                                                    :- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv
             +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv               +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 Aggregate [count(1) AS count#131L]                                                                                                                                                                 Aggregate [count(1) AS count#131L]
!+- Sort [customer_id#55 ASC NULLS FIRST], true                                                                                                                                                     +- Project
!   +- Project [customer_id#55, customer_fname#56, customer_lname#57, customer_email#58, customer_password#59, customer_street#60, customer_city#61, customer_state#62, customer_zipcode#63]           +- Sort [customer_id#55 ASC NULLS FIRST], true
!      +- Filter (cast(order_date#38 as string) LIKE 2014-01% && isnull(order_id#37))                                                                                                                     +- Project [customer_id#55]
!         +- Join RightOuter, (order_customer_id#39 = customer_id#55)                                                                                                                                        +- Join Inner, (order_customer_id#39 = customer_id#55)
!            :- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv                                                                                                                    :- Project [order_customer_id#39]
!            +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv               :  +- Filter (StartsWith(cast(order_date#38 as string), 2014-01) && isnull(order_id#37))
!                                                                                                                                                                                                               :     +- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv
!                                                                                                                                                                                                               +- Project [customer_id#55]
!                                                                                                                                                                                                                  +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Infer Filters ===
 Aggregate [count(1) AS count#131L]                                                                                                                                                                    Aggregate [count(1) AS count#131L]
 +- Project                                                                                                                                                                                            +- Project
    +- Sort [customer_id#55 ASC NULLS FIRST], true                                                                                                                                                        +- Sort [customer_id#55 ASC NULLS FIRST], true
       +- Project [customer_id#55]                                                                                                                                                                           +- Project [customer_id#55]
          +- Join Inner, (order_customer_id#39 = customer_id#55)                                                                                                                                                +- Join Inner, (order_customer_id#39 = customer_id#55)
!            :- Project [order_customer_id#39]                                                                                                                                                                     :- Filter isnotnull(order_customer_id#39)
!            :  +- Filter (StartsWith(cast(order_date#38 as string), 2014-01) && isnull(order_id#37))                                                                                                              :  +- Project [order_customer_id#39]
!            :     +- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv                                                                                                                 :     +- Filter (isnotnull(order_date#38) && (StartsWith(cast(order_date#38 as string), 2014-01) && isnull(order_id#37)))
!            +- Project [customer_id#55]                                                                                                                                                                           :        +- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv
!               +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv               +- Filter isnotnull(customer_id#55)
!                                                                                                                                                                                                                     +- Project [customer_id#55]
!                                                                                                                                                                                                                        +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization after Inferring Filters ===
 Aggregate [count(1) AS count#131L]                                                                                                                                                                       Aggregate [count(1) AS count#131L]
 +- Project                                                                                                                                                                                               +- Project
    +- Sort [customer_id#55 ASC NULLS FIRST], true                                                                                                                                                           +- Sort [customer_id#55 ASC NULLS FIRST], true
       +- Project [customer_id#55]                                                                                                                                                                              +- Project [customer_id#55]
          +- Join Inner, (order_customer_id#39 = customer_id#55)                                                                                                                                                   +- Join Inner, (order_customer_id#39 = customer_id#55)
!            :- Filter isnotnull(order_customer_id#39)                                                                                                                                                                :- Project [order_customer_id#39]
!            :  +- Project [order_customer_id#39]                                                                                                                                                                     :  +- Filter ((isnotnull(order_date#38) && (StartsWith(cast(order_date#38 as string), 2014-01) && isnull(order_id#37))) && isnotnull(order_customer_id#39))
!            :     +- Filter (isnotnull(order_date#38) && (StartsWith(cast(order_date#38 as string), 2014-01) && isnull(order_id#37)))                                                                                :     +- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv
!            :        +- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv                                                                                                                 +- Project [customer_id#55]
!            +- Filter isnotnull(customer_id#55)                                                                                                                                                                         +- Filter isnotnull(customer_id#55)
!               +- Project [customer_id#55]                                                                                                                                                                                 +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv
!                  +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv   
          
2022-02-10 13:31:17 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch RewriteSubquery ===
 Aggregate [count(1) AS count#131L]                                                                                                                                                                       Aggregate [count(1) AS count#131L]
 +- Project                                                                                                                                                                                               +- Project
    +- Sort [customer_id#55 ASC NULLS FIRST], true                                                                                                                                                           +- Sort [customer_id#55 ASC NULLS FIRST], true
       +- Project [customer_id#55]                                                                                                                                                                              +- Project [customer_id#55]
          +- Join Inner, (order_customer_id#39 = customer_id#55)                                                                                                                                                   +- Join Inner, (order_customer_id#39 = customer_id#55)
             :- Project [order_customer_id#39]                                                                                                                                                                        :- Project [order_customer_id#39]
!            :  +- Filter ((isnotnull(order_date#38) && (StartsWith(cast(order_date#38 as string), 2014-01) && isnull(order_id#37))) && isnotnull(order_customer_id#39))                                              :  +- Filter (((isnotnull(order_date#38) && StartsWith(cast(order_date#38 as string), 2014-01)) && isnull(order_id#37)) && isnotnull(order_customer_id#39))
             :     +- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv                                                                                                                    :     +- Relation[order_id#37,order_date#38,order_customer_id#39,order_status#40] csv
             +- Project [customer_id#55]                                                                                                                                                                              +- Project [customer_id#55]
                +- Filter isnotnull(customer_id#55)                                                                                                                                                                      +- Filter isnotnull(customer_id#55)
                   +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv                     +- Relation[customer_id#55,customer_fname#56,customer_lname#57,customer_email#58,customer_password#59,customer_street#60,customer_city#61,customer_state#62,customer_zipcode#63] csv
          
2022-02-10 13:31:17 DEBUG ExtractEquiJoinKeys:58 - Considering join on: Some((order_customer_id#39 = customer_id#55))
2022-02-10 13:31:17 DEBUG ExtractEquiJoinKeys:58 - leftKeys:List(order_customer_id#39) | rightKeys:List(customer_id#55)
2022-02-10 13:31:17 DEBUG ExtractEquiJoinKeys:58 - Considering join on: Some((order_customer_id#39 = customer_id#55))
2022-02-10 13:31:17 DEBUG ExtractEquiJoinKeys:58 - leftKeys:List(order_customer_id#39) | rightKeys:List(customer_id#55)
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Post-Scan Filters: isnotnull(order_date#38),StartsWith(cast(order_date#38 as string), 2014-01),isnull(order_id#37),isnotnull(order_customer_id#39)
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Output Data Schema: struct<order_id: int, order_date: timestamp, order_customer_id: int ... 1 more fields>
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Pushed Filters: IsNotNull(order_date),IsNull(order_id),IsNotNull(order_customer_id)
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Post-Scan Filters: isnotnull(customer_id#55)
2022-02-10 13:31:17 INFO  FileSourceStrategy:54 - Output Data Schema: struct<customer_id: int>
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Pushed Filters: IsNotNull(customer_id)
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Pushed Filters: IsNull(none),IsNotNull(none),IsNotNull(none)
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Pushed Filters: IsNotNull(none)
2022-02-10 13:31:17 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage4(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=4
/* 006 */ final class GeneratedIteratorForCodegenStage4 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private scala.collection.Iterator inputadapter_input_0;
/* 013 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage4(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     inputadapter_input_0 = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (inputadapter_input_0.hasNext() && !stopEarly()) {
/* 034 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 035 */       long inputadapter_value_0 = inputadapter_row_0.getLong(0);
/* 036 */
/* 037 */       agg_doConsume_0(inputadapter_row_0, inputadapter_value_0);
/* 038 */       if (shouldStop()) return;
/* 039 */     }
/* 040 */
/* 041 */   }
/* 042 */
/* 043 */   private void agg_doConsume_0(InternalRow inputadapter_row_0, long agg_expr_0_0) throws java.io.IOException {
/* 044 */     // do aggregate
/* 045 */     // common sub-expressions
/* 046 */
/* 047 */     // evaluate aggregate function
/* 048 */     long agg_value_3 = -1L;
/* 049 */     agg_value_3 = agg_bufValue_0 + agg_expr_0_0;
/* 050 */     // update aggregation buffer
/* 051 */     agg_bufIsNull_0 = false;
/* 052 */     agg_bufValue_0 = agg_value_3;
/* 053 */
/* 054 */   }
/* 055 */
/* 056 */   protected void processNext() throws java.io.IOException {
/* 057 */     while (!agg_initAgg_0) {
/* 058 */       agg_initAgg_0 = true;
/* 059 */       long agg_beforeAgg_0 = System.nanoTime();
/* 060 */       agg_doAggregateWithoutKey_0();
/* 061 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 062 */
/* 063 */       // output the result
/* 064 */
/* 065 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 066 */       agg_mutableStateArray_0[0].reset();
/* 067 */
/* 068 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 069 */
/* 070 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 071 */       append((agg_mutableStateArray_0[0].getRow()));
/* 072 */     }
/* 073 */   }
/* 074 */
/* 075 */ }

2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage4(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=4
/* 006 */ final class GeneratedIteratorForCodegenStage4 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private scala.collection.Iterator inputadapter_input_0;
/* 013 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage4(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     inputadapter_input_0 = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (inputadapter_input_0.hasNext() && !stopEarly()) {
/* 034 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 035 */       long inputadapter_value_0 = inputadapter_row_0.getLong(0);
/* 036 */
/* 037 */       agg_doConsume_0(inputadapter_row_0, inputadapter_value_0);
/* 038 */       if (shouldStop()) return;
/* 039 */     }
/* 040 */
/* 041 */   }
/* 042 */
/* 043 */   private void agg_doConsume_0(InternalRow inputadapter_row_0, long agg_expr_0_0) throws java.io.IOException {
/* 044 */     // do aggregate
/* 045 */     // common sub-expressions
/* 046 */
/* 047 */     // evaluate aggregate function
/* 048 */     long agg_value_3 = -1L;
/* 049 */     agg_value_3 = agg_bufValue_0 + agg_expr_0_0;
/* 050 */     // update aggregation buffer
/* 051 */     agg_bufIsNull_0 = false;
/* 052 */     agg_bufValue_0 = agg_value_3;
/* 053 */
/* 054 */   }
/* 055 */
/* 056 */   protected void processNext() throws java.io.IOException {
/* 057 */     while (!agg_initAgg_0) {
/* 058 */       agg_initAgg_0 = true;
/* 059 */       long agg_beforeAgg_0 = System.nanoTime();
/* 060 */       agg_doAggregateWithoutKey_0();
/* 061 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 062 */
/* 063 */       // output the result
/* 064 */
/* 065 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 066 */       agg_mutableStateArray_0[0].reset();
/* 067 */
/* 068 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 069 */
/* 070 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 071 */       append((agg_mutableStateArray_0[0].getRow()));
/* 072 */     }
/* 073 */   }
/* 074 */
/* 075 */ }

2022-02-10 13:31:17 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[2];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 021 */     filter_mutableStateArray_0[1] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 022 */
/* 023 */   }
/* 024 */
/* 025 */   protected void processNext() throws java.io.IOException {
/* 026 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 027 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 028 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 029 */       do {
/* 030 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 031 */         int scan_value_0 = scan_isNull_0 ?
/* 032 */         -1 : (scan_row_0.getInt(0));
/* 033 */
/* 034 */         if (!(!scan_isNull_0)) continue;
/* 035 */
/* 036 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 037 */
/* 038 */         filter_mutableStateArray_0[1].reset();
/* 039 */
/* 040 */         if (false) {
/* 041 */           filter_mutableStateArray_0[1].setNullAt(0);
/* 042 */         } else {
/* 043 */           filter_mutableStateArray_0[1].write(0, scan_value_0);
/* 044 */         }
/* 045 */         append((filter_mutableStateArray_0[1].getRow()));
/* 046 */
/* 047 */       } while(false);
/* 048 */       if (shouldStop()) return;
/* 049 */     }
/* 050 */   }
/* 051 */
/* 052 */ }

2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[2];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 021 */     filter_mutableStateArray_0[1] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 022 */
/* 023 */   }
/* 024 */
/* 025 */   protected void processNext() throws java.io.IOException {
/* 026 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 027 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 028 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 029 */       do {
/* 030 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 031 */         int scan_value_0 = scan_isNull_0 ?
/* 032 */         -1 : (scan_row_0.getInt(0));
/* 033 */
/* 034 */         if (!(!scan_isNull_0)) continue;
/* 035 */
/* 036 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 037 */
/* 038 */         filter_mutableStateArray_0[1].reset();
/* 039 */
/* 040 */         if (false) {
/* 041 */           filter_mutableStateArray_0[1].setNullAt(0);
/* 042 */         } else {
/* 043 */           filter_mutableStateArray_0[1].write(0, scan_value_0);
/* 044 */         }
/* 045 */         append((filter_mutableStateArray_0[1].getRow()));
/* 046 */
/* 047 */       } while(false);
/* 048 */       if (shouldStop()) return;
/* 049 */     }
/* 050 */   }
/* 051 */
/* 052 */ }

2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 12.0627 ms
2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 8.5415 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_15 stored as values in memory (estimated size 221.8 KB, free 1968.9 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_15 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_15 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_15_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1968.9 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_15_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.3 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_15_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_15_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_15_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_15_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 15 from run at ThreadPoolExecutor.java:1149
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 5148160 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage3(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=3
/* 006 */ final class GeneratedIteratorForCodegenStage3 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private boolean sort_needToSort_0;
/* 013 */   private org.apache.spark.sql.execution.UnsafeExternalRowSorter sort_sorter_0;
/* 014 */   private org.apache.spark.executor.TaskMetrics sort_metrics_0;
/* 015 */   private scala.collection.Iterator<UnsafeRow> sort_sortedIter_0;
/* 016 */   private scala.collection.Iterator inputadapter_input_0;
/* 017 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 018 */
/* 019 */   public GeneratedIteratorForCodegenStage3(Object[] references) {
/* 020 */     this.references = references;
/* 021 */   }
/* 022 */
/* 023 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 024 */     partitionIndex = index;
/* 025 */     this.inputs = inputs;
/* 026 */
/* 027 */     sort_needToSort_0 = true;
/* 028 */     sort_sorter_0 = ((org.apache.spark.sql.execution.SortExec) references[0] /* plan */).createSorter();
/* 029 */     sort_metrics_0 = org.apache.spark.TaskContext.get().taskMetrics();
/* 030 */     inputadapter_input_0 = inputs[0];
/* 031 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 032 */
/* 033 */   }
/* 034 */
/* 035 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 036 */     // initialize aggregation buffer
/* 037 */     agg_bufIsNull_0 = false;
/* 038 */     agg_bufValue_0 = 0L;
/* 039 */
/* 040 */     if (sort_needToSort_0) {
/* 041 */       long sort_spillSizeBefore_0 = sort_metrics_0.memoryBytesSpilled();
/* 042 */       sort_addToSorter_0();
/* 043 */       sort_sortedIter_0 = sort_sorter_0.sort();
/* 044 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[3] /* sortTime */).add(sort_sorter_0.getSortTimeNanos() / 1000000);
/* 045 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* peakMemory */).add(sort_sorter_0.getPeakMemoryUsage());
/* 046 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[2] /* spillSize */).add(sort_metrics_0.memoryBytesSpilled() - sort_spillSizeBefore_0);
/* 047 */       sort_metrics_0.incPeakExecutionMemory(sort_sorter_0.getPeakMemoryUsage());
/* 048 */       sort_needToSort_0 = false;
/* 049 */     }
/* 050 */
/* 051 */     while (sort_sortedIter_0.hasNext()) {
/* 052 */       UnsafeRow sort_outputRow_0 = (UnsafeRow)sort_sortedIter_0.next();
/* 053 */
/* 054 */       agg_doConsume_0();
/* 055 */
/* 056 */       if (shouldStop()) return;
/* 057 */     }
/* 058 */
/* 059 */   }
/* 060 */
/* 061 */   private void sort_addToSorter_0() throws java.io.IOException {
/* 062 */     while (inputadapter_input_0.hasNext() && !stopEarly()) {
/* 063 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 064 */       sort_sorter_0.insertRow((UnsafeRow)inputadapter_row_0);
/* 065 */       if (shouldStop()) return;
/* 066 */     }
/* 067 */
/* 068 */   }
/* 069 */
/* 070 */   private void agg_doConsume_0() throws java.io.IOException {
/* 071 */     // do aggregate
/* 072 */     // common sub-expressions
/* 073 */
/* 074 */     // evaluate aggregate function
/* 075 */     long agg_value_1 = -1L;
/* 076 */     agg_value_1 = agg_bufValue_0 + 1L;
/* 077 */     // update aggregation buffer
/* 078 */     agg_bufIsNull_0 = false;
/* 079 */     agg_bufValue_0 = agg_value_1;
/* 080 */
/* 081 */   }
/* 082 */
/* 083 */   protected void processNext() throws java.io.IOException {
/* 084 */     while (!agg_initAgg_0) {
/* 085 */       agg_initAgg_0 = true;
/* 086 */       long agg_beforeAgg_0 = System.nanoTime();
/* 087 */       agg_doAggregateWithoutKey_0();
/* 088 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[5] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 089 */
/* 090 */       // output the result
/* 091 */
/* 092 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[4] /* numOutputRows */).add(1);
/* 093 */       agg_mutableStateArray_0[0].reset();
/* 094 */
/* 095 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 096 */
/* 097 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 098 */       append((agg_mutableStateArray_0[0].getRow()));
/* 099 */     }
/* 100 */   }
/* 101 */
/* 102 */ }

2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage3(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=3
/* 006 */ final class GeneratedIteratorForCodegenStage3 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private boolean sort_needToSort_0;
/* 013 */   private org.apache.spark.sql.execution.UnsafeExternalRowSorter sort_sorter_0;
/* 014 */   private org.apache.spark.executor.TaskMetrics sort_metrics_0;
/* 015 */   private scala.collection.Iterator<UnsafeRow> sort_sortedIter_0;
/* 016 */   private scala.collection.Iterator inputadapter_input_0;
/* 017 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 018 */
/* 019 */   public GeneratedIteratorForCodegenStage3(Object[] references) {
/* 020 */     this.references = references;
/* 021 */   }
/* 022 */
/* 023 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 024 */     partitionIndex = index;
/* 025 */     this.inputs = inputs;
/* 026 */
/* 027 */     sort_needToSort_0 = true;
/* 028 */     sort_sorter_0 = ((org.apache.spark.sql.execution.SortExec) references[0] /* plan */).createSorter();
/* 029 */     sort_metrics_0 = org.apache.spark.TaskContext.get().taskMetrics();
/* 030 */     inputadapter_input_0 = inputs[0];
/* 031 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 032 */
/* 033 */   }
/* 034 */
/* 035 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 036 */     // initialize aggregation buffer
/* 037 */     agg_bufIsNull_0 = false;
/* 038 */     agg_bufValue_0 = 0L;
/* 039 */
/* 040 */     if (sort_needToSort_0) {
/* 041 */       long sort_spillSizeBefore_0 = sort_metrics_0.memoryBytesSpilled();
/* 042 */       sort_addToSorter_0();
/* 043 */       sort_sortedIter_0 = sort_sorter_0.sort();
/* 044 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[3] /* sortTime */).add(sort_sorter_0.getSortTimeNanos() / 1000000);
/* 045 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* peakMemory */).add(sort_sorter_0.getPeakMemoryUsage());
/* 046 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[2] /* spillSize */).add(sort_metrics_0.memoryBytesSpilled() - sort_spillSizeBefore_0);
/* 047 */       sort_metrics_0.incPeakExecutionMemory(sort_sorter_0.getPeakMemoryUsage());
/* 048 */       sort_needToSort_0 = false;
/* 049 */     }
/* 050 */
/* 051 */     while (sort_sortedIter_0.hasNext()) {
/* 052 */       UnsafeRow sort_outputRow_0 = (UnsafeRow)sort_sortedIter_0.next();
/* 053 */
/* 054 */       agg_doConsume_0();
/* 055 */
/* 056 */       if (shouldStop()) return;
/* 057 */     }
/* 058 */
/* 059 */   }
/* 060 */
/* 061 */   private void sort_addToSorter_0() throws java.io.IOException {
/* 062 */     while (inputadapter_input_0.hasNext() && !stopEarly()) {
/* 063 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 064 */       sort_sorter_0.insertRow((UnsafeRow)inputadapter_row_0);
/* 065 */       if (shouldStop()) return;
/* 066 */     }
/* 067 */
/* 068 */   }
/* 069 */
/* 070 */   private void agg_doConsume_0() throws java.io.IOException {
/* 071 */     // do aggregate
/* 072 */     // common sub-expressions
/* 073 */
/* 074 */     // evaluate aggregate function
/* 075 */     long agg_value_1 = -1L;
/* 076 */     agg_value_1 = agg_bufValue_0 + 1L;
/* 077 */     // update aggregation buffer
/* 078 */     agg_bufIsNull_0 = false;
/* 079 */     agg_bufValue_0 = agg_value_1;
/* 080 */
/* 081 */   }
/* 082 */
/* 083 */   protected void processNext() throws java.io.IOException {
/* 084 */     while (!agg_initAgg_0) {
/* 085 */       agg_initAgg_0 = true;
/* 086 */       long agg_beforeAgg_0 = System.nanoTime();
/* 087 */       agg_doAggregateWithoutKey_0();
/* 088 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[5] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 089 */
/* 090 */       // output the result
/* 091 */
/* 092 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[4] /* numOutputRows */).add(1);
/* 093 */       agg_mutableStateArray_0[0].reset();
/* 094 */
/* 095 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 096 */
/* 097 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 098 */       append((agg_mutableStateArray_0[0].getRow()));
/* 099 */     }
/* 100 */   }
/* 101 */
/* 102 */ }

2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD$$anonfun$collect$1 org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.$outer
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      <function0>
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[38] at run at ThreadPoolExecutor.java:1149
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[38] at run at ThreadPoolExecutor.java:1149)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + cloning the object <function0> of class org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + cleaning cloned closure <function0> recursively (org.apache.spark.rdd.RDD$$anonfun$collect$1)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.$outer
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1.apply()
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.org$apache$spark$rdd$RDD$$anonfun$$$outer()
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[38] at run at ThreadPoolExecutor.java:1149
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[38] at run at ThreadPoolExecutor.java:1149)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:17 INFO  SparkContext:54 - Starting job: run at ThreadPoolExecutor.java:1149
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Got job 7 (run at ThreadPoolExecutor.java:1149) with 1 output partitions
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Final stage: ResultStage 8 (run at ThreadPoolExecutor.java:1149)
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitStage(ResultStage 8 (name=run at ThreadPoolExecutor.java:1149;jobs=7))
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting ResultStage 8 (MapPartitionsRDD[38] at run at ThreadPoolExecutor.java:1149), which has no missing parents
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 8)
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_16 stored as values in memory (estimated size 11.1 KB, free 1968.9 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_16 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_16 without replication took  0 ms
2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 19.0602 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_16_piece0 stored as bytes in memory (estimated size 6.0 KB, free 1968.9 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_16_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 6.0 KB, free: 1970.3 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_16_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_16_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_16_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_16_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 16 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 8 (MapPartitionsRDD[38] at run at ThreadPoolExecutor.java:1149) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Adding task set 8.0 with 1 tasks
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Epoch for TaskSet 8.0: 1
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 8.0: NO_PREF, ANY
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_8.0, runningTasks: 0
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Starting task 0.0 in stage 8.0 (TID 8, localhost, executor driver, partition 0, PROCESS_LOCAL, 8321 bytes)
2022-02-10 13:31:17 INFO  Executor:54 - Running task 0.0 in stage 8.0 (TID 8)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_16
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_16 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:17 DEBUG GenerateUnsafeProjection:58 - code for input[0, int, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     int value_0 = isNull_0 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     int value_0 = isNull_0 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 5.7347 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_15
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_15 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 INFO  Executor:54 - Finished task 0.0 in stage 8.0 (TID 8). 65566 bytes result sent to driver
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_8.0, runningTasks: 0
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Finished task 0.0 in stage 8.0 (TID 8) in 97 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Removed TaskSet 8.0, whose tasks have all completed, from pool 
2022-02-10 13:31:17 INFO  DAGScheduler:54 - ResultStage 8 (run at ThreadPoolExecutor.java:1149) finished in 0.097 s
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - After removal of stage 8, remaining stages = 0
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Job 7 finished: run at ThreadPoolExecutor.java:1149, took 0.098974 s
2022-02-10 13:31:17 DEBUG TaskMemoryManager:224 - Task 0 acquired 1280.0 KB for org.apache.spark.sql.execution.joins.LongToUnsafeRowMap@4147c8be
2022-02-10 13:31:17 DEBUG GenerateUnsafeProjection:58 - code for cast(input[0, int, true] as bigint):
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_1 = i.isNullAt(0);
/* 032 */     int value_1 = isNull_1 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     boolean isNull_0 = isNull_1;
/* 035 */     long value_0 = -1L;
/* 036 */     if (!isNull_1) {
/* 037 */       value_0 = (long) value_1;
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableStateArray_0[0].setNullAt(0);
/* 041 */     } else {
/* 042 */       mutableStateArray_0[0].write(0, value_0);
/* 043 */     }
/* 044 */     return (mutableStateArray_0[0].getRow());
/* 045 */   }
/* 046 */
/* 047 */
/* 048 */ }

2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_1 = i.isNullAt(0);
/* 032 */     int value_1 = isNull_1 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     boolean isNull_0 = isNull_1;
/* 035 */     long value_0 = -1L;
/* 036 */     if (!isNull_1) {
/* 037 */       value_0 = (long) value_1;
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableStateArray_0[0].setNullAt(0);
/* 041 */     } else {
/* 042 */       mutableStateArray_0[0].write(0, value_0);
/* 043 */     }
/* 044 */     return (mutableStateArray_0[0].getRow());
/* 045 */   }
/* 046 */
/* 047 */
/* 048 */ }

2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 7.593801 ms
2022-02-10 13:31:17 DEBUG TaskMemoryManager:224 - Task 0 acquired 512.0 KB for org.apache.spark.sql.execution.joins.LongToUnsafeRowMap@4147c8be
2022-02-10 13:31:17 DEBUG TaskMemoryManager:233 - Task 0 release 256.0 KB from org.apache.spark.sql.execution.joins.LongToUnsafeRowMap@4147c8be
2022-02-10 13:31:17 DEBUG TaskMemoryManager:224 - Task 0 acquired 97.1 KB for org.apache.spark.sql.execution.joins.LongToUnsafeRowMap@4147c8be
2022-02-10 13:31:17 DEBUG TaskMemoryManager:233 - Task 0 release 512.0 KB from org.apache.spark.sql.execution.joins.LongToUnsafeRowMap@4147c8be
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_17 stored as values in memory (estimated size 1121.2 KB, free 1967.8 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_17 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_17 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_17_piece0 stored as bytes in memory (estimated size 124.3 KB, free 1967.7 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_17_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 124.3 KB, free: 1970.1 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_17_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_17_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_17_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_17_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 17 from run at ThreadPoolExecutor.java:1149
2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_17
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_17 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.execution.joins.LongHashedRelation bhj_relation_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[5];
/* 011 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 012 */
/* 013 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 014 */     this.references = references;
/* 015 */   }
/* 016 */
/* 017 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 018 */     partitionIndex = index;
/* 019 */     this.inputs = inputs;
/* 020 */     scan_mutableStateArray_0[0] = inputs[0];
/* 021 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(3, 0);
/* 022 */     filter_mutableStateArray_0[1] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 023 */     filter_mutableStateArray_0[2] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 024 */
/* 025 */     bhj_relation_0 = ((org.apache.spark.sql.execution.joins.LongHashedRelation) ((org.apache.spark.broadcast.TorrentBroadcast) references[4] /* broadcast */).value()).asReadOnlyCopy();
/* 026 */     incPeakExecutionMemory(bhj_relation_0.estimatedSize());
/* 027 */
/* 028 */     filter_mutableStateArray_0[3] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 0);
/* 029 */     filter_mutableStateArray_0[4] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 030 */
/* 031 */   }
/* 032 */
/* 033 */   private void bhj_doConsume_0(int bhj_expr_0_0, boolean bhj_exprIsNull_0_0) throws java.io.IOException {
/* 034 */     // generate join key for stream side
/* 035 */     boolean bhj_isNull_1 = bhj_exprIsNull_0_0;
/* 036 */     long bhj_value_1 = -1L;
/* 037 */     if (!bhj_exprIsNull_0_0) {
/* 038 */       bhj_value_1 = (long) bhj_expr_0_0;
/* 039 */     }
/* 040 */     // find matches from HashedRelation
/* 041 */     UnsafeRow bhj_matched_0 = bhj_isNull_1 ? null: (UnsafeRow)bhj_relation_0.getValue(bhj_value_1);
/* 042 */     if (bhj_matched_0 != null) {
/* 043 */       {
/* 044 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[5] /* numOutputRows */).add(1);
/* 045 */
/* 046 */         boolean bhj_isNull_3 = bhj_matched_0.isNullAt(0);
/* 047 */         int bhj_value_3 = bhj_isNull_3 ?
/* 048 */         -1 : (bhj_matched_0.getInt(0));
/* 049 */         filter_mutableStateArray_0[4].reset();
/* 050 */
/* 051 */         filter_mutableStateArray_0[4].zeroOutNullBytes();
/* 052 */
/* 053 */         if (bhj_isNull_3) {
/* 054 */           filter_mutableStateArray_0[4].setNullAt(0);
/* 055 */         } else {
/* 056 */           filter_mutableStateArray_0[4].write(0, bhj_value_3);
/* 057 */         }
/* 058 */         append((filter_mutableStateArray_0[4].getRow()));
/* 059 */
/* 060 */       }
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */   protected void processNext() throws java.io.IOException {
/* 066 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 067 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 068 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 069 */       do {
/* 070 */         boolean scan_isNull_1 = scan_row_0.isNullAt(1);
/* 071 */         long scan_value_1 = scan_isNull_1 ?
/* 072 */         -1L : (scan_row_0.getLong(1));
/* 073 */
/* 074 */         if (!(!scan_isNull_1)) continue;
/* 075 */
/* 076 */         boolean filter_isNull_3 = scan_isNull_1;
/* 077 */         UTF8String filter_value_3 = null;
/* 078 */         if (!scan_isNull_1) {
/* 079 */           filter_value_3 = UTF8String.fromString(
/* 080 */             org.apache.spark.sql.catalyst.util.DateTimeUtils.timestampToString(scan_value_1, ((sun.util.calendar.ZoneInfo) references[2] /* timeZone */)));
/* 081 */         }
/* 082 */
/* 083 */         boolean filter_value_2 = false;
/* 084 */         filter_value_2 = (filter_value_3).startsWith(((UTF8String) references[3] /* literal */));
/* 085 */         if (!filter_value_2) continue;
/* 086 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 087 */         int scan_value_0 = scan_isNull_0 ?
/* 088 */         -1 : (scan_row_0.getInt(0));
/* 089 */
/* 090 */         if (!scan_isNull_0) continue;
/* 091 */
/* 092 */         boolean scan_isNull_2 = scan_row_0.isNullAt(2);
/* 093 */         int scan_value_2 = scan_isNull_2 ?
/* 094 */         -1 : (scan_row_0.getInt(2));
/* 095 */
/* 096 */         if (!(!scan_isNull_2)) continue;
/* 097 */
/* 098 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 099 */
/* 100 */         bhj_doConsume_0(scan_value_2, false);
/* 101 */
/* 102 */       } while(false);
/* 103 */       if (shouldStop()) return;
/* 104 */     }
/* 105 */   }
/* 106 */
/* 107 */ }

2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.execution.joins.LongHashedRelation bhj_relation_0;
/* 010 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[5];
/* 011 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 012 */
/* 013 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 014 */     this.references = references;
/* 015 */   }
/* 016 */
/* 017 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 018 */     partitionIndex = index;
/* 019 */     this.inputs = inputs;
/* 020 */     scan_mutableStateArray_0[0] = inputs[0];
/* 021 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(3, 0);
/* 022 */     filter_mutableStateArray_0[1] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 023 */     filter_mutableStateArray_0[2] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 024 */
/* 025 */     bhj_relation_0 = ((org.apache.spark.sql.execution.joins.LongHashedRelation) ((org.apache.spark.broadcast.TorrentBroadcast) references[4] /* broadcast */).value()).asReadOnlyCopy();
/* 026 */     incPeakExecutionMemory(bhj_relation_0.estimatedSize());
/* 027 */
/* 028 */     filter_mutableStateArray_0[3] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 0);
/* 029 */     filter_mutableStateArray_0[4] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 030 */
/* 031 */   }
/* 032 */
/* 033 */   private void bhj_doConsume_0(int bhj_expr_0_0, boolean bhj_exprIsNull_0_0) throws java.io.IOException {
/* 034 */     // generate join key for stream side
/* 035 */     boolean bhj_isNull_1 = bhj_exprIsNull_0_0;
/* 036 */     long bhj_value_1 = -1L;
/* 037 */     if (!bhj_exprIsNull_0_0) {
/* 038 */       bhj_value_1 = (long) bhj_expr_0_0;
/* 039 */     }
/* 040 */     // find matches from HashedRelation
/* 041 */     UnsafeRow bhj_matched_0 = bhj_isNull_1 ? null: (UnsafeRow)bhj_relation_0.getValue(bhj_value_1);
/* 042 */     if (bhj_matched_0 != null) {
/* 043 */       {
/* 044 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[5] /* numOutputRows */).add(1);
/* 045 */
/* 046 */         boolean bhj_isNull_3 = bhj_matched_0.isNullAt(0);
/* 047 */         int bhj_value_3 = bhj_isNull_3 ?
/* 048 */         -1 : (bhj_matched_0.getInt(0));
/* 049 */         filter_mutableStateArray_0[4].reset();
/* 050 */
/* 051 */         filter_mutableStateArray_0[4].zeroOutNullBytes();
/* 052 */
/* 053 */         if (bhj_isNull_3) {
/* 054 */           filter_mutableStateArray_0[4].setNullAt(0);
/* 055 */         } else {
/* 056 */           filter_mutableStateArray_0[4].write(0, bhj_value_3);
/* 057 */         }
/* 058 */         append((filter_mutableStateArray_0[4].getRow()));
/* 059 */
/* 060 */       }
/* 061 */     }
/* 062 */
/* 063 */   }
/* 064 */
/* 065 */   protected void processNext() throws java.io.IOException {
/* 066 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 067 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 068 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 069 */       do {
/* 070 */         boolean scan_isNull_1 = scan_row_0.isNullAt(1);
/* 071 */         long scan_value_1 = scan_isNull_1 ?
/* 072 */         -1L : (scan_row_0.getLong(1));
/* 073 */
/* 074 */         if (!(!scan_isNull_1)) continue;
/* 075 */
/* 076 */         boolean filter_isNull_3 = scan_isNull_1;
/* 077 */         UTF8String filter_value_3 = null;
/* 078 */         if (!scan_isNull_1) {
/* 079 */           filter_value_3 = UTF8String.fromString(
/* 080 */             org.apache.spark.sql.catalyst.util.DateTimeUtils.timestampToString(scan_value_1, ((sun.util.calendar.ZoneInfo) references[2] /* timeZone */)));
/* 081 */         }
/* 082 */
/* 083 */         boolean filter_value_2 = false;
/* 084 */         filter_value_2 = (filter_value_3).startsWith(((UTF8String) references[3] /* literal */));
/* 085 */         if (!filter_value_2) continue;
/* 086 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 087 */         int scan_value_0 = scan_isNull_0 ?
/* 088 */         -1 : (scan_row_0.getInt(0));
/* 089 */
/* 090 */         if (!scan_isNull_0) continue;
/* 091 */
/* 092 */         boolean scan_isNull_2 = scan_row_0.isNullAt(2);
/* 093 */         int scan_value_2 = scan_isNull_2 ?
/* 094 */         -1 : (scan_row_0.getInt(2));
/* 095 */
/* 096 */         if (!(!scan_isNull_2)) continue;
/* 097 */
/* 098 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 099 */
/* 100 */         bhj_doConsume_0(scan_value_2, false);
/* 101 */
/* 102 */       } while(false);
/* 103 */       if (shouldStop()) return;
/* 104 */     }
/* 105 */   }
/* 106 */
/* 107 */ }

2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 16.3066 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_18 stored as values in memory (estimated size 221.8 KB, free 1967.5 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_18 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_18 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_18_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1967.5 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_18_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.1 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_18_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_18_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_18_piece0 locally took  16 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_18_piece0 without replication took  16 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 18 from count at UseCase2.java:58
2022-02-10 13:31:17 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 7194299 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:17 DEBUG GenerateOrdering:58 - Generated Ordering by input[0, int, true] ASC NULLS FIRST:
/* 001 */ public SpecificOrdering generate(Object[] references) {
/* 002 */   return new SpecificOrdering(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificOrdering extends org.apache.spark.sql.catalyst.expressions.codegen.BaseOrdering {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */
/* 009 */
/* 010 */   public SpecificOrdering(Object[] references) {
/* 011 */     this.references = references;
/* 012 */
/* 013 */   }
/* 014 */
/* 015 */   public int compare(InternalRow a, InternalRow b) {
/* 016 */
/* 017 */     InternalRow i = null;
/* 018 */
/* 019 */     i = a;
/* 020 */     boolean isNullA_0;
/* 021 */     int primitiveA_0;
/* 022 */     {
/* 023 */       boolean isNull_0 = i.isNullAt(0);
/* 024 */       int value_0 = isNull_0 ?
/* 025 */       -1 : (i.getInt(0));
/* 026 */       isNullA_0 = isNull_0;
/* 027 */       primitiveA_0 = value_0;
/* 028 */     }
/* 029 */     i = b;
/* 030 */     boolean isNullB_0;
/* 031 */     int primitiveB_0;
/* 032 */     {
/* 033 */       boolean isNull_0 = i.isNullAt(0);
/* 034 */       int value_0 = isNull_0 ?
/* 035 */       -1 : (i.getInt(0));
/* 036 */       isNullB_0 = isNull_0;
/* 037 */       primitiveB_0 = value_0;
/* 038 */     }
/* 039 */     if (isNullA_0 && isNullB_0) {
/* 040 */       // Nothing
/* 041 */     } else if (isNullA_0) {
/* 042 */       return -1;
/* 043 */     } else if (isNullB_0) {
/* 044 */       return 1;
/* 045 */     } else {
/* 046 */       int comp = (primitiveA_0 > primitiveB_0 ? 1 : primitiveA_0 < primitiveB_0 ? -1 : 0);
/* 047 */       if (comp != 0) {
/* 048 */         return comp;
/* 049 */       }
/* 050 */     }
/* 051 */
/* 052 */
/* 053 */     return 0;
/* 054 */   }
/* 055 */
/* 056 */
/* 057 */ }

2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public SpecificOrdering generate(Object[] references) {
/* 002 */   return new SpecificOrdering(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificOrdering extends org.apache.spark.sql.catalyst.expressions.codegen.BaseOrdering {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */
/* 009 */
/* 010 */   public SpecificOrdering(Object[] references) {
/* 011 */     this.references = references;
/* 012 */
/* 013 */   }
/* 014 */
/* 015 */   public int compare(InternalRow a, InternalRow b) {
/* 016 */
/* 017 */     InternalRow i = null;
/* 018 */
/* 019 */     i = a;
/* 020 */     boolean isNullA_0;
/* 021 */     int primitiveA_0;
/* 022 */     {
/* 023 */       boolean isNull_0 = i.isNullAt(0);
/* 024 */       int value_0 = isNull_0 ?
/* 025 */       -1 : (i.getInt(0));
/* 026 */       isNullA_0 = isNull_0;
/* 027 */       primitiveA_0 = value_0;
/* 028 */     }
/* 029 */     i = b;
/* 030 */     boolean isNullB_0;
/* 031 */     int primitiveB_0;
/* 032 */     {
/* 033 */       boolean isNull_0 = i.isNullAt(0);
/* 034 */       int value_0 = isNull_0 ?
/* 035 */       -1 : (i.getInt(0));
/* 036 */       isNullB_0 = isNull_0;
/* 037 */       primitiveB_0 = value_0;
/* 038 */     }
/* 039 */     if (isNullA_0 && isNullB_0) {
/* 040 */       // Nothing
/* 041 */     } else if (isNullA_0) {
/* 042 */       return -1;
/* 043 */     } else if (isNullB_0) {
/* 044 */       return 1;
/* 045 */     } else {
/* 046 */       int comp = (primitiveA_0 > primitiveB_0 ? 1 : primitiveA_0 < primitiveB_0 ? -1 : 0);
/* 047 */       if (comp != 0) {
/* 048 */         return comp;
/* 049 */       }
/* 050 */     }
/* 051 */
/* 052 */
/* 053 */     return 0;
/* 054 */   }
/* 055 */
/* 056 */
/* 057 */ }

2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 10.5703 ms
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.RangePartitioner$$anonfun$9) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.RangePartitioner$$anonfun$9.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.RangePartitioner$$anonfun$9.apply(java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.RangePartitioner$$anonfun$9.apply(scala.Product2)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.RangePartitioner$$anonfun$9) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.RangePartitioner$$anonfun$13) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.RangePartitioner$$anonfun$13.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final int org.apache.spark.RangePartitioner$$anonfun$13.sampleSizePerPartition$2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final scala.reflect.ClassTag org.apache.spark.RangePartitioner$$anonfun$13.evidence$5$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final int org.apache.spark.RangePartitioner$$anonfun$13.shift$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.RangePartitioner$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.RangePartitioner$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.RangePartitioner$$anonfun$13) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD$$anonfun$collect$1 org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.$outer
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      <function0>
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[43] at count at UseCase2.java:58
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[43] at count at UseCase2.java:58)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + cloning the object <function0> of class org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + cleaning cloned closure <function0> recursively (org.apache.spark.rdd.RDD$$anonfun$collect$1)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.$outer
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1.apply()
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.org$apache$spark$rdd$RDD$$anonfun$$$outer()
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[43] at count at UseCase2.java:58
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[43] at count at UseCase2.java:58)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) is now cleaned +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:17 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:17 INFO  SparkContext:54 - Starting job: count at UseCase2.java:58
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Got job 8 (count at UseCase2.java:58) with 1 output partitions
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Final stage: ResultStage 9 (count at UseCase2.java:58)
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitStage(ResultStage 9 (name=count at UseCase2.java:58;jobs=8))
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting ResultStage 9 (MapPartitionsRDD[43] at count at UseCase2.java:58), which has no missing parents
2022-02-10 13:31:17 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 9)
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_19 stored as values in memory (estimated size 14.3 KB, free 1967.4 MB)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_19 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_19 without replication took  0 ms
2022-02-10 13:31:17 INFO  MemoryStore:54 - Block broadcast_19_piece0 stored as bytes in memory (estimated size 7.4 KB, free 1967.4 MB)
2022-02-10 13:31:17 INFO  BlockManagerInfo:54 - Added broadcast_19_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 7.4 KB, free: 1970.1 MB)
2022-02-10 13:31:17 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_19_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Told master about block broadcast_19_piece0
2022-02-10 13:31:17 DEBUG BlockManager:58 - Put block broadcast_19_piece0 locally took  0 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Putting block broadcast_19_piece0 without replication took  0 ms
2022-02-10 13:31:17 INFO  SparkContext:54 - Created broadcast 19 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:17 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 9 (MapPartitionsRDD[43] at count at UseCase2.java:58) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:17 INFO  TaskSchedulerImpl:54 - Adding task set 9.0 with 1 tasks
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Epoch for TaskSet 9.0: 1
2022-02-10 13:31:17 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 9.0: NO_PREF, ANY
2022-02-10 13:31:17 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_9.0, runningTasks: 0
2022-02-10 13:31:17 INFO  TaskSetManager:54 - Starting task 0.0 in stage 9.0 (TID 9, localhost, executor driver, partition 0, PROCESS_LOCAL, 8318 bytes)
2022-02-10 13:31:17 INFO  Executor:54 - Running task 0.0 in stage 9.0 (TID 9)
2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_19
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_19 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:17 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:17 DEBUG GenerateUnsafeProjection:58 - code for input[0, int, true],input[1, timestamp, true],input[2, int, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(3, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     int value_0 = isNull_0 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     long value_1 = isNull_1 ?
/* 042 */     -1L : (i.getLong(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */
/* 049 */     boolean isNull_2 = i.isNullAt(2);
/* 050 */     int value_2 = isNull_2 ?
/* 051 */     -1 : (i.getInt(2));
/* 052 */     if (isNull_2) {
/* 053 */       mutableStateArray_0[0].setNullAt(2);
/* 054 */     } else {
/* 055 */       mutableStateArray_0[0].write(2, value_2);
/* 056 */     }
/* 057 */     return (mutableStateArray_0[0].getRow());
/* 058 */   }
/* 059 */
/* 060 */
/* 061 */ }

2022-02-10 13:31:17 DEBUG CodeGenerator:58 - 
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(3, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     int value_0 = isNull_0 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     long value_1 = isNull_1 ?
/* 042 */     -1L : (i.getLong(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */
/* 049 */     boolean isNull_2 = i.isNullAt(2);
/* 050 */     int value_2 = isNull_2 ?
/* 051 */     -1 : (i.getInt(2));
/* 052 */     if (isNull_2) {
/* 053 */       mutableStateArray_0[0].setNullAt(2);
/* 054 */     } else {
/* 055 */       mutableStateArray_0[0].write(2, value_2);
/* 056 */     }
/* 057 */     return (mutableStateArray_0[0].getRow());
/* 058 */   }
/* 059 */
/* 060 */
/* 061 */ }

2022-02-10 13:31:17 INFO  CodeGenerator:54 - Code generated in 8.3113 ms
2022-02-10 13:31:17 DEBUG BlockManager:58 - Getting local block broadcast_18
2022-02-10 13:31:17 DEBUG BlockManager:58 - Level for block broadcast_18 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(205)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 205
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 205
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(306)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 306
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 306
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(172)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 172
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 172
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(311)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 311
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 311
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(236)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 236
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 236
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(181)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 181
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 181
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(225)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 225
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 225
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(241)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 241
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 241
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(184)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 184
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 184
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(12)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 12
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 12
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 12
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 12
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_12_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_12_piece0 of size 4743 dropped from memory (free 2063007151)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_12_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 4.6 KB, free: 1970.1 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_12_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_12_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_12
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_12 of size 9144 dropped from memory (free 2063016295)
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 12, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 12
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(237)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 237
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 237
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(198)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 198
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 198
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(214)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 214
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 214
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(164)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 164
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 164
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(10)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 10
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 10
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 10
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 10
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_10
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_10 of size 14256 dropped from memory (free 2063030551)
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_10_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_10_piece0 of size 7749 dropped from memory (free 2063038300)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_10_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 7.6 KB, free: 1970.1 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_10_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_10_piece0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 10, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 10
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(168)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 168
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 168
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(293)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 293
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 293
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(171)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 171
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 171
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(298)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 298
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 298
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(218)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 218
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 218
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(179)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 179
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 179
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(208)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 208
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 208
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(200)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 200
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 200
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(178)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 178
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 178
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(240)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 240
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 240
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(174)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 174
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 174
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(202)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 202
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 202
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(194)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 194
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 194
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(188)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 188
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 188
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(296)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 296
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 296
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(227)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 227
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 227
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(170)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 170
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 170
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(183)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 183
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 183
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(186)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 186
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 186
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(294)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 294
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 294
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(185)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 185
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 185
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(231)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 231
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 231
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(219)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 219
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 219
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(290)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 290
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 290
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(195)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 195
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 195
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(190)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 190
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 190
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(169)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 169
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 169
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(301)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 301
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 301
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(13)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 13
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 13
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 13
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 13
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_13_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_13_piece0 of size 21194 dropped from memory (free 2063059494)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_13_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 20.7 KB, free: 1970.1 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_13_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_13_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_13
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_13 of size 227232 dropped from memory (free 2063286726)
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 13, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 13
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(177)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 177
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 177
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(303)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 303
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 303
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(207)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 207
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 207
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(234)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 234
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 234
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(295)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 295
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 295
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(162)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 162
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 162
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(196)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 196
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 196
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(201)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 201
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 201
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(245)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 245
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 245
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(206)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 206
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 206
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(247)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 247
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 247
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(297)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 297
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 297
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(180)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 180
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 180
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(222)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 222
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 222
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(197)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 197
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 197
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(11)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 11
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 11
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 11
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 11
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_11
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_11 of size 227232 dropped from memory (free 2063513958)
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_11_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_11_piece0 of size 21194 dropped from memory (free 2063535152)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_11_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 20.7 KB, free: 1970.2 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_11_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_11_piece0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 11, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 11
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(224)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 224
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 224
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(163)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 163
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 163
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(248)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 248
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 248
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(226)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 226
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 226
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(166)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 166
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 166
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(312)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 312
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 312
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(239)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 239
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 239
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(212)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 212
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 212
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(310)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 310
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 310
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(299)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 299
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 299
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(238)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 238
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 238
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(211)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 211
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 211
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(308)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 308
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 308
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(291)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 291
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 291
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(302)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 302
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 302
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(232)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 232
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 232
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(187)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 187
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 187
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(309)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 309
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 309
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(175)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 175
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 175
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(209)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 209
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 209
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(191)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 191
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 191
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(251)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 251
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 251
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(300)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 300
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 300
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(243)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 243
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 243
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(307)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 307
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 307
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(252)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 252
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 252
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(189)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 189
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 189
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(220)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 220
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 220
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(242)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 242
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 242
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(213)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 213
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 213
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(228)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 228
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 228
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(235)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 235
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 235
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(14)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 14
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 14
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 14
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 14
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_14
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_14 of size 14368 dropped from memory (free 2063549520)
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_14_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_14_piece0 of size 7787 dropped from memory (free 2063557307)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_14_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 7.6 KB, free: 1970.2 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_14_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_14_piece0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 14, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 14
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(203)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 203
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 203
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(223)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 223
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 223
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(215)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 215
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 215
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(160)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 160
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 160
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(204)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 204
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 204
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(165)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 165
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 165
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(217)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 217
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 217
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(161)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 161
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 161
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(246)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 246
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 246
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(176)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 176
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 176
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(249)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 249
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 249
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(304)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 304
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 304
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(182)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 182
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 182
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(233)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 233
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 233
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(292)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 292
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 292
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(173)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 173
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 173
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(221)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 221
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 221
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(192)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 192
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 192
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(199)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 199
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 199
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(229)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 229
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 229
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(16)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 16
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 16
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 16
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 16
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_16
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_16 of size 11376 dropped from memory (free 2063568683)
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_16_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_16_piece0 of size 6154 dropped from memory (free 2063574837)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_16_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 6.0 KB, free: 1970.2 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_16_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_16_piece0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 16, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 16
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(305)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 305
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 305
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(250)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 250
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 250
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(230)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 230
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 230
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(244)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 244
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 244
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(210)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 210
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 210
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(167)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 167
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 167
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(313)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 313
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 313
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(193)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 193
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 193
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(216)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 216
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 216
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(9)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 9
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 9
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 9
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 9
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_9_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_9_piece0 of size 21194 dropped from memory (free 2063596031)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_9_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 20.7 KB, free: 1970.2 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_9_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_9_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_9
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_9 of size 227232 dropped from memory (free 2063823263)
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 9, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 9
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(289)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 289
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 289
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(255)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 255
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 255
2022-02-10 13:31:18 INFO  Executor:54 - Finished task 0.0 in stage 9.0 (TID 9). 1541 bytes result sent to driver
2022-02-10 13:31:18 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_9.0, runningTasks: 0
2022-02-10 13:31:18 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:18 INFO  TaskSetManager:54 - Finished task 0.0 in stage 9.0 (TID 9) in 642 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:18 INFO  TaskSchedulerImpl:54 - Removed TaskSet 9.0, whose tasks have all completed, from pool 
2022-02-10 13:31:18 INFO  DAGScheduler:54 - ResultStage 9 (count at UseCase2.java:58) finished in 0.642 s
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - After removal of stage 9, remaining stages = 0
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Job 8 finished: count at UseCase2.java:58, took 0.640654 s
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.serialVersionUID
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD$$anonfun$collect$1 org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.$outer
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(java.lang.Object)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(scala.collection.Iterator)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer classes: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer objects: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      <function0>
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[50] at count at UseCase2.java:58
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[50] at count at UseCase2.java:58)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + cloning the object <function0> of class org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + cleaning cloned closure <function0> recursively (org.apache.spark.rdd.RDD$$anonfun$collect$1)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1.serialVersionUID
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.$outer
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1.apply()
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.org$apache$spark$rdd$RDD$$anonfun$$$outer()
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer classes: 1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer objects: 1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[50] at count at UseCase2.java:58
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[50] at count at UseCase2.java:58)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  +++ closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) is now cleaned +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) is now cleaned +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:18 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:18 INFO  SparkContext:54 - Starting job: count at UseCase2.java:58
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Registering RDD 44 (count at UseCase2.java:58) as input to shuffle 1
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Registering RDD 47 (count at UseCase2.java:58) as input to shuffle 2
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Got job 9 (count at UseCase2.java:58) with 1 output partitions
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Final stage: ResultStage 12 (count at UseCase2.java:58)
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Parents of final stage: List(ShuffleMapStage 11)
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Missing parents: List(ShuffleMapStage 11)
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - submitStage(ResultStage 12 (name=count at UseCase2.java:58;jobs=9))
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - missing: List(ShuffleMapStage 11)
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - submitStage(ShuffleMapStage 11 (name=count at UseCase2.java:58;jobs=9))
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - missing: List(ShuffleMapStage 10)
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - submitStage(ShuffleMapStage 10 (name=count at UseCase2.java:58;jobs=9))
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Submitting ShuffleMapStage 10 (MapPartitionsRDD[44] at count at UseCase2.java:58), which has no missing parents
2022-02-10 13:31:18 DEBUG DAGScheduler:58 - submitMissingTasks(ShuffleMapStage 10)
2022-02-10 13:31:18 INFO  MemoryStore:54 - Block broadcast_20 stored as values in memory (estimated size 16.4 KB, free 1968.2 MB)
2022-02-10 13:31:18 DEBUG BlockManager:58 - Put block broadcast_20 locally took  0 ms
2022-02-10 13:31:18 DEBUG BlockManager:58 - Putting block broadcast_20 without replication took  0 ms
2022-02-10 13:31:18 INFO  MemoryStore:54 - Block broadcast_20_piece0 stored as bytes in memory (estimated size 8.4 KB, free 1968.2 MB)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Added broadcast_20_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 8.4 KB, free: 1970.2 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_20_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_20_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Put block broadcast_20_piece0 locally took  0 ms
2022-02-10 13:31:18 DEBUG BlockManager:58 - Putting block broadcast_20_piece0 without replication took  0 ms
2022-02-10 13:31:18 INFO  SparkContext:54 - Created broadcast 20 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:18 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ShuffleMapStage 10 (MapPartitionsRDD[44] at count at UseCase2.java:58) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:18 INFO  TaskSchedulerImpl:54 - Adding task set 10.0 with 1 tasks
2022-02-10 13:31:18 DEBUG TaskSetManager:58 - Epoch for TaskSet 10.0: 1
2022-02-10 13:31:18 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 10.0: NO_PREF, ANY
2022-02-10 13:31:18 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_10.0, runningTasks: 0
2022-02-10 13:31:18 INFO  TaskSetManager:54 - Starting task 0.0 in stage 10.0 (TID 10, localhost, executor driver, partition 0, PROCESS_LOCAL, 8307 bytes)
2022-02-10 13:31:18 INFO  Executor:54 - Running task 0.0 in stage 10.0 (TID 10)
2022-02-10 13:31:18 DEBUG BlockManager:58 - Getting local block broadcast_20
2022-02-10 13:31:18 DEBUG BlockManager:58 - Level for block broadcast_20 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:18 DEBUG GenerateOrdering:58 - Generated Ordering by input[0, int, true] ASC NULLS FIRST:
/* 001 */ public SpecificOrdering generate(Object[] references) {
/* 002 */   return new SpecificOrdering(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificOrdering extends org.apache.spark.sql.catalyst.expressions.codegen.BaseOrdering {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */
/* 009 */
/* 010 */   public SpecificOrdering(Object[] references) {
/* 011 */     this.references = references;
/* 012 */
/* 013 */   }
/* 014 */
/* 015 */   public int compare(InternalRow a, InternalRow b) {
/* 016 */
/* 017 */     InternalRow i = null;
/* 018 */
/* 019 */     i = a;
/* 020 */     boolean isNullA_0;
/* 021 */     int primitiveA_0;
/* 022 */     {
/* 023 */       boolean isNull_0 = i.isNullAt(0);
/* 024 */       int value_0 = isNull_0 ?
/* 025 */       -1 : (i.getInt(0));
/* 026 */       isNullA_0 = isNull_0;
/* 027 */       primitiveA_0 = value_0;
/* 028 */     }
/* 029 */     i = b;
/* 030 */     boolean isNullB_0;
/* 031 */     int primitiveB_0;
/* 032 */     {
/* 033 */       boolean isNull_0 = i.isNullAt(0);
/* 034 */       int value_0 = isNull_0 ?
/* 035 */       -1 : (i.getInt(0));
/* 036 */       isNullB_0 = isNull_0;
/* 037 */       primitiveB_0 = value_0;
/* 038 */     }
/* 039 */     if (isNullA_0 && isNullB_0) {
/* 040 */       // Nothing
/* 041 */     } else if (isNullA_0) {
/* 042 */       return -1;
/* 043 */     } else if (isNullB_0) {
/* 044 */       return 1;
/* 045 */     } else {
/* 046 */       int comp = (primitiveA_0 > primitiveB_0 ? 1 : primitiveA_0 < primitiveB_0 ? -1 : 0);
/* 047 */       if (comp != 0) {
/* 048 */         return comp;
/* 049 */       }
/* 050 */     }
/* 051 */
/* 052 */
/* 053 */     return 0;
/* 054 */   }
/* 055 */
/* 056 */
/* 057 */ }

2022-02-10 13:31:18 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/orders/part-00000, range: 0-2999995, partition values: [empty row]
2022-02-10 13:31:18 DEBUG GenerateUnsafeProjection:58 - code for input[0, int, true],input[1, timestamp, true],input[2, int, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(3, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     int value_0 = isNull_0 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     long value_1 = isNull_1 ?
/* 042 */     -1L : (i.getLong(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */
/* 049 */     boolean isNull_2 = i.isNullAt(2);
/* 050 */     int value_2 = isNull_2 ?
/* 051 */     -1 : (i.getInt(2));
/* 052 */     if (isNull_2) {
/* 053 */       mutableStateArray_0[0].setNullAt(2);
/* 054 */     } else {
/* 055 */       mutableStateArray_0[0].write(2, value_2);
/* 056 */     }
/* 057 */     return (mutableStateArray_0[0].getRow());
/* 058 */   }
/* 059 */
/* 060 */
/* 061 */ }

2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(314)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 314
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 314
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(320)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 320
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 320
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(332)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 332
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 332
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(331)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 331
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 331
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(322)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 322
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 322
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(335)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 335
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 335
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(317)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 317
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 317
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(337)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 337
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 337
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(315)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 315
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 315
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(329)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 329
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 329
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(319)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 319
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 319
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(324)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 324
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 324
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(330)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 330
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 330
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(338)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 338
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 338
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanBroadcast(19)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning broadcast 19
2022-02-10 13:31:18 DEBUG TorrentBroadcast:58 - Unpersisting TorrentBroadcast 19
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - removing broadcast 19
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing broadcast 19
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_19_piece0
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_19_piece0 of size 7567 dropped from memory (free 2063805436)
2022-02-10 13:31:18 INFO  BlockManagerInfo:54 - Removed broadcast_19_piece0 on Clairvoyant-324.mshome.net:53700 in memory (size: 7.4 KB, free: 1970.2 MB)
2022-02-10 13:31:18 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_19_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Told master about block broadcast_19_piece0
2022-02-10 13:31:18 DEBUG BlockManager:58 - Removing block broadcast_19
2022-02-10 13:31:18 DEBUG MemoryStore:58 - Block broadcast_19 of size 14608 dropped from memory (free 2063820044)
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Done removing broadcast 19, response is 0
2022-02-10 13:31:18 DEBUG BlockManagerSlaveEndpoint:58 - Sent response: 0 to Clairvoyant-324.mshome.net:53685
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaned broadcast 19
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(318)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 318
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 318
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(321)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 321
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 321
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(333)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 333
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 333
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(328)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 328
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 328
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(323)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 323
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 323
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(334)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 334
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 334
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(325)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 325
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 325
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(326)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 326
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 326
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(327)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 327
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 327
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(336)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 336
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 336
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Got cleaning task CleanAccum(316)
2022-02-10 13:31:18 DEBUG ContextCleaner:58 - Cleaning accumulator 316
2022-02-10 13:31:18 INFO  ContextCleaner:54 - Cleaned accumulator 316
2022-02-10 13:31:19 INFO  Executor:54 - Finished task 0.0 in stage 10.0 (TID 10). 1439 bytes result sent to driver
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_10.0, runningTasks: 0
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Finished task 0.0 in stage 10.0 (TID 10) in 408 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Removed TaskSet 10.0, whose tasks have all completed, from pool 
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - ShuffleMapTask finished on driver
2022-02-10 13:31:19 INFO  DAGScheduler:54 - ShuffleMapStage 10 (count at UseCase2.java:58) finished in 0.424 s
2022-02-10 13:31:19 INFO  DAGScheduler:54 - looking for newly runnable stages
2022-02-10 13:31:19 INFO  DAGScheduler:54 - running: Set()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - waiting: Set(ResultStage 12, ShuffleMapStage 11)
2022-02-10 13:31:19 INFO  DAGScheduler:54 - failed: Set()
2022-02-10 13:31:19 DEBUG MapOutputTrackerMaster:58 - Increasing epoch to 2
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitStage(ShuffleMapStage 11 (name=count at UseCase2.java:58;jobs=9))
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting ShuffleMapStage 11 (MapPartitionsRDD[47] at count at UseCase2.java:58), which has no missing parents
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitMissingTasks(ShuffleMapStage 11)
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_21 stored as values in memory (estimated size 27.5 KB, free 1968.2 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_21 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_21 without replication took  0 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_21_piece0 stored as bytes in memory (estimated size 13.1 KB, free 1968.2 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_21_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 13.1 KB, free: 1970.2 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_21_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_21_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_21_piece0 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_21_piece0 without replication took  0 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 21 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ShuffleMapStage 11 (MapPartitionsRDD[47] at count at UseCase2.java:58) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Adding task set 11.0 with 1 tasks
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Epoch for TaskSet 11.0: 2
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 11.0: NO_PREF, ANY
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_11.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Starting task 0.0 in stage 11.0 (TID 11, localhost, executor driver, partition 0, PROCESS_LOCAL, 7756 bytes)
2022-02-10 13:31:19 INFO  Executor:54 - Running task 0.0 in stage 11.0 (TID 11)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_21
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_21 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 DEBUG MapOutputTrackerMaster:58 - Fetching outputs for shuffle 1, partitions 0-1
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - maxBytesInFlight: 50331648, targetRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
2022-02-10 13:31:19 INFO  ShuffleBlockFetcherIterator:54 - Getting 0 non-empty blocks including 0 local blocks and 0 remote blocks
2022-02-10 13:31:19 INFO  ShuffleBlockFetcherIterator:54 - Started 0 remote fetches in 0 ms
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - Start fetching local blocks: 
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - Got local blocks in  0 ms
2022-02-10 13:31:19 DEBUG GenerateOrdering:58 - Generated Ordering by input[0, int, true] ASC NULLS FIRST:
/* 001 */ public SpecificOrdering generate(Object[] references) {
/* 002 */   return new SpecificOrdering(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificOrdering extends org.apache.spark.sql.catalyst.expressions.codegen.BaseOrdering {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */
/* 009 */
/* 010 */   public SpecificOrdering(Object[] references) {
/* 011 */     this.references = references;
/* 012 */
/* 013 */   }
/* 014 */
/* 015 */   public int compare(InternalRow a, InternalRow b) {
/* 016 */
/* 017 */     InternalRow i = null;
/* 018 */
/* 019 */     i = a;
/* 020 */     boolean isNullA_0;
/* 021 */     int primitiveA_0;
/* 022 */     {
/* 023 */       boolean isNull_0 = i.isNullAt(0);
/* 024 */       int value_0 = isNull_0 ?
/* 025 */       -1 : (i.getInt(0));
/* 026 */       isNullA_0 = isNull_0;
/* 027 */       primitiveA_0 = value_0;
/* 028 */     }
/* 029 */     i = b;
/* 030 */     boolean isNullB_0;
/* 031 */     int primitiveB_0;
/* 032 */     {
/* 033 */       boolean isNull_0 = i.isNullAt(0);
/* 034 */       int value_0 = isNull_0 ?
/* 035 */       -1 : (i.getInt(0));
/* 036 */       isNullB_0 = isNull_0;
/* 037 */       primitiveB_0 = value_0;
/* 038 */     }
/* 039 */     if (isNullA_0 && isNullB_0) {
/* 040 */       // Nothing
/* 041 */     } else if (isNullA_0) {
/* 042 */       return -1;
/* 043 */     } else if (isNullB_0) {
/* 044 */       return 1;
/* 045 */     } else {
/* 046 */       int comp = (primitiveA_0 > primitiveB_0 ? 1 : primitiveA_0 < primitiveB_0 ? -1 : 0);
/* 047 */       if (comp != 0) {
/* 048 */         return comp;
/* 049 */       }
/* 050 */     }
/* 051 */
/* 052 */
/* 053 */     return 0;
/* 054 */   }
/* 055 */
/* 056 */
/* 057 */ }

2022-02-10 13:31:19 DEBUG GenerateUnsafeProjection:58 - code for sortprefix(input[0, int, true] ASC NULLS FIRST):
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_1 = i.isNullAt(0);
/* 032 */     int value_1 = isNull_1 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     long value_0 = 0L;
/* 035 */     boolean isNull_0 = isNull_1;
/* 036 */     if (!isNull_1) {
/* 037 */       value_0 = (long) value_1;
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableStateArray_0[0].setNullAt(0);
/* 041 */     } else {
/* 042 */       mutableStateArray_0[0].write(0, value_0);
/* 043 */     }
/* 044 */     return (mutableStateArray_0[0].getRow());
/* 045 */   }
/* 046 */
/* 047 */
/* 048 */ }

2022-02-10 13:31:19 DEBUG CodeGenerator:58 - 
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_1 = i.isNullAt(0);
/* 032 */     int value_1 = isNull_1 ?
/* 033 */     -1 : (i.getInt(0));
/* 034 */     long value_0 = 0L;
/* 035 */     boolean isNull_0 = isNull_1;
/* 036 */     if (!isNull_1) {
/* 037 */       value_0 = (long) value_1;
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableStateArray_0[0].setNullAt(0);
/* 041 */     } else {
/* 042 */       mutableStateArray_0[0].write(0, value_0);
/* 043 */     }
/* 044 */     return (mutableStateArray_0[0].getRow());
/* 045 */   }
/* 046 */
/* 047 */
/* 048 */ }

2022-02-10 13:31:19 INFO  CodeGenerator:54 - Code generated in 7.252 ms
2022-02-10 13:31:19 DEBUG TaskMemoryManager:224 - Task 11 acquired 64.0 KB for org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@3c2b9fe3
2022-02-10 13:31:19 DEBUG TaskMemoryManager:233 - Task 11 release 64.0 KB from org.apache.spark.util.collection.unsafe.sort.UnsafeExternalSorter@3c2b9fe3
2022-02-10 13:31:19 INFO  Executor:54 - Finished task 0.0 in stage 11.0 (TID 11). 3625 bytes result sent to driver
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_11.0, runningTasks: 0
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Finished task 0.0 in stage 11.0 (TID 11) in 47 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Removed TaskSet 11.0, whose tasks have all completed, from pool 
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - ShuffleMapTask finished on driver
2022-02-10 13:31:19 INFO  DAGScheduler:54 - ShuffleMapStage 11 (count at UseCase2.java:58) finished in 0.047 s
2022-02-10 13:31:19 INFO  DAGScheduler:54 - looking for newly runnable stages
2022-02-10 13:31:19 INFO  DAGScheduler:54 - running: Set()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - waiting: Set(ResultStage 12)
2022-02-10 13:31:19 INFO  DAGScheduler:54 - failed: Set()
2022-02-10 13:31:19 DEBUG MapOutputTrackerMaster:58 - Increasing epoch to 3
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitStage(ResultStage 12 (name=count at UseCase2.java:58;jobs=9))
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting ResultStage 12 (MapPartitionsRDD[50] at count at UseCase2.java:58), which has no missing parents
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 12)
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_22 stored as values in memory (estimated size 7.3 KB, free 1968.2 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_22 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_22 without replication took  0 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_22_piece0 stored as bytes in memory (estimated size 3.9 KB, free 1968.2 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_22_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 3.9 KB, free: 1970.2 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_22_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_22_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_22_piece0 locally took  1 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_22_piece0 without replication took  1 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 22 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 12 (MapPartitionsRDD[50] at count at UseCase2.java:58) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Adding task set 12.0 with 1 tasks
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Epoch for TaskSet 12.0: 3
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 12.0: ANY
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_12.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Starting task 0.0 in stage 12.0 (TID 12, localhost, executor driver, partition 0, ANY, 7767 bytes)
2022-02-10 13:31:19 INFO  Executor:54 - Running task 0.0 in stage 12.0 (TID 12)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_22
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_22 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 DEBUG MapOutputTrackerMaster:58 - Fetching outputs for shuffle 2, partitions 0-1
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - maxBytesInFlight: 50331648, targetRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
2022-02-10 13:31:19 INFO  ShuffleBlockFetcherIterator:54 - Getting 1 non-empty blocks including 1 local blocks and 0 remote blocks
2022-02-10 13:31:19 INFO  ShuffleBlockFetcherIterator:54 - Started 0 remote fetches in 0 ms
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - Start fetching local blocks: shuffle_2_0_0
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - Got local blocks in  0 ms
2022-02-10 13:31:19 INFO  Executor:54 - Finished task 0.0 in stage 12.0 (TID 12). 1603 bytes result sent to driver
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_12.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Finished task 0.0 in stage 12.0 (TID 12) in 0 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Removed TaskSet 12.0, whose tasks have all completed, from pool 
2022-02-10 13:31:19 INFO  DAGScheduler:54 - ResultStage 12 (count at UseCase2.java:58) finished in 0.017 s
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - After removal of stage 11, remaining stages = 2
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - After removal of stage 10, remaining stages = 1
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - After removal of stage 12, remaining stages = 0
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Job 9 finished: count at UseCase2.java:58, took 0.502400 s
2022-02-10 13:31:19 WARN  SparkSession$Builder:66 - Using an existing SparkSession; some spark core configurations may not take effect.
2022-02-10 13:31:19 INFO  InMemoryFileIndex:54 - It took 1 ms to list leaf files for 1 paths.
2022-02-10 13:31:19 INFO  InMemoryFileIndex:54 - It took 1 ms to list leaf files for 2 paths.
2022-02-10 13:31:19 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#139
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Project [unresolvedalias('value, None)]   Project [value#139]
 +- Relation[value#139] text                +- Relation[value#139] text
          
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#143: java.lang.String   DeserializeToObject cast(value#139 as string).toString, obj#143: java.lang.String
 +- LocalRelation <empty>, [value#139]                                                                                                                                      +- LocalRelation <empty>, [value#139]
          
2022-02-10 13:31:19 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#139
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#139, None)) > 0)
 +- Project [value#139]                     +- Project [value#139]
    +- Relation[value#139] text                +- Relation[value#139] text
          
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#144: java.lang.String   DeserializeToObject cast(value#139 as string).toString, obj#144: java.lang.String
 +- LocalRelation <empty>, [value#139]                                                                                                                                      +- LocalRelation <empty>, [value#139]
          
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#145: java.lang.String   DeserializeToObject cast(value#139 as string).toString, obj#145: java.lang.String
 +- LocalRelation <empty>, [value#139]                                                                                                                                      +- LocalRelation <empty>, [value#139]
          
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 1                                      GlobalLimit 1
 +- LocalLimit 1                                    +- LocalLimit 1
    +- Filter (length(trim(value#139, None)) > 0)      +- Filter (length(trim(value#139, None)) > 0)
!      +- Project [value#139]                             +- Relation[value#139] text
!         +- Relation[value#139] text               
          
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Post-Scan Filters: (length(trim(value#139, None)) > 0)
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:19 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:19 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:19 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 026 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 027 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 028 */       do {
/* 029 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 030 */         UTF8String scan_value_0 = scan_isNull_0 ?
/* 031 */         null : (scan_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (scan_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = scan_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (scan_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, scan_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_23 stored as values in memory (estimated size 221.9 KB, free 1967.9 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_23 locally took  16 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_23 without replication took  16 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_23_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1967.9 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_23_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.2 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_23_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_23_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_23_piece0 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_23_piece0 without replication took  0 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 23 from load at UseCase2.java:24
2022-02-10 13:31:19 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 10296320 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$5.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$5.apply(scala.Tuple2)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$5) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.SparkPlan$$anonfun$6.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final byte[] org.apache.spark.sql.execution.SparkPlan$$anonfun$6.apply(scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.SparkPlan$$anonfun$6) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:19 INFO  SparkContext:54 - Starting job: load at UseCase2.java:24
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Got job 10 (load at UseCase2.java:24) with 1 output partitions
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Final stage: ResultStage 13 (load at UseCase2.java:24)
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitStage(ResultStage 13 (name=load at UseCase2.java:24;jobs=10))
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting ResultStage 13 (MapPartitionsRDD[54] at load at UseCase2.java:24), which has no missing parents
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 13)
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_24 stored as values in memory (estimated size 8.9 KB, free 1967.9 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_24 locally took  16 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_24 without replication took  16 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_24_piece0 stored as bytes in memory (estimated size 4.6 KB, free 1967.9 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_24_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 4.6 KB, free: 1970.1 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_24_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_24_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_24_piece0 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_24_piece0 without replication took  0 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 24 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 13 (MapPartitionsRDD[54] at load at UseCase2.java:24) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Adding task set 13.0 with 1 tasks
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Epoch for TaskSet 13.0: 3
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 13.0: NO_PREF, ANY
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_13.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Starting task 0.0 in stage 13.0 (TID 13, localhost, executor driver, partition 0, PROCESS_LOCAL, 8353 bytes)
2022-02-10 13:31:19 INFO  Executor:54 - Running task 0.0 in stage 13.0 (TID 13)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_24
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_24 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:19 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_23
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_23 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 INFO  Executor:54 - Finished task 0.0 in stage 13.0 (TID 13). 1162 bytes result sent to driver
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_13.0, runningTasks: 0
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Finished task 0.0 in stage 13.0 (TID 13) in 0 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Removed TaskSet 13.0, whose tasks have all completed, from pool 
2022-02-10 13:31:19 INFO  DAGScheduler:54 - ResultStage 13 (load at UseCase2.java:24) finished in 0.016 s
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - After removal of stage 13, remaining stages = 0
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Job 10 finished: load at UseCase2.java:24, took 0.015366 s
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#147: java.lang.String   DeserializeToObject cast(value#139 as string).toString, obj#147: java.lang.String
 +- Project [value#139]                                                                                                                                                     +- Project [value#139]
    +- Relation[value#139] text                                                                                                                                                +- Relation[value#139] text
          
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
!DeserializeToObject cast(value#139 as string).toString, obj#147: java.lang.String   DeserializeToObject value#139.toString, obj#147: java.lang.String
!+- Project [value#139]                                                              +- Relation[value#139] text
!   +- Relation[value#139] text                                                      
          
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Post-Scan Filters: 
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:19 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:19 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 010 */
/* 011 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 012 */     this.references = references;
/* 013 */   }
/* 014 */
/* 015 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 016 */     partitionIndex = index;
/* 017 */     this.inputs = inputs;
/* 018 */     scan_mutableStateArray_0[0] = inputs[0];
/* 019 */
/* 020 */   }
/* 021 */
/* 022 */   protected void processNext() throws java.io.IOException {
/* 023 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 024 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 025 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 026 */       append(scan_row_0);
/* 027 */       if (shouldStop()) return;
/* 028 */     }
/* 029 */   }
/* 030 */
/* 031 */ }

2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_25 stored as values in memory (estimated size 221.9 KB, free 1967.7 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_25 locally took  16 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_25 without replication took  16 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_25_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1967.7 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_25_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.1 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_25_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_25_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_25_piece0 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_25_piece0 without replication took  0 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 25 from load at UseCase2.java:24
2022-02-10 13:31:19 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 10296320 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.Dataset$$anonfun$rdd$1.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType org.apache.spark.sql.Dataset$$anonfun$rdd$1.objectType$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.Dataset$$anonfun$rdd$1.apply(scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.Dataset$$anonfun$rdd$1$$anonfun$apply$16
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.Dataset$$anonfun$rdd$1) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 3
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final scala.Option org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.maybeFirstLine$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.parsedOptions$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9.apply(scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9$$anonfun$apply$3
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.sql.execution.datasources.csv.TextInputCSVDataSource$$anonfun$9) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.execution.datasources.csv.CSVOptions org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.options$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2.apply(org.apache.spark.sql.types.DataType[],java.lang.String[])
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$2) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.types.DataType[] org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3.apply(org.apache.spark.sql.types.DataType[],org.apache.spark.sql.types.DataType[])
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.datasources.csv.CSVInferSchema$$anonfun$3) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$36) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$36.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$36.processPartition$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$36.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$36) is now cleaned +++
2022-02-10 13:31:19 INFO  SparkContext:54 - Starting job: load at UseCase2.java:24
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Got job 11 (load at UseCase2.java:24) with 1 output partitions
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Final stage: ResultStage 14 (load at UseCase2.java:24)
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Parents of final stage: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Missing parents: List()
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitStage(ResultStage 14 (name=load at UseCase2.java:24;jobs=11))
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting ResultStage 14 (MapPartitionsRDD[60] at load at UseCase2.java:24), which has no missing parents
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 14)
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_26 stored as values in memory (estimated size 14.0 KB, free 1967.7 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_26 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_26 without replication took  0 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_26_piece0 stored as bytes in memory (estimated size 7.6 KB, free 1967.7 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_26_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 7.6 KB, free: 1970.1 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_26_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_26_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_26_piece0 locally took  16 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_26_piece0 without replication took  16 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 26 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 14 (MapPartitionsRDD[60] at load at UseCase2.java:24) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Adding task set 14.0 with 1 tasks
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Epoch for TaskSet 14.0: 3
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 14.0: NO_PREF, ANY
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_14.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Starting task 0.0 in stage 14.0 (TID 14, localhost, executor driver, partition 0, PROCESS_LOCAL, 8353 bytes)
2022-02-10 13:31:19 INFO  Executor:54 - Running task 0.0 in stage 14.0 (TID 14)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_26
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_26 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:19 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:19 DEBUG GenerateUnsafeProjection:58 - code for input[0, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_25
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_25 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:19 INFO  Executor:54 - Finished task 0.0 in stage 14.0 (TID 14). 1473 bytes result sent to driver
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_14.0, runningTasks: 0
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Finished task 0.0 in stage 14.0 (TID 14) in 62 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Removed TaskSet 14.0, whose tasks have all completed, from pool 
2022-02-10 13:31:19 INFO  DAGScheduler:54 - ResultStage 14 (load at UseCase2.java:24) finished in 0.079 s
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - After removal of stage 14, remaining stages = 0
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Job 11 finished: load at UseCase2.java:24, took 0.069168 s
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Cleanup ===
 Aggregate [count(1) AS count#177L]                                                                                                                                                              Aggregate [count(1) AS count#177L]
 +- Relation[customer_id#149,customer_fname#150,customer_lname#151,customer_email#152,customer_password#153,customer_street#154,customer_city#155,customer_state#156,customer_zipcode#157] csv   +- Relation[customer_id#149,customer_fname#150,customer_lname#151,customer_email#152,customer_password#153,customer_street#154,customer_city#155,customer_state#156,customer_zipcode#157] csv
          
2022-02-10 13:31:19 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 Aggregate [count(1) AS count#177L]                                                                                                                                                              Aggregate [count(1) AS count#177L]
!+- Relation[customer_id#149,customer_fname#150,customer_lname#151,customer_email#152,customer_password#153,customer_street#154,customer_city#155,customer_state#156,customer_zipcode#157] csv   +- Project
!                                                                                                                                                                                                   +- Relation[customer_id#149,customer_fname#150,customer_lname#151,customer_email#152,customer_password#153,customer_street#154,customer_city#155,customer_state#156,customer_zipcode#157] csv
          
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Post-Scan Filters: 
2022-02-10 13:31:19 INFO  FileSourceStrategy:54 - Output Data Schema: struct<>
2022-02-10 13:31:19 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:19 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage2(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=2
/* 006 */ final class GeneratedIteratorForCodegenStage2 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private scala.collection.Iterator inputadapter_input_0;
/* 013 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage2(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     inputadapter_input_0 = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (inputadapter_input_0.hasNext() && !stopEarly()) {
/* 034 */       InternalRow inputadapter_row_0 = (InternalRow) inputadapter_input_0.next();
/* 035 */       long inputadapter_value_0 = inputadapter_row_0.getLong(0);
/* 036 */
/* 037 */       agg_doConsume_0(inputadapter_row_0, inputadapter_value_0);
/* 038 */       if (shouldStop()) return;
/* 039 */     }
/* 040 */
/* 041 */   }
/* 042 */
/* 043 */   private void agg_doConsume_0(InternalRow inputadapter_row_0, long agg_expr_0_0) throws java.io.IOException {
/* 044 */     // do aggregate
/* 045 */     // common sub-expressions
/* 046 */
/* 047 */     // evaluate aggregate function
/* 048 */     long agg_value_3 = -1L;
/* 049 */     agg_value_3 = agg_bufValue_0 + agg_expr_0_0;
/* 050 */     // update aggregation buffer
/* 051 */     agg_bufIsNull_0 = false;
/* 052 */     agg_bufValue_0 = agg_value_3;
/* 053 */
/* 054 */   }
/* 055 */
/* 056 */   protected void processNext() throws java.io.IOException {
/* 057 */     while (!agg_initAgg_0) {
/* 058 */       agg_initAgg_0 = true;
/* 059 */       long agg_beforeAgg_0 = System.nanoTime();
/* 060 */       agg_doAggregateWithoutKey_0();
/* 061 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 062 */
/* 063 */       // output the result
/* 064 */
/* 065 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 066 */       agg_mutableStateArray_0[0].reset();
/* 067 */
/* 068 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 069 */
/* 070 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 071 */       append((agg_mutableStateArray_0[0].getRow()));
/* 072 */     }
/* 073 */   }
/* 074 */
/* 075 */ }

2022-02-10 13:31:19 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private boolean agg_initAgg_0;
/* 010 */   private boolean agg_bufIsNull_0;
/* 011 */   private long agg_bufValue_0;
/* 012 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] agg_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 013 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 014 */
/* 015 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 016 */     this.references = references;
/* 017 */   }
/* 018 */
/* 019 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 020 */     partitionIndex = index;
/* 021 */     this.inputs = inputs;
/* 022 */
/* 023 */     scan_mutableStateArray_0[0] = inputs[0];
/* 024 */     agg_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 025 */
/* 026 */   }
/* 027 */
/* 028 */   private void agg_doAggregateWithoutKey_0() throws java.io.IOException {
/* 029 */     // initialize aggregation buffer
/* 030 */     agg_bufIsNull_0 = false;
/* 031 */     agg_bufValue_0 = 0L;
/* 032 */
/* 033 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 034 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 035 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 036 */       agg_doConsume_0(scan_row_0);
/* 037 */       if (shouldStop()) return;
/* 038 */     }
/* 039 */
/* 040 */   }
/* 041 */
/* 042 */   private void agg_doConsume_0(InternalRow scan_row_0) throws java.io.IOException {
/* 043 */     // do aggregate
/* 044 */     // common sub-expressions
/* 045 */
/* 046 */     // evaluate aggregate function
/* 047 */     long agg_value_1 = -1L;
/* 048 */     agg_value_1 = agg_bufValue_0 + 1L;
/* 049 */     // update aggregation buffer
/* 050 */     agg_bufIsNull_0 = false;
/* 051 */     agg_bufValue_0 = agg_value_1;
/* 052 */
/* 053 */   }
/* 054 */
/* 055 */   protected void processNext() throws java.io.IOException {
/* 056 */     while (!agg_initAgg_0) {
/* 057 */       agg_initAgg_0 = true;
/* 058 */       long agg_beforeAgg_0 = System.nanoTime();
/* 059 */       agg_doAggregateWithoutKey_0();
/* 060 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[2] /* aggTime */).add((System.nanoTime() - agg_beforeAgg_0) / 1000000);
/* 061 */
/* 062 */       // output the result
/* 063 */
/* 064 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 065 */       agg_mutableStateArray_0[0].reset();
/* 066 */
/* 067 */       agg_mutableStateArray_0[0].zeroOutNullBytes();
/* 068 */
/* 069 */       agg_mutableStateArray_0[0].write(0, agg_bufValue_0);
/* 070 */       append((agg_mutableStateArray_0[0].getRow()));
/* 071 */     }
/* 072 */   }
/* 073 */
/* 074 */ }

2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_27 stored as values in memory (estimated size 221.8 KB, free 1967.4 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_27 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_27 without replication took  0 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_27_piece0 stored as bytes in memory (estimated size 20.7 KB, free 1967.4 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_27_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 20.7 KB, free: 1970.1 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_27_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_27_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_27_piece0 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_27_piece0 without replication took  0 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 27 from count at UseCase2.java:53
2022-02-10 13:31:19 INFO  FileSourceScanExec:54 - Planning scan with bin packing, max size: 5148160 bytes, open cost is considered as scanning 4194304 bytes.
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 4
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.sql.catalyst.expressions.codegen.CodeAndComment org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.cleanedSource$2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final java.lang.Object[] org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.references$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final org.apache.spark.sql.execution.metric.SQLMetric org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.durationMs$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final scala.collection.Iterator org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13.apply(int,scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD$$anonfun$collect$1 org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.$outer
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15.apply(scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      <function0>
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[66] at count at UseCase2.java:53
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[66] at count at UseCase2.java:53)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + cloning the object <function0> of class org.apache.spark.rdd.RDD$$anonfun$collect$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + cleaning cloned closure <function0> recursively (org.apache.spark.rdd.RDD$$anonfun$collect$1)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.rdd.RDD$$anonfun$collect$1.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.$outer
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.rdd.RDD$$anonfun$collect$1.apply()
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public org.apache.spark.rdd.RDD org.apache.spark.rdd.RDD$$anonfun$collect$1.org$apache$spark$rdd$RDD$$anonfun$$$outer()
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      org.apache.spark.rdd.RDD
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      MapPartitionsRDD[66] at count at UseCase2.java:53
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 4 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD,Set(org$apache$spark$rdd$RDD$$evidence$1))
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class java.lang.Object,Set())
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class scala.runtime.AbstractFunction0,Set())
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      (class org.apache.spark.rdd.RDD$$anonfun$collect$1,Set($outer))
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outermost object is not a closure or REPL line object,so do not clone it: (class org.apache.spark.rdd.RDD,MapPartitionsRDD[66] at count at UseCase2.java:53)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function0> (org.apache.spark.rdd.RDD$$anonfun$collect$1) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function1> (org.apache.spark.rdd.RDD$$anonfun$collect$1$$anonfun$15) is now cleaned +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 - +++ Cleaning closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) +++
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared fields: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public static final long org.apache.spark.SparkContext$$anonfun$runJob$5.serialVersionUID
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      private final scala.Function1 org.apache.spark.SparkContext$$anonfun$runJob$5.cleanedFunc$1
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + declared methods: 2
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(java.lang.Object,java.lang.Object)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -      public final java.lang.Object org.apache.spark.SparkContext$$anonfun$runJob$5.apply(org.apache.spark.TaskContext,scala.collection.Iterator)
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + inner classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer classes: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + outer objects: 0
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + populating accessed fields because this is the starting closure
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + fields accessed by starting closure: 0 classes
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  + there are no enclosing objects!
2022-02-10 13:31:19 DEBUG ClosureCleaner:58 -  +++ closure <function2> (org.apache.spark.SparkContext$$anonfun$runJob$5) is now cleaned +++
2022-02-10 13:31:19 INFO  SparkContext:54 - Starting job: count at UseCase2.java:53
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Registering RDD 63 (count at UseCase2.java:53) as input to shuffle 3
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Got job 12 (count at UseCase2.java:53) with 1 output partitions
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Final stage: ResultStage 16 (count at UseCase2.java:53)
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Parents of final stage: List(ShuffleMapStage 15)
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Missing parents: List(ShuffleMapStage 15)
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitStage(ResultStage 16 (name=count at UseCase2.java:53;jobs=12))
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - missing: List(ShuffleMapStage 15)
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitStage(ShuffleMapStage 15 (name=count at UseCase2.java:53;jobs=12))
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting ShuffleMapStage 15 (MapPartitionsRDD[63] at count at UseCase2.java:53), which has no missing parents
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitMissingTasks(ShuffleMapStage 15)
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_28 stored as values in memory (estimated size 12.9 KB, free 1967.4 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_28 locally took  16 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_28 without replication took  16 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_28_piece0 stored as bytes in memory (estimated size 6.9 KB, free 1967.4 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_28_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 6.9 KB, free: 1970.1 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_28_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_28_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_28_piece0 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_28_piece0 without replication took  0 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 28 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ShuffleMapStage 15 (MapPartitionsRDD[63] at count at UseCase2.java:53) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Adding task set 15.0 with 1 tasks
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Epoch for TaskSet 15.0: 3
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 15.0: NO_PREF, ANY
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_15.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Starting task 0.0 in stage 15.0 (TID 15, localhost, executor driver, partition 0, PROCESS_LOCAL, 8310 bytes)
2022-02-10 13:31:19 INFO  Executor:54 - Running task 0.0 in stage 15.0 (TID 15)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_28
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_28 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 INFO  FileScanRDD:54 - Reading File path: file:///C:/Users/Anukul%20Thalkar/IdeaProjects/UseCases/src/main/resources/retail_db/customers/part-00000, range: 0-953856, partition values: [empty row]
2022-02-10 13:31:19 DEBUG GenerateUnsafeProjection:58 - code for :
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(0, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */     return (mutableStateArray_0[0].getRow());
/* 028 */   }
/* 029 */
/* 030 */
/* 031 */ }

2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_27
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_27 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 INFO  Executor:54 - Finished task 0.0 in stage 15.0 (TID 15). 1516 bytes result sent to driver
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_15.0, runningTasks: 0
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - No tasks for locality level NO_PREF, so moving to locality level ANY
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Finished task 0.0 in stage 15.0 (TID 15) in 16 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Removed TaskSet 15.0, whose tasks have all completed, from pool 
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - ShuffleMapTask finished on driver
2022-02-10 13:31:19 INFO  DAGScheduler:54 - ShuffleMapStage 15 (count at UseCase2.java:53) finished in 0.032 s
2022-02-10 13:31:19 INFO  DAGScheduler:54 - looking for newly runnable stages
2022-02-10 13:31:19 INFO  DAGScheduler:54 - running: Set()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - waiting: Set(ResultStage 16)
2022-02-10 13:31:19 INFO  DAGScheduler:54 - failed: Set()
2022-02-10 13:31:19 DEBUG MapOutputTrackerMaster:58 - Increasing epoch to 4
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitStage(ResultStage 16 (name=count at UseCase2.java:53;jobs=12))
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - missing: List()
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting ResultStage 16 (MapPartitionsRDD[66] at count at UseCase2.java:53), which has no missing parents
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - submitMissingTasks(ResultStage 16)
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_29 stored as values in memory (estimated size 7.3 KB, free 1967.4 MB)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_29 locally took  0 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_29 without replication took  0 ms
2022-02-10 13:31:19 INFO  MemoryStore:54 - Block broadcast_29_piece0 stored as bytes in memory (estimated size 3.9 KB, free 1967.4 MB)
2022-02-10 13:31:19 INFO  BlockManagerInfo:54 - Added broadcast_29_piece0 in memory on Clairvoyant-324.mshome.net:53700 (size: 3.9 KB, free: 1970.1 MB)
2022-02-10 13:31:19 DEBUG BlockManagerMaster:58 - Updated info of block broadcast_29_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Told master about block broadcast_29_piece0
2022-02-10 13:31:19 DEBUG BlockManager:58 - Put block broadcast_29_piece0 locally took  16 ms
2022-02-10 13:31:19 DEBUG BlockManager:58 - Putting block broadcast_29_piece0 without replication took  16 ms
2022-02-10 13:31:19 INFO  SparkContext:54 - Created broadcast 29 from broadcast at DAGScheduler.scala:1184
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Submitting 1 missing tasks from ResultStage 16 (MapPartitionsRDD[66] at count at UseCase2.java:53) (first 15 tasks are for partitions Vector(0))
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Adding task set 16.0 with 1 tasks
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Epoch for TaskSet 16.0: 4
2022-02-10 13:31:19 DEBUG TaskSetManager:58 - Valid locality levels for TaskSet 16.0: ANY
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_16.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Starting task 0.0 in stage 16.0 (TID 16, localhost, executor driver, partition 0, ANY, 7767 bytes)
2022-02-10 13:31:19 INFO  Executor:54 - Running task 0.0 in stage 16.0 (TID 16)
2022-02-10 13:31:19 DEBUG BlockManager:58 - Getting local block broadcast_29
2022-02-10 13:31:19 DEBUG BlockManager:58 - Level for block broadcast_29 is StorageLevel(disk, memory, deserialized, 1 replicas)
2022-02-10 13:31:19 DEBUG MapOutputTrackerMaster:58 - Fetching outputs for shuffle 3, partitions 0-1
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - maxBytesInFlight: 50331648, targetRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
2022-02-10 13:31:19 INFO  ShuffleBlockFetcherIterator:54 - Getting 1 non-empty blocks including 1 local blocks and 0 remote blocks
2022-02-10 13:31:19 INFO  ShuffleBlockFetcherIterator:54 - Started 0 remote fetches in 0 ms
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - Start fetching local blocks: shuffle_3_0_0
2022-02-10 13:31:19 DEBUG ShuffleBlockFetcherIterator:58 - Got local blocks in  0 ms
2022-02-10 13:31:19 INFO  Executor:54 - Finished task 0.0 in stage 16.0 (TID 16). 1610 bytes result sent to driver
2022-02-10 13:31:19 DEBUG TaskSchedulerImpl:58 - parentName: , name: TaskSet_16.0, runningTasks: 0
2022-02-10 13:31:19 INFO  TaskSetManager:54 - Finished task 0.0 in stage 16.0 (TID 16) in 0 ms on localhost (executor driver) (1/1)
2022-02-10 13:31:19 INFO  TaskSchedulerImpl:54 - Removed TaskSet 16.0, whose tasks have all completed, from pool 
2022-02-10 13:31:19 INFO  DAGScheduler:54 - ResultStage 16 (count at UseCase2.java:53) finished in 0.016 s
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - After removal of stage 16, remaining stages = 1
2022-02-10 13:31:19 DEBUG DAGScheduler:58 - After removal of stage 15, remaining stages = 0
2022-02-10 13:31:19 INFO  DAGScheduler:54 - Job 12 finished: count at UseCase2.java:53, took 0.043602 s
2022-02-10 13:31:19 INFO  SparkContext:54 - Invoking stop() from shutdown hook
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping Server@538613b3{STARTED}[9.4.z-SNAPSHOT]
2022-02-10 13:31:19 DEBUG Server:433 - doStop Server@538613b3{STOPPING}[9.4.z-SNAPSHOT]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran SparkUI-31-acceptor-0@47747fb9-ServerConnector@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041} in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=3,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:19 DEBUG AbstractHandlerContainer:167 - Graceful shutdown Server@538613b3{STOPPING}[9.4.z-SNAPSHOT] by 
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping Spark@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping SelectorManager@Spark@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@7dac3fd8{STARTED} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@e03416a on ManagedSelector@7dac3fd8{STOPPING} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@7dac3fd8{STOPPING} id=3 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@e03416a
2022-02-10 13:31:19 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@7dac3fd8{STOPPING} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d waiting with 0 keys
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@11f9696b on ManagedSelector@7dac3fd8{STOPPING} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@7dac3fd8{STOPPING} id=3 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@6059442d processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@11f9696b
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@6e33c391 in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@133e019b/SelectorProducer@41382722/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@7dac3fd8{STOPPED} id=3 keys=-1 selected=-1 updates=0
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@5bbc9f97{STARTED} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@7d4a3914 on ManagedSelector@5bbc9f97{STOPPING} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@5bbc9f97{STOPPING} id=2 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@7d4a3914
2022-02-10 13:31:19 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@5bbc9f97{STOPPING} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a waiting with 0 keys
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@74a98526 on ManagedSelector@5bbc9f97{STOPPING} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@5bbc9f97{STOPPING} id=2 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@24e1986a processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@74a98526
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/PRODUCING/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@38875e7d in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@5ed190be/SelectorProducer@402f80f5/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@5bbc9f97{STOPPED} id=2 keys=-1 selected=-1 updates=0
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@77b7ffa4{STARTED} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@60b582c8 on ManagedSelector@77b7ffa4{STOPPING} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@77b7ffa4{STOPPING} id=1 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@60b582c8
2022-02-10 13:31:19 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@77b7ffa4{STOPPING} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@3add1d84 on ManagedSelector@77b7ffa4{STOPPING} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 waiting with 0 keys
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@77b7ffa4{STOPPING} id=1 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@627272d9 processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@3add1d84
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/PRODUCING/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@51684e4a in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@473b3b7a/SelectorProducer@1734f68/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@77b7ffa4{STOPPED} id=1 keys=-1 selected=-1 updates=0
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@443dbe42{STARTED} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@16f30152 on ManagedSelector@443dbe42{STOPPING} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@443dbe42{STOPPING} id=0 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@16f30152
2022-02-10 13:31:19 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@443dbe42{STOPPING} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@2ecb261f on ManagedSelector@443dbe42{STOPPING} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:19 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d waiting with 0 keys
2022-02-10 13:31:19 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@443dbe42{STOPPING} id=0 keys=0 selected=0 updates=1
2022-02-10 13:31:19 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d woken with none selected
2022-02-10 13:31:19 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d woken up from select, 0/0/0 selected
2022-02-10 13:31:19 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@7e49ff7d processing 0 keys, 1 updates
2022-02-10 13:31:19 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:19 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@2ecb261f
2022-02-10 13:31:19 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/PRODUCING/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/553879264@3d4d3fe7 in QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@37d80fe7/SelectorProducer@6c4f9535/IDLE/p=false/QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:19.433+05:30
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@443dbe42{STOPPED} id=0 keys=-1 selected=-1 updates=0
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED SelectorManager@Spark@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping HttpConnectionFactory@41200e0c[HTTP/1.1]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED HttpConnectionFactory@41200e0c[HTTP/1.1]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ScheduledExecutorScheduler@3a0807b7{STARTED}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ScheduledExecutorScheduler@3a0807b7{STOPPED}
2022-02-10 13:31:19 INFO  AbstractConnector:381 - Stopped Spark@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED Spark@40f33492{HTTP/1.1, (http/1.1)}{0.0.0.0:4041}
2022-02-10 13:31:19 DEBUG AbstractHandler:107 - stopping Server@538613b3{STOPPING}[9.4.z-SNAPSHOT]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ContextHandlerCollection@560cbf1a{STARTED}
2022-02-10 13:31:19 DEBUG AbstractHandler:107 - stopping ContextHandlerCollection@560cbf1a{STOPPING}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ContextHandlerCollection@560cbf1a{STOPPED}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ErrorHandler@5c1bd44c{STARTED}
2022-02-10 13:31:19 DEBUG AbstractHandler:107 - stopping ErrorHandler@5c1bd44c{STOPPING}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ErrorHandler@5c1bd44c{STOPPED}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping QueuedThreadPool[SparkUI]@4a9e6faf{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:224 - Stopping QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@3d6300e8{s=0/8,p=0}]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:212 - stopping ReservedThreadExecutor@3d6300e8{s=0/8,p=0}
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED ReservedThreadExecutor@3d6300e8{s=-1/8,p=0}
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:317 - Waiting for Thread[SparkUI-31,5,main] for 14999
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-31,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/373437697@76398781 in QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:317 - Waiting for Thread[SparkUI-32,5,main] for 14998
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-33,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-27,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-28,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-29,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-34,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-30,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-32,5,main] exited for QueuedThreadPool[SparkUI]@4a9e6faf{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG QueuedThreadPool:317 - Waiting for Thread[SparkUI-27,5,] for 14998
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED QueuedThreadPool[SparkUI]@4a9e6faf{STOPPED,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:19 DEBUG AbstractLifeCycle:224 - STOPPED Server@538613b3{STOPPED}[9.4.z-SNAPSHOT]
2022-02-10 13:31:19 INFO  SparkUI:54 - Stopped Spark web UI at http://Clairvoyant-324.mshome.net:4041
2022-02-10 13:31:19 INFO  MapOutputTrackerMasterEndpoint:54 - MapOutputTrackerMasterEndpoint stopped!
2022-02-10 13:31:19 INFO  MemoryStore:54 - MemoryStore cleared
2022-02-10 13:31:19 INFO  BlockManager:54 - BlockManager stopped
2022-02-10 13:31:19 INFO  BlockManagerMaster:54 - BlockManagerMaster stopped
2022-02-10 13:31:19 INFO  OutputCommitCoordinator$OutputCommitCoordinatorEndpoint:54 - OutputCommitCoordinator stopped!
2022-02-10 13:31:19 INFO  SparkContext:54 - Successfully stopped SparkContext
2022-02-10 13:31:19 INFO  ShutdownHookManager:54 - Shutdown hook called
2022-02-10 13:31:19 INFO  ShutdownHookManager:54 - Deleting directory C:\Users\Anukul Thalkar\AppData\Local\Temp\spark-f8faaa27-7d85-4fe0-934e-bbea056e6aab
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     2022-02-10 13:31:53 WARN  SparkSession$Builder:66 - Using an existing SparkSession; some spark core configurations may not take effect.
2022-02-10 13:31:53 INFO  InMemoryFileIndex:54 - It took 2 ms to list leaf files for 1 paths.
2022-02-10 13:31:53 INFO  InMemoryFileIndex:54 - It took 1 ms to list leaf files for 2 paths.
2022-02-10 13:31:53 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#392
2022-02-10 13:31:53 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Project [unresolvedalias('value, None)]   Project [value#392]
 +- Relation[value#392] text                +- Relation[value#392] text
          
2022-02-10 13:31:53 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#396: java.lang.String   DeserializeToObject cast(value#392 as string).toString, obj#396: java.lang.String
 +- LocalRelation <empty>, [value#392]                                                                                                                                      +- LocalRelation <empty>, [value#392]
          
2022-02-10 13:31:53 DEBUG Analyzer$ResolveReferences:58 - Resolving 'value to value#392
2022-02-10 13:31:53 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'Filter (length(trim('value, None)) > 0)   Filter (length(trim(value#392, None)) > 0)
 +- Project [value#392]                     +- Project [value#392]
    +- Relation[value#392] text                +- Relation[value#392] text
          
2022-02-10 13:31:53 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#397: java.lang.String   DeserializeToObject cast(value#392 as string).toString, obj#397: java.lang.String
 +- LocalRelation <empty>, [value#392]                                                                                                                                      +- LocalRelation <empty>, [value#392]
          
2022-02-10 13:31:53 DEBUG BaseSessionStateBuilder$$anon$1:58 - 
=== Result of Batch Resolution ===
!'DeserializeToObject unresolveddeserializer(upcast(getcolumnbyordinal(0, StringType), StringType, - root class: "java.lang.String").toString), obj#398: java.lang.String   DeserializeToObject cast(value#392 as string).toString, obj#398: java.lang.String
 +- LocalRelation <empty>, [value#392]                                                                                                                                      +- LocalRelation <empty>, [value#392]
          
2022-02-10 13:31:53 DEBUG BaseSessionStateBuilder$$anon$2:58 - 
=== Result of Batch Operator Optimization before Inferring Filters ===
 GlobalLimit 1                                      GlobalLimit 1
 +- LocalLimit 1                                    +- LocalLimit 1
    +- Filter (length(trim(value#392, None)) > 0)      +- Filter (length(trim(value#392, None)) > 0)
!      +- Project [value#392]                             +- Relation[value#392] text
!         +- Relation[value#392] text               
          
2022-02-10 13:31:53 INFO  SparkContext:54 - Invoking stop() from shutdown hook
2022-02-10 13:31:53 INFO  FileSourceStrategy:54 - Pruning directories with: 
2022-02-10 13:31:53 INFO  FileSourceStrategy:54 - Post-Scan Filters: (length(trim(value#392, None)) > 0)
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping Server@4d8286c4{STARTED}[9.4.z-SNAPSHOT]
2022-02-10 13:31:53 INFO  FileSourceStrategy:54 - Output Data Schema: struct<value: string>
2022-02-10 13:31:53 DEBUG Server:433 - doStop Server@4d8286c4{STOPPING}[9.4.z-SNAPSHOT]
2022-02-10 13:31:53 INFO  FileSourceScanExec:54 - Pushed Filters: 
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran SparkUI-33-acceptor-0@1f0b3cfe-ServerConnector@7eae3764{HTTP/1.1, (http/1.1)}{0.0.0.0:4040} in QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=3,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}]
2022-02-10 13:31:53 DEBUG AbstractHandlerContainer:167 - Graceful shutdown Server@4d8286c4{STOPPING}[9.4.z-SNAPSHOT] by 
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping Spark@7eae3764{HTTP/1.1, (http/1.1)}{0.0.0.0:4040}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping SelectorManager@Spark@7eae3764{HTTP/1.1, (http/1.1)}{0.0.0.0:4040}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@4ee6291f{STARTED} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@6007656f on ManagedSelector@4ee6291f{STOPPING} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@4ee6291f{STOPPING} id=3 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG GenerateSafeProjection:58 - code for input[0, string, true].toString:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificSafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificSafeProjection extends org.apache.spark.sql.catalyst.expressions.codegen.BaseProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private InternalRow mutableRow;
/* 009 */
/* 010 */
/* 011 */   public SpecificSafeProjection(Object[] references) {
/* 012 */     this.references = references;
/* 013 */     mutableRow = (InternalRow) references[references.length - 1];
/* 014 */
/* 015 */   }
/* 016 */
/* 017 */   public void initialize(int partitionIndex) {
/* 018 */
/* 019 */   }
/* 020 */
/* 021 */   public java.lang.Object apply(java.lang.Object _i) {
/* 022 */     InternalRow i = (InternalRow) _i;
/* 023 */     boolean isNull_1 = i.isNullAt(0);
/* 024 */     UTF8String value_1 = isNull_1 ?
/* 025 */     null : (i.getUTF8String(0));
/* 026 */     boolean isNull_0 = true;
/* 027 */     java.lang.String value_0 = null;
/* 028 */     if (!isNull_1) {
/* 029 */
/* 030 */       isNull_0 = false;
/* 031 */       if (!isNull_0) {
/* 032 */
/* 033 */         Object funcResult_0 = null;
/* 034 */         funcResult_0 = value_1.toString();
/* 035 */         value_0 = (java.lang.String) funcResult_0;
/* 036 */
/* 037 */       }
/* 038 */     }
/* 039 */     if (isNull_0) {
/* 040 */       mutableRow.setNullAt(0);
/* 041 */     } else {
/* 042 */
/* 043 */       mutableRow.update(0, value_0);
/* 044 */     }
/* 045 */
/* 046 */     return mutableRow;
/* 047 */   }
/* 048 */
/* 049 */
/* 050 */ }

2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@7de2adec woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@7de2adec woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@7de2adec processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@6007656f
2022-02-10 13:31:53 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@4ee6291f{STOPPING} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@7de2adec waiting with 0 keys
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@635f7f8d on ManagedSelector@4ee6291f{STOPPING} id=3 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@4ee6291f{STOPPING} id=3 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@7de2adec woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@7de2adec woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@7de2adec processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@635f7f8d
2022-02-10 13:31:53 DEBUG WholeStageCodegenExec:58 - 
/* 001 */ public Object generate(Object[] references) {
/* 002 */   return new GeneratedIteratorForCodegenStage1(references);
/* 003 */ }
/* 004 */
/* 005 */ // codegenStageId=1
/* 006 */ final class GeneratedIteratorForCodegenStage1 extends org.apache.spark.sql.execution.BufferedRowIterator {
/* 007 */   private Object[] references;
/* 008 */   private scala.collection.Iterator[] inputs;
/* 009 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] filter_mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 010 */   private scala.collection.Iterator[] scan_mutableStateArray_0 = new scala.collection.Iterator[1];
/* 011 */
/* 012 */   public GeneratedIteratorForCodegenStage1(Object[] references) {
/* 013 */     this.references = references;
/* 014 */   }
/* 015 */
/* 016 */   public void init(int index, scala.collection.Iterator[] inputs) {
/* 017 */     partitionIndex = index;
/* 018 */     this.inputs = inputs;
/* 019 */     scan_mutableStateArray_0[0] = inputs[0];
/* 020 */     filter_mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 32);
/* 021 */
/* 022 */   }
/* 023 */
/* 024 */   protected void processNext() throws java.io.IOException {
/* 025 */     while (scan_mutableStateArray_0[0].hasNext()) {
/* 026 */       InternalRow scan_row_0 = (InternalRow) scan_mutableStateArray_0[0].next();
/* 027 */       ((org.apache.spark.sql.execution.metric.SQLMetric) references[0] /* numOutputRows */).add(1);
/* 028 */       do {
/* 029 */         boolean scan_isNull_0 = scan_row_0.isNullAt(0);
/* 030 */         UTF8String scan_value_0 = scan_isNull_0 ?
/* 031 */         null : (scan_row_0.getUTF8String(0));
/* 032 */
/* 033 */         boolean filter_isNull_0 = true;
/* 034 */         boolean filter_value_0 = false;
/* 035 */         boolean filter_isNull_2 = false;
/* 036 */         UTF8String filter_value_2 = null;
/* 037 */         if (scan_isNull_0) {
/* 038 */           filter_isNull_2 = true;
/* 039 */         } else {
/* 040 */           filter_value_2 = scan_value_0.trim();
/* 041 */         }
/* 042 */         boolean filter_isNull_1 = filter_isNull_2;
/* 043 */         int filter_value_1 = -1;
/* 044 */
/* 045 */         if (!filter_isNull_2) {
/* 046 */           filter_value_1 = (filter_value_2).numChars();
/* 047 */         }
/* 048 */         if (!filter_isNull_1) {
/* 049 */           filter_isNull_0 = false; // resultCode could change nullability.
/* 050 */           filter_value_0 = filter_value_1 > 0;
/* 051 */
/* 052 */         }
/* 053 */         if (filter_isNull_0 || !filter_value_0) continue;
/* 054 */
/* 055 */         ((org.apache.spark.sql.execution.metric.SQLMetric) references[1] /* numOutputRows */).add(1);
/* 056 */
/* 057 */         filter_mutableStateArray_0[0].reset();
/* 058 */
/* 059 */         filter_mutableStateArray_0[0].zeroOutNullBytes();
/* 060 */
/* 061 */         if (scan_isNull_0) {
/* 062 */           filter_mutableStateArray_0[0].setNullAt(0);
/* 063 */         } else {
/* 064 */           filter_mutableStateArray_0[0].write(0, scan_value_0);
/* 065 */         }
/* 066 */         append((filter_mutableStateArray_0[0].getRow()));
/* 067 */
/* 068 */       } while(false);
/* 069 */       if (shouldStop()) return;
/* 070 */     }
/* 071 */   }
/* 072 */
/* 073 */ }

2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@5c080ef3/SelectorProducer@188cbcde/PRODUCING/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/937437482@65c33b92 in QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@5c080ef3/SelectorProducer@188cbcde/IDLE/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=4,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@4ee6291f{STOPPED} id=3 keys=-1 selected=-1 updates=0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@24e83d19{STARTED} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@2fe93fc9 on ManagedSelector@24e83d19{STOPPING} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@24e83d19{STOPPING} id=2 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@20b16b3a woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@20b16b3a woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@20b16b3a processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@2fe93fc9
2022-02-10 13:31:53 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@24e83d19{STOPPING} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@20b16b3a waiting with 0 keys
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@4a518681 on ManagedSelector@24e83d19{STOPPING} id=2 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@24e83d19{STOPPING} id=2 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@20b16b3a woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@20b16b3a woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@20b16b3a processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@4a518681
2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@124ac145/SelectorProducer@2def7a7a/PRODUCING/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/937437482@9b21bd3 in QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@124ac145/SelectorProducer@2def7a7a/IDLE/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=5,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@24e83d19{STOPPED} id=2 keys=-1 selected=-1 updates=0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@4f66ffc8{STARTED} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@1126beb9 on ManagedSelector@4f66ffc8{STOPPING} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@4f66ffc8{STOPPING} id=1 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@791b76d4 woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@791b76d4 woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@791b76d4 processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@1126beb9
2022-02-10 13:31:53 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@4f66ffc8{STOPPING} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@791b76d4 waiting with 0 keys
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@91d0807 on ManagedSelector@4f66ffc8{STOPPING} id=1 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@4f66ffc8{STOPPING} id=1 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@791b76d4 woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@791b76d4 woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@791b76d4 processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@91d0807
2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@1bc49bc5/SelectorProducer@7b6e5c12/PRODUCING/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/937437482@44e93c1f in QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@1bc49bc5/SelectorProducer@7b6e5c12/IDLE/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=6,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@4f66ffc8{STOPPED} id=1 keys=-1 selected=-1 updates=0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ManagedSelector@7a04fea7{STARTED} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$CloseConnections@6f6c799a on ManagedSelector@7a04fea7{STOPPING} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@7a04fea7{STOPPING} id=0 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@56ea411 woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@56ea411 woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@56ea411 processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$CloseConnections@6f6c799a
2022-02-10 13:31:53 DEBUG ManagedSelector:996 - Closing 0 connections on ManagedSelector@7a04fea7{STOPPING} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG ManagedSelector:605 - Selector sun.nio.ch.WindowsSelectorImpl@56ea411 waiting with 0 keys
2022-02-10 13:31:53 DEBUG ManagedSelector:286 - Queued change lazy=false org.spark_project.jetty.io.ManagedSelector$StopSelector@29cf8f78 on ManagedSelector@7a04fea7{STOPPING} id=0 keys=0 selected=0 updates=0
2022-02-10 13:31:53 DEBUG ManagedSelector:304 - Wakeup on submit ManagedSelector@7a04fea7{STOPPING} id=0 keys=0 selected=0 updates=1
2022-02-10 13:31:53 DEBUG ManagedSelector:194 - Selector sun.nio.ch.WindowsSelectorImpl@56ea411 woken with none selected
2022-02-10 13:31:53 DEBUG ManagedSelector:612 - Selector sun.nio.ch.WindowsSelectorImpl@56ea411 woken up from select, 0/0/0 selected
2022-02-10 13:31:53 DEBUG ManagedSelector:628 - Selector sun.nio.ch.WindowsSelectorImpl@56ea411 processing 0 keys, 1 updates
2022-02-10 13:31:53 DEBUG ManagedSelector:558 - updateable 1
2022-02-10 13:31:53 DEBUG ManagedSelector:567 - update org.spark_project.jetty.io.ManagedSelector$StopSelector@29cf8f78
2022-02-10 13:31:53 DEBUG ManagedSelector:587 - updates 0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping EatWhatYouKill@3f725306/SelectorProducer@a2ddf26/PRODUCING/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.io.ManagedSelector$$Lambda$28/937437482@4af70944 in QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED EatWhatYouKill@3f725306/SelectorProducer@a2ddf26/IDLE/p=false/QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=7,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}][pc=0,pic=0,pec=0,epc=0]@2022-02-10T13:31:53.907+05:30
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ManagedSelector@7a04fea7{STOPPED} id=0 keys=-1 selected=-1 updates=0
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED SelectorManager@Spark@7eae3764{HTTP/1.1, (http/1.1)}{0.0.0.0:4040}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping HttpConnectionFactory@3db972d2[HTTP/1.1]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED HttpConnectionFactory@3db972d2[HTTP/1.1]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ScheduledExecutorScheduler@64fe9da7{STARTED}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ScheduledExecutorScheduler@64fe9da7{STOPPED}
2022-02-10 13:31:53 INFO  AbstractConnector:381 - Stopped Spark@7eae3764{HTTP/1.1, (http/1.1)}{0.0.0.0:4040}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED Spark@7eae3764{HTTP/1.1, (http/1.1)}{0.0.0.0:4040}
2022-02-10 13:31:53 DEBUG AbstractHandler:107 - stopping Server@4d8286c4{STOPPING}[9.4.z-SNAPSHOT]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ContextHandlerCollection@fb6097b{STARTED}
2022-02-10 13:31:53 DEBUG AbstractHandler:107 - stopping ContextHandlerCollection@fb6097b{STOPPING}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ContextHandlerCollection@fb6097b{STOPPED}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ErrorHandler@69228e85{STARTED}
2022-02-10 13:31:53 DEBUG AbstractHandler:107 - stopping ErrorHandler@69228e85{STOPPING}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ErrorHandler@69228e85{STOPPED}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping QueuedThreadPool[SparkUI]@5d5160e6{STARTED,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:224 - Stopping QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=8<=200,i=8,r=-1,q=0}[ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:212 - stopping ReservedThreadExecutor@5a2bd7c8{s=0/8,p=0}
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED ReservedThreadExecutor@5a2bd7c8{s=-1/8,p=0}
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:317 - Waiting for Thread[SparkUI-29,5,main] for 14999
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-34,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1035 - run org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-31,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-32,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-33,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-36,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-29,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-35,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1038 - ran org.spark_project.jetty.util.thread.QueuedThreadPool$$Lambda$4/1665209618@14444612 in QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG QueuedThreadPool:317 - Waiting for Thread[SparkUI-33,5,] for 14998
2022-02-10 13:31:53 DEBUG QueuedThreadPool:317 - Waiting for Thread[SparkUI-30,5,main] for 14998
2022-02-10 13:31:53 DEBUG QueuedThreadPool:1065 - Thread[SparkUI-30,5,main] exited for QueuedThreadPool[SparkUI]@5d5160e6{STOPPING,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED QueuedThreadPool[SparkUI]@5d5160e6{STOPPED,8<=0<=200,i=8,r=-1,q=0}[NO_TRY]
2022-02-10 13:31:53 DEBUG AbstractLifeCycle:224 - STOPPED Server@4d8286c4{STOPPED}[9.4.z-SNAPSHOT]
2022-02-10 13:31:53 INFO  SparkUI:54 - Stopped Spark web UI at http://Clairvoyant-324.mshome.net:4040
2022-02-10 13:31:53 INFO  MapOutputTrackerMasterEndpoint:54 - MapOutputTrackerMasterEndpoint stopped!
2022-02-10 13:31:54 INFO  MemoryStore:54 - MemoryStore cleared
2022-02-10 13:31:54 INFO  BlockManager:54 - BlockManager stopped
2022-02-10 13:31:54 INFO  BlockManagerMaster:54 - BlockManagerMaster stopped
2022-02-10 13:31:54 INFO  OutputCommitCoordinator$OutputCommitCoordinatorEndpoint:54 - OutputCommitCoordinator stopped!
2022-02-10 13:31:54 INFO  SparkContext:54 - Successfully stopped SparkContext
2022-02-10 13:31:54 INFO  ShutdownHookManager:54 - Shutdown hook called
2022-02-10 13:31:54 INFO  ShutdownHookManager:54 - Deleting directory C:\Users\Anukul Thalkar\AppData\Local\Temp\spark-8ae4d730-6f96-4061-81fb-916ad9cdb37f
